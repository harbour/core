/* NOTE: - Please use these template for your new files, replace parts
           between curly braces {} with the appropriate text.
         - You can find a history at the end of the file. */

FILE HEADER TEMPLATE
====================

FUNCTION HEADER TEMPLATE
========================

/* $DOC$
   $AUTHOR$
      Copyright YYYY FirstName LastName <me@example.org>
   $NAME$
      StartHere()
   $CATEGORY$

   $SUBCATEGORY$

   $ONELINER$

   $SYNTAX$

   $ARGUMENTS$

   $RETURNS$

   $DESCRIPTION$

   $EXAMPLES$

   $STATUS$

   $COMPLIANCE$

   $PLATFORMS$

   $VERSION$

   $FILES$

   $SEEALSO$
      Comma separated list of references
   $END$
 */

HEADER EXAMPLES
===============

/* $DOC$
   $AUTHOR$
      Copyright YYYY FirstName LastName <me@example.org>
   $NAME$
      IsLeapYr()
   $CATEGORY$
      Date functions
   $ONELINER$
      Test if a date falls in a leap year.
   $SYNTAX$
      IsLeapYr( [<dDate>] ) --> <lIsLeap>
   $ARGUMENTS$
      <dDate> is an optional date. If not supplied is defaults to the
      value returned from Date().
   $RETURNS$
      .T. if <dDate> falls in a leap year, .F. if not.
   $DESCRIPTION$
      IsLeapYr() can be used to check if a given year is a leap year.
   $EXAMPLES$
      /* Check if it's a leap year. */

      IF IsLeapYr()
         ? "One extra day before you get paid this Feb!!"
      ELSE
         ? "A normal year"
      ENDIF
   $STATUS$
      C
   $COMPLIANCE$
      IsLeapYr() works exactly like CA-Cl*pper's IsLeapYr(), if your
      CA-Cl*pper doesn't have such a function you're probably in a
      different universe from the author of this function.
   $PLATFORMS$
      All
   $FILES$

   $SEEALSO$
      Date(), IsWeekend(), IsHarbourFinished(), IsApocalypse(), SET DATE
   $END$
 */

/* $DOC$
   $AUTHOR$
      Copyright YYYY FirstName LastName <me@example.org>
   $TEMPLATE$
      Function
   $NAME$
      hb_dateEncStr()
   $CATEGORY$
      C level API
   $SUBCATEGORY$
      Date/Time
   $ONELINER$

   $SYNTAX$
      C Prototype

      #include <hbdate.h>
      long hb_dateEncStr( char * szDate )
   $ARGUMENTS$
      <szDate>
   $RETURNS$
      <lResult>
   $DESCRIPTION$

   $EXAMPLES$

   $STATUS$
      R
   $COMPLIANCE$
      NA
   $FILES$
   $PLATFORMS$
      All
   $VERSION$
      1.0
   $SEEALSO$

   $END$
 */
