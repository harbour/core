/* $DOC$
   $AUTHOR$
      Copyright 1999 Jose Lalin <dezac@corevia.com>
   $TEMPLATE$
      Function
   $NAME$
      IsAffirm()
   $CATEGORY$
      API
   $SUBCATEGORY$
      Language and Nation
   $ONELINER$
      Checks if passed char is an affirmation char
   $SYNTAX$
      IsAffirm( <cChar> ) --> lTrueOrFalse
   $ARGUMENTS$
      <cChar> is a char or string of chars
   $RETURNS$
      <lTrueOrFalse> True if passed char is an affirmation char, otherwise
      false
   $DESCRIPTION$
      This function is used to check if a user's input is true or not
      according to the msgxxx module used.
   $EXAMPLES$
      // Wait until user enters Y
      DO WHILE ! IsAffirm( cYesNo )
         ACCEPT "Sure: " TO cYesNo
      ENDDO
   $STATUS$
      R
   $COMPLIANCE$
      C
   $FILES$
      Library is core
   $SEEALSO$
      IsNegative(), NationMsg()
   $END$
 */

/* $DOC$
   $AUTHOR$
      Copyright 1999 Jose Lalin <dezac@corevia.com>
   $TEMPLATE$
      Function
   $NAME$
      IsNegative()
   $CATEGORY$
      API
   $SUBCATEGORY$
      Language and Nation
   $ONELINER$
      Checks if passed char is a negation char.
   $SYNTAX$
      IsNegative( <cChar> ) --> lTrueOrFalse
   $ARGUMENTS$
      <cChar> is a char or string of chars
   $RETURNS$
      <lTrueOrFalse> True if passed char is a negation char, otherwise
      false.
   $DESCRIPTION$
      This function is used to check if a user's input is true or not
      according to the msgxxx module used.
   $EXAMPLES$
      // Wait until user enters N
      DO WHILE ! IsNegative( cYesNo )
         ACCEPT "Sure: " TO cYesNo
      ENDDO
   $STATUS$
      R
   $COMPLIANCE$
      C
   $FILES$
      Library is core
   $SEEALSO$
      IsAffirm(), NationMsg()
   $END$
 */

/* $DOC$
   $AUTHOR$
      Copyright 1999 Jose Lalin <dezac@corevia.com>
   $TEMPLATE$
      Function
   $NAME$
      NationMsg()
   $CATEGORY$
      API
   $SUBCATEGORY$
      Language and Nation
   $ONELINER$
      Returns international strings messages.
   $SYNTAX$
      NationMsg( <nMsg> ) --> cMessage
   $ARGUMENTS$
      <nMsg> is the message number you want to get.
   $RETURNS$
      <cMessage> if <nMsg> is a valid message selector, returns the message.
      If <nMsg> is NIL, it returns "Invalid Argument", and if <nMsg> is any
      other type it returns an empty string.
   $DESCRIPTION$
      NationMsg() returns international message descriptions.
   $EXAMPLES$
      // Displays "Sure Y/N: "  and waits until user enters Y
      // Y/N is the string for NationMsg( 12 ) with default natmsg module.
      DO WHILE ! IsAffirm( cYesNo )
         ACCEPT "Sure " + NationMsg( 12 ) + ": " TO cYesNo
      ENDDO
   $STATUS$
      R
   $COMPLIANCE$
      C
   $FILES$
      Library is core
   $SEEALSO$
      IsAffirm(), IsNegative()
   $END$
 */
