/* $DOC$
   $AUTHOR$
      2016 Pete D. <pete_westg@yahoo.gr>
   $TEMPLATE$
      Function
   $NAME$
      hb_LeftEq()
   $CATEGORY$
      API
   $SUBCATEGORY$
      Strings
   $ONELINER$
      Checks if a sub-string matches to leftmost part of a string.
   $SYNTAX$
      hb_LeftEq( <cString>, <cSubString> ) --> lMatch
   $ARGUMENTS$
      <cString> Main string of comparison.

      <cSubString> Sub-string compared to leftmost part of <cString>
   $RETURNS$
      <lMatch> Boolean flag indicating if the matching was successful
   $DESCRIPTION$
      This function checks if all characters (one by one and with the given order)
      of <cSubString> match to leftmost (same length) part of <cString>
      or in other words, checks if <cString> starts with <cSubString>,
      in which case returns .T., otherwise .F.

      Basically it's equivalent to the expression:
      `Left( <cString>, Len( <cSubString> ) ) == <cSubString>`
      but faster and shorter.

      NOTE: Case sensitive!
   $EXAMPLES$
      ? hb_LeftEq( "Harbour", "Ha" )  // --> .T.
      ? hb_LeftEq( "Harbour", "ha" )  // --> .F.
   $STATUS$
      R
   $COMPLIANCE$
      H
   $PLATFORMS$
      All
   $FILES$
      Library is core
   $SEEALSO$
      hb_LeftEqI(), Left(), At()
   $END$
 */

/* $DOC$
   $AUTHOR$
      2016 Pete D. <pete_westg@yahoo.gr>
   $TEMPLATE$
      Function
   $NAME$
      hb_LeftEqI()
   $CATEGORY$
      API
   $SUBCATEGORY$
      Strings
   $ONELINER$
      Checks if a sub-string matches to leftmost part of a string.
   $SYNTAX$
      hb_LeftEqI( <cString>, <cSubString> ) --> lMatch
   $ARGUMENTS$
      <cString> Main string of comparison.

      <cSubString> Sub-string compared to leftmost part of <cString>.
   $RETURNS$
      <lMatch> Boolean flag indicating if the matching was successful.
   $DESCRIPTION$
      This function is identical to hb_LeftEq() (see above for details)
      but it is case *insensitive*!
   $EXAMPLES$
      ? hb_LeftEqI( "Harbour", "HA" )  // --> .T.
      ? hb_LeftEqI( "Harbour", "ha" )  // --> .T.
      ? hb_LeftEq( "Harbour", "HA" )   // --> .F.
   $STATUS$
      R
   $COMPLIANCE$
      H
   $PLATFORMS$
      All
   $FILES$
      Library is core
   $SEEALSO$
      hb_LeftEqI(), Left(), At()
   $END$
 */
