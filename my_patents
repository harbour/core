























Sign in
























Screen reader users: click this link for accessible mode. Accessible mode has the same essential features but works better with your reader.





Go to Google Books Home 




 

 
 

 
 



Patents





Find prior art

Discuss this patent

View PDF

Download PDF




 

Patent US7370114 - Software downloading using a television broadcast channel







Publication number US7370114 B1 
Publication type Grant 
Application number US 09/417,863 
Publication date 6 May 2008 
Filing date 13 Oct 1999 
Priority date 11 Sep 1998 
Fee status Paid 
Also published as US7548988, US7996552, US20080275998, US20090254673 
  
Inventors Jeffry Jovan Philyaw, David Kent Mathews 
Original Assignee Lv Partners, L.P. 
Export Citation BiBTeX, EndNote, RefMan 
Patent Citations (114), Non-Patent Citations (26), Referenced by (11), Classifications (15), Legal Events (9)  
 

External Links: USPTO, USPTO Assignment, Espacenet 


Software downloading using a television broadcast channel 
US 7370114 B1


Abstract


A software distribution architecture having a television broadcast system as its infrastructure. Software from a software repository (1600) is mixed into a television broadcast system and transmitted into one or more selected channels at prescribed dates and times. An at-home subscriber, capable of receiving with a receiver (1608) the one or more select channels, switches to the one or more channels carrying the software distribution with a channel selector (1611). The subscriber, having programmed a controller (1616) with a programmer (1620) for the date, time, software ID, and channel of the software broadcast, then downloads the software package to a storage device (1622) for ultimate transfer to a PC (1624). A validation and accounting system (1628) then records the software download transaction and transmits this information over a PSTN (1632) to a provider accounting system (1630) such that the subscriber is billed for the software package which was downloaded.
 

Images(12)





Patent Drawing

 


Patent Drawing

 


Patent Drawing

 


Patent Drawing

 


Patent Drawing

 


Patent Drawing

 


Patent Drawing

 


Patent Drawing

 


Patent Drawing

 


Patent Drawing

 


Patent Drawing

 


Patent Drawing

 

Previous page

Next page



Claims(30)





1. A method for distributing software, comprising the steps of: 
providing a television broadcast distribution system having one or more broadcast channels for broadcasting analog and digital television information to a receiver of a user;

designating select ones of the one or more broadcast channels for the transmission of one or more discrete software data streams;

transmitting the one or more discrete software data streams over the select ones of the one or more broadcast channels at a scheduled time, each of the one or more discrete software data streams having a unique ID associated therewith, which unique ID for each of the one or more discrete software streams is associated therewith by an associated software vendor and each of the unique IDs is unique to a user;

the user associating with a monitoring interface of the user that is connected to the receiver, the unique ID associated with that user and a desired one of the one or more discrete software streams;

selecting, in the monitoring interface associated with the user, selected ones of the one or more discrete software data streams according to the respective unique IDs for download via the receiver;

downloading the selected one or more discrete software data streams to a user storage device during the scheduled time for use by the user, the user storage device connected to the receiver through said monitoring interface; and

deleting the unique ID from the monitoring interface for each of the one or more discrete software data streams downloaded after downloading thereof.



2. The method of claim 1, wherein the television broadcast distribution system is a cable television broadcast system.



3. The method of claim 1, further comprising an error checking step during the step of downloading such that the one or more software data streams which are downloaded are checked for errors during the download process.



4. The method of claim 3, wherein the receiver automatically re-selects for download, and downloads, the one or more software data streams which fail the step of error checking.



5. The method of claim 1, wherein the step of broadcasting broadcasts the one or more software data streams repetitively during a specific period of time.



6. The method of claim 1, wherein the step of broadcasting broadcasts the one or more software data streams once during a specific time period.



7. The method of claim 1, further comprising a step of accounting which logs the unique IDs of the one or more software data streams which were downloaded with an accounting device, and transmits the unique IDs to a provider of the one or more software data streams using the accounting device.



8. The method of claim 7, wherein the accounting device interfaces to a public-switched telephone network, and transmits the unique IDs over the public-switched telephone network to the provider of the one or more software data streams.



9. The method of claim 7, wherein the accounting device interfaces to a packet-switched global communication network, and transmits the unique IDs over the global communication network to the provider of the one or more software data streams.



10. The method of claim 1, wherein the step of selecting further comprises the step of programming the receiver with time, channel, and the unique ID information.



11. The method of claim 1, wherein the one or more software data streams comprise software applications which are broadcast on a first channel, and one or more software updates which are broadcast on a second channel.



12. The method of claim 1, wherein the step of downloading downloads the selects ones of the one or more software data streams directly to a user computer over a communication link existing between the receiver and the user computer.



13. The method of claim 12, wherein the communication link is a universal serial bus.



14. The method of claim 12, wherein the communication link is a high-performance serial bus.



15. The method of claim 1, wherein the television broadcast distribution system is a digital television broadcast system.



16. A system for distributing software, comprising: 
a television broadcast distribution system having one or more broadcast channels for broadcasting analog and digital television information to a receiver of a user;

one or more discrete software data streams designated for transmission on select ones of said one or more broadcast channels, each of the one or more discrete data streams having a unique ID associated therewith, which unique ID for each of the one or more discrete software streams is associated therewith by an associated software vendor and each of the unique IDs is unique to a user; and

a user storage device associated with the user and connected to said receiver through a monitoring interface and said user storage device operable to store both one or more of the unique IDs associated with the user prior to downloading of the one or more discrete software data streams and, after downloading thereof, for storing said downloaded one or more discrete software data streams—wherein each of said unique IDs stored in said user interface is stored there by the user;

wherein said one or more discrete software data streams are transmitted over said select ones of said one or more broadcast channels at a scheduled time, each of said one or more discrete software data streams having associated therewith the associated one of said unique IDs; and

wherein said select ones of said one or more discrete software data streams are downloaded via said receiver to said monitoring interface for filtering said discrete software data streams according to said respective unique IDs, and wherein said unique ID for each of the one or more discrete software data streams downloaded deleted from the user storage device after downloading thereof.



17. The system of claim 16, wherein said television broadcast distribution system is a cable television broadcast system.



18. The system of claim 16, wherein said select ones of said one or more software data streams are checked for errors when being downloaded.



19. The system of claim 18, wherein said receiver automatically re-selects for download, and downloads, said one or more software data streams which fail the error checking process.



20. The system of claim 16, wherein said one or more software data streams are broadcast repetitively during a specific period of time.



21. The system of claim 16, where said one or more software data streams are broadcast once during a specific time period.



22. The system of claim 16, wherein an accounting device logs said unique IDs of said one or more software data streams which were downloaded, and transmits said unique IDs to a provider of said one or more software data streams using said accounting device.



23. The system of claim 22, wherein said accounting device interfaces to a public-switched telephone network, and transmits said unique IDs over said public-switched telephone network to said provider of said one or more software data streams.



24. The system of claim 22, wherein said accounting device interfaces to a packet-switched global communication network, and transmits said unique IDs over said global communication network to said provider of said one or more software data streams.



25. The system of claim 16, wherein said receiver is programmed by inputting parameters which comprise time, channel, and said unique ID information.



26. The system of claim 16, wherein said one or more software data streams comprise software applications which are broadcast on a first channel, and one or more software updates which are broadcast on a second channel.



27. The system of claim 16, wherein said select ones of said one or more software data streams are downloaded directly to a user computer over a communication link existing between said receiver and said user computer.



28. The system of claim 27, wherein said communication link is a universal serial bus.



29. The system of claim 27, wherein said communication link is a high-performance serial bus.



30. The system of claim 16, wherein said television broadcast distribution system is a digital television broadcast system.


Description


CROSS REFERENCE TO RELATED APPLICATION 
This application is a Continuation-in-Part of U.S. patent application Ser. No. 09/151,530, entitled “METHOD FOR CONTROLLING A COMPUTER WITH AN AUDIO SIGNAL,” filed on Sep. 11, 1998, and which has now issued on Aug. 1, 2000, as U.S. Pat. No. 6,098,106.
TECHNICAL FIELD OF THE INVENTION 
This invention is related to a method for downloading software using a television broadcast channel.
BACKGROUND OF THE INVENTION 
With the enormous number of users connecting online to access a wide variety of products and services, network bandwidth is becoming a limiting factor in providing these products and services. The typical connection mode for home users is a 56K analog modem which is sufficient for surfing various web sites of interest by the user but is becoming increasingly prohibitive for network traffic that comprises streaming audio, video and lengthy file downloads. Conventional software distribution methods include providing hard copy manuals and distribution media such as floppy diskettes, and more recently, compact disks (CDs) which contain the software application files and electronic versions of the manuals.

More recently, vendors have moved to offering for purchase software applications and electronic manuals by direct download from vendor websites over a global communication network (commonly known as the Internet). This introduces enormous cost savings for the vendor by eliminating any paper costs, distribution costs, and media costs incurred by conventional methods of distribution. However, this method of distribution is very time consuming for a user who has a low bandwidth analog connection (e.g., 33K and 56K) and can even be prohibitive for those who have the more recent digital connections such as digital subscriber line (DSL) and cable modems which operate in the megabyte download regime. For example, where operating systems or application bundles contain many applications, the file sizes can approach 500 megabytes or more. Download of a file this size using a 56K modem will take many hours at best, and ties up the user's telephone line, if they have only the single telephone line to connect to the network. Furthermore, the download process can be interrupted by any number of causes such as power interruptions, connection problems, etc., making such a download prospect tedious, if not nearly impossible. Therefore such massive downloads, as seems to be the current trend in software distribution, may very well be prohibitive for most users having analog connections, and even those coming online today in the presence of newer and more faster connection technologies such as DSL and cable modems.

Another headache related to existing on-line distribution methods is that vendor servers can handle only a fixed number of users who are accessing the server for a download. Therefore, users must “stand in line” to gain access to the server in order to initiate a lengthy download of the software. Thus distribution of one or more applications on the same server or even dedicated application distribution servers can be a tedious process for the user and impacting customer relations with the vendor.

Current on-line payment methods also are not well established to where the customer believes his or her account information is secure and will not be compromised during its transmission to the software vendor. Therefore, the public-switched telephone network (PSTN) remains the only secure accepted method for transmitting such account information.

However, the infrastructure exists to handle such massive download capabilities. The existing broadcast television and cable industry has such an infrastructure in place at this time. The high bandwidth of such a system would alleviate any lengthy download problems by saving many hours of dedicated connection time required for most user having analog connections. Additionally, the process would be painless for the user since programming to download a broadcast software distribution is very similar to using existing video tape recorders to record a television program. The user need not be present during the download process as it would be accomplished automatically. Furthermore, such broadcast industry also has in place the accounting and billing systems to automatically bill the user according to any particular software that may be downloaded across a broadcast channel. Therefore, it is desirable that the television broadcast infrastructure be used to distribute software to the user.
SUMMARY OF THE INVENTION 
The invention disclosed and claimed herein is a method for distributing software. A television broadcast distribution system is provided having one or more broadcast channels for broadcasting analog and digital television information to a receiver of a user. Select ones of the one or more broadcast channels are designated for the transmission of one or more software data streams. The software data streams are transmitted over the select ones of the one or more broadcast channels at a scheduled time, each of the one or more software data streams having a unique ID associated therewith. One or more of the software data streams are selected for download via the receiver according to the respective unique ID. The selected one or more software data streams are downloaded via the receiver to a user storage device during the scheduled time.
BRIEF DESCRIPTION OF THE DRAWINGS 
For a more complete understanding of the present invention and the advantages thereof, reference is now made to the following description taken in conjunction with the accompanying Drawings in which:

FIG. 1 illustrates a block diagram of an embodiment for accessing information across a global communication network;

FIG. 2 illustrates the computer components employed in the embodiment of FIG. 1;

FIG. 3 illustrates system interactions over a global network;

FIGS. 4 a-4 e illustrate the various message packets transmitted between the source PC and network servers used in an embodiment;

FIG. 5 is a flowchart depicting operation of the system according to a preferred embodiment;

FIG. 6 illustrates a flowchart of actions taken by the Advertiser Reference Server (“ARS”) server;

FIG. 7 illustrates a flowchart of the interactive process between the source computer and ARS;

FIG. 8 illustrates a web browser page receiving the modified URL/advertiser product data according to a preferred embodiment;

FIG. 9 illustrates a simplified block diagram of the disclosed embodiment;

FIG. 10 illustrates a more detailed, simplified block diagram of the embodiment of FIG. 9;

FIG. 11 illustrates a diagrammatic view of a method for performing the routing operation;

FIG. 12 illustrates a block diagram of an alternate embodiment utilizing an optical region in the video image for generating the routing information;

FIG. 13 illustrates a block diagram illustrating the generation of a profile with the disclosed embodiment;

FIG. 14 illustrates a flowchart for generating the profile and storing at the ARS;

FIG. 15 illustrates a flowchart for processing the profile information when information is routed to a user;

FIG. 16 illustrates a block diagram of the software broadcast distribution system, according to a disclosed embodiment;

FIG. 17 illustrates a flowchart of the process for downloading selected software distributions;

FIG. 18 illustrates a diagrammatic view of the broadcast software program with a sequence of software packages transmitted;

FIG. 19 illustrates a flowchart depicting the operation of examining the transmission link for software;

FIG. 20 illustrates a flowchart depicting the operation of requesting an authorization code;

FIG. 21 illustrates the operation of deleting the authorization code once received;

FIG. 22 illustrates the operation wherein E-Mail is transmitted on the data channel; and

FIG. 23 illustrates a flowchart for the E-Mail operation.
 DETAILED DESCRIPTION OF THE INVENTION 
Referring now to FIG. 1, there is illustrated a block diagram of a system for controlling a personal computer (“PC”) 112 via an audio tone transmitted over a wireless system utilizing a TV. In the embodiment illustrated in FIG. 1, there is provided a transmission station 101 and a receive station 117 that are connected via a communication link 108. The transmission station 101 is comprised of a television program source 104, which is operable to generate a program in the form of a broadcast signal comprised of video and audio. This is transmitted via conventional techniques along channels in the appropriate frequencies. The program source is input to a mixing device 106, which mixing device is operable to mix in an audio signal. This audio signal is derived from an audio source 100 which comprises a coded audio signal which is then modulated onto a carrier which is combined with the television program source 104. This signal combining can be done at the audio level, or it can even be done at the RF level in the form a different carrier. However, the preferred method is to merely sum the audio signal from the modulator 102 into the audio channel of the program that is generated by the television program source 104. The output thereof is provided from the mixing device 106 in the form of broadcast signal to an antenna 107, which transmits the information over the communication link 108 to an antenna 109 on the receive side.

On the receive side of the system, a conventional receiver 110, such as a television is provided. This television provides a speaker output which provides the user with an audible signal. This is typically associated with the program. However, the receiver 110 in the disclosed embodiment, also provides an audio output jack, this being the type RCA jack. This jack is utilized to provide an audio output signal on a line 113 which is represented by an audio signal 111. This line 113 provides all of the audio that is received over the communication link 108 to the PC 112 in the audio input port on the PC 112. However, it should be understood that, although a direct connection is illustrated from the receiver 110 to the PC 112, there actually could be a microphone pickup at the PC 112 which could pick the audio signal up. In the disclosed embodiment, the audio signal generated by the advertiser data input device 100 is audible to the human ear and, therefore, can be heard by the user. Therefore, no special filters are needed to provide this audio to the PC 112.

The PC 112 is operable to run programs thereon which typically are stored in a program file area 116. These programs can be any type of programs such as word processing programs, application programs, etc. In the disclosed embodiment, the program that is utilized in the system is what is referred to as a “browser.” The PC 112 runs a browser program to facilitate the access of information on the network, for example, a global communication network known as the “Internet” or the World-Wide-Web (“Web”). The browser is a hypertext-linked application used for accessing information. Hypertext is a term used to describe a particular organization of information within a data processing system, and its presentation to a user. It exploits the computer's ability to link together information from a wide variety of sources to provide the user with the ability to explore a particular topic. The traditional style of presentation used in books employs an organization of the information which is imposed upon it by limitations of the medium, namely fixed sized, sequential paper pages. Hypertext systems, however, use a large number of units of text or other types of data such as image information, graphical information, video information, or sound information, which can vary in size. A collection of such units of information is termed a hypertext document, or where the hypertext documents employ information other than text, hypermedia documents. Multimedia communications may use the Hypertext Transfer Protocol (“HTTP”), and files or formatted data may use the Hypertext Markup Language (“HTML”). This formatting language provides for a mingling of text, graphics, sound, video, and hypertext links by “tagging” a text document using HTML. Data encoded using HTML is often referred to as an “HTML document,” an “HTML page,” or a “home page.” These documents and other Internet resources may be accessed across the network by means of a network addressing scheme which uses a locator referred to as a Uniform Resource Locator (“URL”), for example, “http://www.digital.com.”

The Internet is one of the most utilized networks for interconnecting distributed computer systems and allows users of these computer systems to exchange data all over the world. Connected to the Internet are many private networks, for example, corporate or commercial networks. Standard protocols, such as the Transport Control Protocol (“TCP”) and the Internet Protocol (“IP”) provide a convenient method for communicating across these diverse networks. These protocols dictate how data are formatted and communicated. As a characteristic of the Internet, the protocols are layered in an IP stack. At higher levels of the IP stack, such as the application layer (where HTTP is employed), the user information is more readily visible, while at lower levels, such as the network level (where TCP/IP are used), the data can merely be observed as packets or a stream of rapidly moving digital signals. Superimposed on the Internet is a standard protocol interface for accessing Web resources, such as servers, files, Web pages, mail messages, and the like. One way that Web resources can be accessed is by browsers made by Netscape® and Microsoft Internet Explorer®.

Referring again now to FIG. 1, the user can load this program with the appropriate keystrokes such that a browser window will be displayed on a display 118. In one embodiment, the user can run the browser program on the PC 112 such that the browser window is displayed on the display 118. While watching a preferred program, the user can also view display 118. When an audio signal is received by the receiver 110 and the encoded information is contained therein that was input thereto by the advertiser, the PC 112 will then perform a number of operations. The first operation, according to the disclosed embodiment, is to extract the audio information within the received audio signal in the form of digital data, and then transmit this digital data to a defined location on the global communication network via a modem connection 114. This connection will be described hereinbelow. This information will be relayed to a proprietary location and the instructions sent back to the PC 112 as to the location of the advertiser associated with the code, and the PC 112 will then effect a communication link to that location such that the user can view on the display 118 information that the advertiser, by the fact of putting the tone onto the broadcast channel, desires the viewer to view. This information can be in the form of interactive programs, data files, etc. In one example, when an advertisement appears on the television, the tone can be generated and then additional data displayed on the display 118. Additionally, a streaming video program could be played on the PC received over the network, which streaming video program is actually longer than the advertising segment on the broadcast. Another example would be a sports game that would broadcast the tone in order to allow a user access to information that is not available over the broadcast network, such as additional statistics associated with the sports program, etc.

By utilizing the system described herein with respect to the disclosed embodiment of FIG. 1, an advertiser is allowed the ability to control a user's PC 112 through the use of tones embedded within a program audio signal. As will described hereinbelow, the disclosed embodiment utilizes particular routing information stored in the PC 112 which allows the encoded information in the received audio signal to route this information to a desired location on the network, and then allow other routing information to be returned to the PC 112 for control thereof to route the PC 112 to the appropriate location associated with that code.

Referring now to FIG. 2, there is illustrated a computer 204, similar to computer 112, connected to display information on display 118. The computer 204 comprises an internal audio or “sound” card 206 for receiving the transmitted audio signal through receive antenna 109 and receiver 110. The sound card 206 typically contains analog-to-digital circuitry for converting the analog audio signal into a digital signal. The digital signal may then be more easily manipulated by software programs. The receiver 110 separates the audio signal from the video signal. A special trigger signal located within the transmitted advertiser audio signal triggers proprietary software running on the computer 204 which launches a communication application, in this particular embodiment, the web browser application located on the PC 204. Coded advertiser information contained within the audio signal is then extracted and appended with the address of a proprietary server located on the communication network. The remote server address is in the form of a URL. This appended data, in addition to other control codes, is inserted directly into the web browser application for automatic routing to the communication network.

The web browser running on PC 204, and communicating to the network, through an internal modem 208, in this embodiment, transmits the advertiser information to the remote server. The remote server cross-references the advertiser product information to the address of the advertiser server located on the network. The address of the advertiser server is routed back through the PC 204 web browser to the advertiser server. The advertiser product information is returned to PC 204 to be presented to the viewer on display 118. In this particular embodiment, the particular advertiser product information displayed is contained within the advertiser's web page 212. As mentioned above, the audio signal is audible to the human ear. Therefore the audio signal, as emitted from the TV speakers, may be input to the sound card 206 via a microphone. Furthermore, the audio signal need not be a real-time broadcast, but may be on video tapes, CDs, DVD, or other media which may be displayed at a later date. With the imminent implementation of high definition digital television, the audio signal output from the TV may also be digital. Therefore, direct input into a sound card for A/D purposes may not be necessary, but alternative interfacing techniques to accommodate digital-to-digital signal formats would apply.

Referring now to FIG. 3, there is illustrated a source PC 302, similar to PCs 204 and 112, connected to a global communication Network (GCN) through an interface 304. In this embodiment, the audio signal 111 is received by PC 302 through its sound card 206. The audio signal 111 comprises a trigger signal which triggers proprietary software into launching a web browser application residing on the PC 302. The audio signal 111 also comprises advertiser product information which is extracted and appended with URL information of an Advertiser Reference Server (“ARS”) 308. The ARS 308 is a system disposed on the GCN 306 that is defined as the location to which data in the audio signal 111 is to be routed. As such, data in the audio signal 111 will always be routed to the ARS 308, since a URL is unique on the GCN 306.

Connected to the ARS 308 is a database 310 of product codes and associated manufacturer URLs. The database 310 undergoes a continual update process which is transparent to the user. As companies sign-on, i.e., subscribe, to this technology, manufacturer and product information is added to the database 310 without interrupting operation of the source PC 302 with frequent updates. When the advertiser server address URL is obtained from the ARS database 310, it and the request for the particular advertiser product information are automatically routed back through the web browser on PC 302, over to the respective advertiser server for retrieval of the advertiser product information to the PC 302. Additionally although the disclosed invention discusses a global communication network, the system is also applicable to LANs, WANs, and peer-to-peer network configurations. It should be noted that the disclosed architecture is not limited to a single source PC 302, but may comprise a plurality of source PCs, e.g., PC 300 and PC 303. Moreover, a plurality of ARS 308 systems and advertiser servers 312 may be implemented, e.g., ARS 314, and advertiser server A 316, respectively.

The information transactions, in general, which occur between the networked systems of this embodiment, over the communication network, are the following. The web browser running on source PC 302 transmits a message packet to the ARS 308 over Path “A.” The ARS 308 decodes the message packet and performs a cross-reference function with product information extracted from the received message packet to obtain the address of an advertiser server 312. A new message packet is assembled comprising the advertiser server 312 address, and sent back to the source PC 302 over Path “B.” A “handoff” operation is performed whereby the source PC 302 browser simply reroutes the information on to the advertiser server 312 over Path “C,” with the appropriate source and destination address appended. The advertiser server 312 receives and decodes the message packet. The request-for-advertiser-product-information is extracted and the advertiser 312 retrieves the requested information from its database for transmission back to the source PC 302 over Path “D.” The source PC 302 then processes the information, i.e., for display to the viewer. The optional Path “E” is discussed hereinbelow. It should be noted that the disclosed methods are not limited to only browser communication applications, but may accommodate, with sufficient modifications by one skilled in the art, other communication applications used to transmit information over the Internet or communication network.

Referring now to FIG. 4 a, the message packet 400 sent from the source PC 302 to ARS 308 via Path “A” comprises several fields. One field comprises the URL of the ARS 308 which indicates where the message packet is to be sent. Another field comprises the advertiser product code or other information derived from the audio signal 111, and any additional overhead information required for a given transaction. The product code provides a link to the address of the advertiser server 312, located in the database 310. Yet another field comprises the network address of the source PC 302. In general, network transmissions are effected in packets of information, each packet providing a destination address, a source address, and data. These packets vary depending upon the network transmission protocol utilized for communication. Although the protocols utilized in the disclosed embodiment are of a conventional protocol suite commonly known as TCP/IP, it should be understood that any protocols providing the similar basic functions can be used, with the primary requirement that a browser can forward the routing information to the desired URL in response to keystrokes being input to a PC. However, it should be understood that any protocol can be used, with the primary requirement that a browser can forward the product information to the desired URL in response to keystrokes being input to a PC. Within the context of this disclosure, “message packet” shall refer to and comprise the destination URL, product information, and source address, even though more than a single packet must be transmitted to effect such a transmission.

Upon receipt of the message packet 400 from source PC 302, ARS 308 processes the information in accordance with instructions embedded in the overhead information. The ARS 308 specifically will extract the product code information from the received packet 400 and, once extracted, will then decode this product code information. Once decoded, this information is then compared with data contained within the ARS advertiser database 310 to determine if there is a “hit.” If there is no “hit” indicating a match, then information is returned to the browser indicating such. If there is a “hit,” a packet 402 is assembled which comprises the address of the source PC 302, and information instructing the source PC 302 as to how to access, directly in a “handoff” operation, another location on the network, that of an advertiser server 312. This type of construction is relatively conventional with browsers such as Netscape® and Microsoft Internet Explorer® and, rather than displaying information from the ARS 308, the source PC 302 can then access the advertiser server 312. The ARS 308 transmits the packet 402 back to source PC 302 over Path “B.” Referring now to FIG. 4 b, the message packet 402 comprises the address of the source PC 302, the URL of the advertiser server 312 embedded within instructional code, and the URL of the ARS 308.

Upon receipt of the message packet 402 by the source PC 302, the message packet 402 is disassembled to obtain pertinent routing information for assembly of a new message packet 404. The web browser running on source PC 302 is now directed to obtain, over Path “C,” the product information relevant to the particular advertiser server 312 location information embedded in message packet 404. Referring now to FIG. 4 c, the message packet 404 for this transaction comprises the URL of the advertiser server 312, the request-for-product-information data, and the address of the source PC 302.

Upon receipt of the message packet 404 from source PC 302, advertiser server 312 disassembles the message packet 404 to obtain the request-for-product-information data. The advertiser server 312 then retrieves the particular product information from its database, and transmits it over Path “D” back to the source PC 302. Referring now to FIG. 4 d, the message packet 406 for this particular transaction comprises the address of the source PC 302, the requested information, and the URL of the advertiser server 312.

Optionally, the ARS 308 may make a direct request for product information over Path “E” to advertiser server 312. In this mode, the ARS 308 sends information to the advertiser server 312 instructing it to contact the source PC 302. This, however, is unconventional and requires more complex software control. The message packet 408 for this transaction is illustrated in FIG. 4 e, which comprises the URL of the advertiser server 312, the request-for-product-information data, and the address of the source PC 302. Since product information is not being returned to the ARS 308, but directly to the source PC 302, the message packet 408 requires the return address to be that of the source PC 302. The product information is then passed directly to PC 302 over Path “D.”

Referring now to FIG. 5, the method for detecting and obtaining product information is as follows. In decision block 500, a proprietary application running resident on a source computer PC 302 (similar to PC 204) monitors the audio input for a special trigger signal. Upon detection of the trigger signal, data following the trigger signal is decoded for further processing, in function block 502. In function block 504, the data is buffered for further manipulation. In decision block 506, a determination is made as to whether the data can be properly authenticated. If not, program flow continues through the “N” signal to function block 520 where the data is discarded. In function block 522, the program then signals for a retransmission of the data. The system then waits for the next trigger signal, in decision block 500. If properly authenticated in decision block 506, program flow continues through the “Y” signal path where the data is then used to launch the web browser application, as indicated in function block 508. In function block 510, the web browser receives the URL data, which is then automatically routed through the computer modem 208 to the network interface 304 and ultimately to the network 306. In function block 514, the ARS 308 responds by returning the URL of advertiser server 312 to the PC 302. In function block 516, the web browser running on the source PC 302, receives the advertiser URL information from the ARS 308, and transmits the URL for the product file to the advertiser server 312. In block 518, the advertiser server 312 responds by sending the product information to the source PC 302 for processing.

The user may obtain the benefits of this architecture by simply downloading the proprietary software over the network. Other methods for obtaining the software are well-known; for example, by CD, diskette, or pre-loaded hard drives.

Referring now to FIG. 6, there is illustrated a flowchart of the process the ARS 308 may undergo when receiving the message packet 400 from the source PC 302. In decision block 600, the ARS 308 checks for the receipt of the message packet 400. If a message packet 400 is not received, program flow moves along the “N” path to continue waiting for the message. If the message packet 400 is received, program flow continues along path “Y” for message processing. Upon receipt of the message packet 400, in function block 602, the ARS 308 decodes the message packet 400. The product code is then extracted independently in function block 604 in preparation for matching the product code with the appropriate advertiser server address located in the database 310. In function block 606, the product code is then used with a look-up table to retrieve the advertiser server 312 URL of the respective product information contained in the audio signal data. In function block 608, the ARS 308 then assembles message packet 402 for transmission back to the source PC 302. Function block 610 indicates the process of sending the message packet 402 back to the source PC 302 over Path “B.”

Referring now to FIG. 7, there is illustrated a flowchart of the interactive processes between the source PC 302 and the advertiser server 312. In function block 700, the source PC 302 receives the message packet 402 back from the ARS 308 and begins to decode the packet 402. In function block 702, the URL of the advertiser product information is extracted from the message packet 402 and saved for insertion into the message packet 404 to the advertiser server 312. The message packet 404 is then assembled and sent by the source PC 302 over Path “C” to the advertiser server 312:n function block 704. While the source PC 302 waits, in function block 706, the advertiser server 312 receives the message packet 404 from the source PC 302, in function block 708, and disassembles it. The product information location is then extracted from the message packet 404 in function block 710. The particular product information is retrieved from the advertiser server 312 database for transmission back to the source PC 302. In function block 712, the product information is assembled into message packet 406 and then transmitted back to the source PC 302 over Path “D.” Returning to the source PC 302 in function block 714, the advertiser product information contained in the message packet 406 received from the advertiser server 312, is then extracted and processed in function block 716.

Referring now to FIG. 8, after receipt of a trigger signal, a web browser application on a source PC 302 is automatically launched and computer display 800 presents a browser page 802. Proprietary software running on the source PC 302 processes the audio signal data after being digitized through the sound card 206. The software appropriately prepares the data for insertion directly into the web browser by extracting the product information code and appending keystroke data to this information. First, a URL page 804 is opened in response to a Ctrl-O command added by the proprietary software as the first character string. Opening URL page 804 automatically positions the cursor in a field 806 where additional keystroke data following the Ctrl-O command will be inserted. After URL page 804 is opened, the hypertext protocol preamble http:// is inserted into the field 806. Next, URL information associated with the location of the ARS 308 is inserted into field 806. Following the ARS 308 URL data are the characters /? to allow entry of variables immediately following the /? characters. In this embodiment, the variable following is the product information code received in the audio signal. The product code information also provides the cross-reference information for obtaining the advertiser URL from the ARS database 310. Next, a carriage return is added to send the URL/product data and close the window 804. After the message packet 400 is transmitted to the ARS 308 from the source PC 302, transactions from the ARS 308, to the source PC 302, to the advertiser server 312, and back to the source PC 302, occur quickly and are transparent to the viewer. At this point, the next information the viewer sees is the product information which was received from the advertiser server 312.

Referring now to FIG. 9, there is illustrated a block diagram of a more simplified embodiment. In this embodiment, a video source 902 is provided which is operable to provide an audio output on an audio cable 901 which provides routing information referred to by reference numeral 904. The routing information 904 is basically information contained within the audio signal. This is an encoded or embedded signal. The important aspect of the routing information 904 is that it is automatically output in realtime as a function of the broadcast of the video program received over the video source 902. Therefore, whenever the program is being broadcast in realtime to the user 908, the routing information 904 will be output whenever the producer of the video desires it to be produced. It should be understood that the box 902 representing the video source could be any type of media that will result in the routing information being output. This could be a cassette player, a DVD player, an audio cassette, a CD ROM or any such media. It is only important that this is a program that the producer develops which the user 908 watches in a continuous or a streaming manner. Embedded within that program, at a desired point selected by the producer, the routing information 904 is output.

The audio information is then routed to a PC 906, which is similar to the PC 112 in FIG. 1. A user 908 is interfaced with the PC to receive information thereof, the PC 906 having associated therewith a display (not shown). The PC 906 is interfaced with a network 910, similar to the network 306 in FIG. 3. This network 910 has multiple nodes thereon, one of which is the PC 906, and another of which is represented by a network node 912 which represents remote information. The object of the present embodiment is to access remote information for display to the user 908 by the act of transmitting from the video program in block 902 the routing information 904. This routing information 904 is utilized to allow the PC 906 which has a network “browser” running thereon to “fetch” the remote information at the node 912 over the network 910 for display to the user 908. This routing information 904 is in the form of an embedded code within the audio signal, as was described hereinabove.

Referring now to FIG. 10, there is illustrated a more detailed block diagram of the embodiment of FIG. 9. In this embodiment, the PC 906 is split up into a couple of nodes, a first PC 1002 and a second PC 1004. The PC 1002 resides at the node associated with the user 908, and the PC 1004 resides at another node. The PC 1004 represents the ARS 308 of FIG. 3. The PC 1004 has a database 1006 associated therewith, which is basically the advertiser database 310. Therefore, there are three nodes on the network 910 necessary to implement the disclosed embodiment, the PC 1002, the PC 1004 and the remote information node 912. The routing information 904 is utilized by the PC 1002 for routing to the PC 1004 to determine the location of the remote information node 912 on the network 910. This is returned to the PC 1002 and a connection made directly with the remote information node 912 and the information retrieved therefrom to the user 908. The routing information 904 basically constitutes primary routing information.

Referring now to FIG. 11, there is illustrated a diagrammatic view of how the network packet is formed for sending the primary routing information to the PC 1004. In general, the primary routing information occupies a single field which primary routing information is then assembled into a data packet with the secondary routing information for transfer to the network 910. This is described hereinabove in detail.

Referring now to FIG. 12, there is illustrated an alternate embodiment to that of FIG. 9. In this embodiment, the video source 902 has associated therewith an optical region 1202, which optical region 1202 has disposed therein an embedded video code. This embedded video code could be relatively complex or as simple as a grid of dark and white regions, each region in the grid able to have a dark color for a logic “1” or a white region for a logic “0.” This will allow a digital value to be disposed within the optical region 1202. A sensor 1204 can then be provided for sensing this video code. In the example above, this would merely require an array of optical detectors, one for each region in the grid to determine whether this is a logic “1” or a logic “0” state. One of the sensed video is then output to the PC 906 for processing thereof to determine the information contained therein, which information contained therein constitutes the primary routing information 904. Thereafter, it is processed as described hereinabove with reference to FIG. 9.

Referring now to FIG. 13, there is illustrated a block diagram for an embodiment wherein a user's profile can be forwarded to the original subscriber or manufacturer. The PC 906 has associated therewith a profile database 1302, which profile database 1302 is operable to store a profile of the user 908. This profile is created when the program, after initial installation, requests profile information to be input in order to activate the program. In addition to the profile, there is also a unique ID that is provided to the user 908 in association with the browser program that runs on the PC 906. This is stored in a storage location represented by a block 1304. This ID 1304 is accessible by a remote location as a “cookie” which is information that is stored in the PC 906 in an accessible location, which accessible location is actually accessible by the remote program running on a remote node.

The ARS 308, which basically constitutes the PC 1004 of FIG. 10, is operable to have associated therewith a profile database 1308, which profile database 1308 is operable to store profiles for all of the users. The profile database 1308 is a combination of the information stored in profile database 1302 for all of the PCs 906 that are attachable to the system. This is to be distinguished from information stored in the database 310 of the ARS 308, the advertiser's database, which contains intermediate destination tables. When the routing information in the primary routing information 904 is forwarded to the ARS 308 and extracted from the original data packet, the look-up procedure described hereinabove can then be performed to determine where this information is to be routed. The profile database 1302 is then utilized for each transaction, wherein each transaction in the form of the routing information received from the primary routing information 904 is compared to the destination tables of database 310 to determine what manufacturer is associated therewith.

The associated ID 1304 that is transmitted along with the routing information in primary routing information 904 is then compared with the profile database 1308 to determine if a profile associated therewith is available. This information is stored in a transaction database 1310 such that, at a later time, for each routing code received in the form of the information in primary routing information 904, there will associated therewith the IDs 1304 of each of the PCs 906. The associated profiles in database 1308, which are stored in association with IDs 1304, can then be assembled and transmitted to a subscriber as referenced by a subscriber node 1312 on the network 910. The ARS 308 can do this in two modes, a realtime mode or a non-realtime mode. In a realtime mode, each time a PC 906 accesses the advertiser database 310, that user's profile information is uploaded to the subscriber node 1312. At the same time, billing information is generated for that subscriber 1312 which is stored in a billing database 1316. Therefore, the ARS 308 has the ability to inform the subscriber 1312 of each transaction, bill for those transactions, and also provide to the subscriber 1312 profile information regarding who is accessing the particular product advertisement having associated therewith the routing information field 904 for a particular routing code as described hereinabove. This information, once assembled, can then be transmitted to the subscriber 1312 and also be reflected in billing information and stored in the billing information database 1316.

Referring now to FIG. 14, there is illustrated a flowchart depicting the operation for storing the profile for the user. The program is initiated in a block 1402 and then proceeds to a function block 1404, wherein the system will prompt for the profile upon initiation of the system. This initiation is a function that is set to activate whenever the user initially loads the software that he or she is provided. The purpose for this is to create, in addition to the setup information, a user profile. Once the user is prompted for this, then the program will flow to a decision block 1406 to determine whether the user provides basic or detailed information. This is selectable by the user. If selecting basic, the program will flow to a function block 1408 wherein the user will enter basic information such as name and serial number and possibly an address. However, to provide some incentive to the user to enter more information, the original prompt in function block 1404 would have offers for such things as coupons, discounts, etc., if the user will enter additional information. If the user selects this option, the program flows from the decision block 1406 to a function block 1410. In the function block 1410, the user is prompted to enter specific information such as job, income level, general family history, demographic information and more. There can be any amount of information collected in this particular function block.

Once all of the information is collected, in either the basic mode or the more specific mode, the program will then flow to a function block 1412 where this information is stored locally. The program then flows to a decision block 1414 to then go on-line to the host or the ARS 308. In general, the user is prompted to determine whether he or she wants to send this information to the host at the present time or to send it later. If he or she selects the “later” option, the program will flow to a function block 1415 to prompt the user at a later time to send the information. In the disclosed embodiment, the user will not be able to utilize the software until the profile information is sent to the host. Therefore, the user may have to activate this at a later time in order to connect with the host.

If the user has selected the option to upload the profile information to the host, the program will flow to the function block 1416 to initiate the connect process and then to a decision block 1418 to determine if the connection has been made. If not, the program will flow along a “N” path to decision block 1420 which will timeout to an error block 1422 or back to the input of the connect decision block 1418. The program, once connected, will then flow along a “Y” path from decision block 1418 to a function block 1428 to send the profile information with the ID of the computer or user to the host. The ID is basically, as described hereinabove, a “cookie” in the computer which is accessed by the program when transmitting to the host. The program will then flow to a function block 1430 to activate the program such that it, at later time, can operate without requiring all of the setup information. In general, all of the operation of this flowchart is performed with a “wizard” which steps the user through the setup process. Once complete, the program will flow to a Done block 1432.

Referring now to FIG. 15, there is illustrated a flowchart depicting the operation of the host when receiving a transaction. The program is initiated at a start block 1502 and then proceeds to decision block 1504, wherein it is determined whether the system has received a routing request, i.e., the routing information 904 in the form of a tone, etc., embedded in the audio signal, as described hereinabove with respect to FIG. 9. The program will loop back around to the input of decision block 1504 until the routing request has been received. At this time, the program will flow along the “Y” path to a function block 1506 to receive the primary routing information and the user ID. Essentially, this primary routing information is extracted from the audio tone, in addition to the user ID. The program then flows to a function block 1508 to look up the manufacturer URL that corresponds to the received primary routing information and then return the necessary command information to the originating PC 112 in order to allow that PC 112 to connect to the destination associated with the primary routing information. Thereafter, the program will flow to a function block 1510 to update the transaction database 1310 for the current transaction. In general, the routing information 904 will be stored as a single field with the associated IDs. The profile database 1308, as described hereinabove, has associated therewith detailed profiles of each user on the system that has activated their software in association with their ID. Since the ID was sent in association with the routing information, what is stored in the transaction database 1310 is the routing code, in association with all of the IDs transmitted to the system in association with that particular routing code. Once this transaction database 1310 has been updated, as described hereinabove, the transactions can be transferred back to the subscriber at node 312 with the detailed profile information from the profile database 1308.

The profile information can be transmitted back to the subscriber or manufacturer at the node 312 in realtime or non-realtime. A decision block 1512 is provided for this, which determines if the delivery is realtime. If realtime, the program will flow along a “Y” path to a function block 1514 wherein the information will be immediately forwarded to the manufacturer or subscriber. The program will then flow to a function block 1516 wherein the billing for that particular manufacturer or subscriber will be updated in the billing database 1316. The program will then flow into an End block 1518. If it was non-realtime, the program moves along the “N” path to a function block 1520 wherein it is set for a later delivery and it is accrued in the transaction database 1310. In any event, the transaction database 1310 will accrue all information associated with a particular routing code.

With a realtime transaction, it is possible for a manufacturer to place an advertisement in a magazine or to place a product on a shelf at a particular time. The manufacturer can thereafter monitor the times when either the advertisements or the products are purchased. Of course, they must be scanned into a computer which will provide some delay. However, the manufacturer can gain a very current view of how a product is moving. For example, if a cola manufacturer were to provide a promotional advertisement on, for example, television, indicating that a new cola was going to be placed on the shelf and that the first 1000 purchasers, for example, scanning their code into the network would receive some benefit, such as a chance to win a trip to some famous resort in Florida or some other incentive, the manufacturer would have a very good idea as to how well the advertisement was received. Further, the advertiser would know where the receptive markets were. If this advertiser, for example, had placed the television advertisement in ten cities and received overwhelming response from one city, but very poor response from another city, he would then have some inclination to believe that either the one poor-response city was not a good market or that the advertising medium he had chosen was very poor. Since the advertiser can obtain a relatively instant response and also content with that response as to the demographics of the responder, very important information can be obtained in a relatively short time.

It should be noted that the disclosed embodiment is not limited to a single source PC 302, but may encompass a large number of source computers connected over a global communication network. Additionally, the embodiment is not limited to a single ARS 308 or a single advertiser server 312, but may include a plurality of ARS and advertiser systems, indicated by the addition of ARS 314 and advertiser server A 316, respectively. It should also be noted that this embodiment is not limited only to global communication networks, but also may be used with LAN, WAN, and peer-to-peer configurations.

It should also be noted that the disclosed embodiment is not limited to a personal computer, but is also applicable to, for example, a Network Computer (“NetPC”), a scaled-down version of the PC, or any system which accommodates user interaction and interfaces to information resources.

One typical application of the above noted technique is for providing a triggering event during a program, such as a sport event. In a first example, this may be generated by an advertiser. One could imagine that, due to the cost of advertisements in a high profile sports program, there is a desire to utilize this time wisely. If, for example, an advertiser contracted for 15 seconds worth of advertising time, they could insert within their program a tone containing the routing information. This routing information can then be output to the user's PC 302 which will cause the user's PC 302 to, via the network, obtain information from a remote location typically controlled by the advertiser. This could be in the form of an advertisement of a length longer than that contracted for. Further, this could be an interactive type of advertisement. An important aspect to the type of interaction between the actual broadcast program with the embedded routing information and the manufacturer's site is the fact that there is provided information as to the user's PC 302 and a profile of the user themselves. Therefore, an advertiser can actually gain realtime information as to the number of individuals that are watching their particular advertisement and also information as to the background of those individuals, demographic information, etc. This can be a very valuable asset to an advertiser.

In another example, the producer of the program, whether it be an on-air program, a program embedded in a video tape, CD-ROM, DVD, or a cassette, can allow the user to automatically access additional information that is not displayed on the screen. For example, in a sporting event, various statistics can be provided to the user from a remote location, merely by the viewer watching the program. When these statistics are provided, the advertiser can be provided with demographic information and background information regarding the user. This can be important when, for example, the user may record a sports program. If the manufacturer sees that this program routing code is being output from some device at a time later than the actual broadcast itself, this allows the advertisers to actually see that their program is still being used and also what type of individual is using it. Alternatively, the broadcaster could determine the same and actually bill the advertiser an additional sum for a later broadcast. This is all due to the fact that the routing information automatically, through a PC and a network, will provide an indication to the advertiser the time at which the actual information was broadcast.

The different type of medium that can be utilized with the above embodiment are such things as advertisements, which are discussed hereinabove, contests, games, news programs, education, coupon promotional programs, demonstration media (demos), and photographs, all of which can be broadcast on a private site or a public site. This all will provide the ability to allow realtime interface with the network and the remote location for obtaining the routed information and also allow for realtime billing and accounting.

Referring now to FIG. 16, there is illustrated a block diagram of a software broadcast distribution system, according to a disclosed embodiment. A software repository system 1600 couples to a mixer/multiplexing unit 1602 for combing the software content with a number of television (TV) channels 1604. The output signal of the mixer/multiplexing unit 1602 is fed to a transmitter 1606 for transmitting the signal to a receiving device 1608. The transmission path may be via antenna 1610, or other commonly known broadcast technologies, e.g., cable television. The receiver 1608 is placed in a subscriber's home such that the subscriber receives the broadcast signals into his or her home or business. In addition to transmitting analog broadcast signals, the broadcast transmission system may also be capable of transmitting digital signals for use with high-definition TV, utilizing channels that facilitate high digital transmission rates.

The received signals at the output of the receiver 1608 are input to a channel selector unit 1611 which may be part of the receiver 1608 or a separate chassis. The channel selector unit 1611 provides the function of allowing the subscriber to select from Hone or more channels (1, 2, 3, . . . , N) provided by the broadcast system. The selector unit 1611 has a multi-channel output TV 1612 which connects to the subscriber's TV, and a multi-channel software output 1614 which connects to a channel “listening” interface 1616, for the filtering of selected software channels for software distributions. The listening interface 1616 receives commands from a controller 1618 which is programmed with a programmer module 1620 by the subscriber with several parameters, one of which is time of the availability of the desired software on the broadcast channel. The programmable module 1620 can be a remote control unit used like conventional remote control units for programming a video tape recorder (VTR) and a cable box.

The listening interface 1616 is operable to monitor all data traffic carried on any of the software distribution channels. The provider broadcasts selected software distributions over the respective software channels for all interested subscribers to download. The disclosed architecture simply provides broadcasting of the software distributions on a regular basis and the subscriber selects the desired download(s). There is no interaction (or confirmation) required from the subscriber to the provider prior to obtaining the desired download(s). Conventional digital pay-per-view systems operate in a number of different ways. One method is to allow the subscriber to select the program of choice along with a personal authorization code. The personal authorization code is then transmitted to the provider prior to allowing the subscriber to view the program, which program is broadcast once per specific time period. Another conventional method is offered where the subscriber enters the same program and personal code information, but upload of this information is performed on a daily or monthly basis to the provider from the cable box so that the proper charges can be made and billed to the subscriber. This upload can be through the cable medium for a two-way system, or it can utilize a telephone connection in a dial-up mode.

Individual software distributions which have been broadcast at the source are uniquely identified with header information comprising at least a unique ID. Therefore, a subscriber which selects a particular software distribution for download, inputs the respective unique ID into the programmer 1620. Other parameters entered can include the date the software will be broadcast, the time of the day when it will be broadcast, and the particular channel on which it will be available for download.

After filtering the selected software distribution for download, the selected data is stored on a storage device 1622. The storage device 1622 may be any of a number of architectures commonly used for storing software distributions. For example, the storage device 1622 can be a removable hard drive which engages the set-top receiver box, and can be removed for compatible insertion into a subscriber's computer 1624. Alternatively, the user PC 1624 can connect directly to the storage device 1622 via the controller 1618 over a communication link 1626 for transfer of the downloaded software. The communication link 1626 between the computer 1624 and the set-top box is a high speed link such as a universal serial bus (USB) or a high-performance serial bus (IEEE 1394-type). The storage device 1622 can also consist of memory (e.g., a RAM drive) for accommodating the high speed downloads provided by the TV broadcast system. Once the download has completed, a flag is set such that the user system no longer initiates a download of the currently stored software. Alternatively, the user can program the system to store everything broadcast on that channel during a specific time period and forego the selection process of choosing only selected software distributions for download. The subscriber is then charged accordingly. The download capabilities for obtaining the desired software operate in the background in that the user may view a TV program on a first channel while the software distribution download process occurs on a second channel. The controller 1618 also incorporates an error-checking feature which ensures that the downloaded software arrives free of errors.

The programmer 1620 connects to a validation and accounting unit 1628 for recording and transmitting of the selected software ID and subscriber information to the provider for billing. The validation and accounting unit 1628 transmits accounting information to a provider accounting system 1630 via one or more links, one of which utilizes a secure public-switched telephone network (PSTN). A PSTN interface unit 1634 provides the interface from the validation and accounting unit 1628 to the PSTN 1632. The PSTN interface 1634 may be a modem or any other interface device commonly used to interface to the PSTN 1632. A corresponding PSTN interface unit 1636 provides a similar interfacing function of the provider accounting system 1630 to the PSTN 1632. Alternatively, the validation and accounting unit 1628 interfaces to the provider accounting system 1630 through an unsecure packet-switched global communication network (GCN) 1638. GCN interfaces 1640 and 1642 provide the interfacing functions for the respective subscriber and provider accounting systems 1628 and 1630.

It can be appreciated that, for the most part, programming for download of the software is very similar to the conventional programming procedures required for recording a TV program using a conventional VTR machine. The subscriber becomes aware of a particular software distribution by, for example, either viewing a weekly magazine or viewing a particular channel for upcoming software distributions. The basic parameters associated with each of the software distributions comprise the unique ID, time, date, and channel. Other parameters may be provided to enhance the download process for the subscriber, such as whether to enable or disable error checking, whether the download is to be used as a demonstration package (demo) for a fixed trial period, whether the billing should be through the subscriber's pay-TV provider or perhaps directly from a charge card, etc. Note that all of the components; the receiver 1608, channel selector unit 1611, listening interface 1616, controller 1618, programmer 1620, validation and accounting unit 1628, storage device 1622, and interfaces 1634 (and/or 1640) may be incorporated into one chassis.

Referring now to FIG. 17, there is illustrated a flowchart of the process for downloading selected software distributions. Flow begins at a Start block and moves to a function block 1700 where a listening interface 1616 monitors the software data stream on one or more designated software distribution channels of the channel selector unit 1611. Flow is then to a decision block 1702 where a determination is made as to whether a filter command has been received from the controller 1618. If not, flow is out the “N” path and loops back to the input of function block 1700 to continue monitoring the software data stream. If a filter command has been received from the controller 1618, as programmed by the user, flow is out the “Y” path to function block 1704 where command switches associated with the filter command are read. For example, command switches comprise the date, time, unique ID, and channel that the listening interface 1616 is programmed to monitor. If the user wants the listening interface 1616 to switch to a particular channel of the channel selector 1618, the channel selector 1618 provides this information to the listening interface 1616. Flow is then to a function block 1706 where the listening interface 1616 then filters the desired software information from the software distribution data provided on the software distribution channel. The selected software distribution data is then downloaded and stored on the storage device 1622, as indicated by a function block 1708.

Flow is to a decision block 1710 where an error detection algorithm determines if the downloaded software has been received error-free. This is an important function since flawed software files will not run properly on the user computer 1624. If the downloaded software has errors, flow is out the “N” path to a function block 1712 where a signal is sent to the listening device 1616 from the controller 1618 to download that particular software again. In that the bandwidth of the disclosed architecture is high, this process will cause little delay from the perspective of the user. If the downloaded software is error-free, flow is out the “Y” path of decision block 1710 to a function block 1714 where the unique software ID is transmitted to the software provider from the validation and accounting unit 1628 for accounting and billing purposes. Flow is then to a function block 1716 where the channel provider then bills the customer through normal subscriber billing and payment mechanisms. The process then ends at a Stop block.

It can be appreciated that the disclosed architecture can be implemented over a the GCN 1638 using “webcasting.” Webcasting is the convergence of broadcasting with a packet-switched regime. Using a PC as a broadcast medium is coming into its own with advances in packet-switched broadcasting. Multicasting is a form of webcasting which involves the simultaneous transmission of traffic to a designated subnet of users, rather than sending a separate stream of packets to each intended user (unicasting) or transmitting all packets to everyone (broadcasting). The recipient is simply instructing the computer's network interface card to listen to a particular IP address for the multicast. In other words, multiple copies of data are not sent across the network, and data is not sent to clients who do not request it. Therefore, a software provider can multicast particular applications at selected times to only those users (or subscribers) that request it.

Multicasting is like a push model of communication, i.e., radio or television, where those who want to receive the multicast tune their sets to the station they want to receive. Therefore, multicasts are announced in advance so that clients know when a multicast is available. A certain protocol supplies clients with all of the information needed to receive a multicast including its name, description, the time it is active, the media type (audio, video, text, etc.) that it uses, and the IP addresses, ports, and protocol it uses. The announcement information is multicast to a well-known IP address and port where clients running a session directory tool receive this information. To signal that a client wants to receive a multicast, the client joins a group to whom the multicast is directed. The client can join or leave the group at any time.

Referring now to FIG. 18, there is illustrated a diagrammatic view of the transmission stream for the software. As described hereinabove, a software vendor is provided with the capability of transmitting a large amount of software in a continuous manner over a dedicated software channel. Due to the high data rate associated with a digital transmission channel and the associated bandwidth, large software packages can be transmitted. Typically, a software package can consist of a multiplicity of files, all of which define a given software package. For example, a software vendor may want to provide to a potential user a complete copy of their software package including a digitized copy of the user's manual. Since software packages vary in size due to the complexity of the software, the number of files associated therewith and, the amount of graphics associated therewith, each of these packages can be of differing lengths. Some packages can be upwards of 500 Megabytes or as little as two Megabytes. The software vendor may wish to view the transfer of the software as a billing transaction wherein an account is debited upon download of the software, or the software may be provided cost-free for a predetermined length of time, as on a trial basis. However, although each user potentially receives all information on their channel due to the fact that this is a broadcast on the channel, the system will ensure that not every user is able to download the software and, when they do download the software, this constitutes some type of transaction, either for billing purposes or for database update purposes at the vendor.

As illustrated in FIG. 18, there are provided a sequence of three software packages that are transmitted. The first is Software A, the second is Software B, and the third is Software C. Software A has associated therewith a header 1802, a body 1804 and a trailer 1806. The header 1802 is operable to provide information as to what software follows, i.e., the body of Software A, the size of the file and various overhead information required for the system to receive the software. Following the header A 1802 is the body 1804 of Software A, which constitutes all of the files contained therein. At the end of the software transmission, there is provided a trailer 1806, which basically indicates to the system that all files associated with Software A have been received. Typically, this will have some error checking/correction associated therewith to ensure that the software has been completely received.

Once the Software A package has been transmitted, comprised of the header 1802, the body 1804 and the trailer 1806, then a second package, a Software B package, is transmitted. This is comprised of a header 1808, a body 1810 and a trailer 1812. This Software B package is illustrated as being smaller than the Software A package, it being understood that each software package has a length defined by the software itself and independent of the other software packages. Once the Software B package has been transmitted, then a Software C package is transmitted, comprised of a header 1814, a body 1816 and a trailer 1818. It is noted that the Software C package is considerably larger than the Software A or the Software B package. This is important to the user, since the transfer of even large software packages is relatively fast. For example, if the communication channel could transmit at 1 Megabyte/second, then a 100 Megabyte file could be transmitted in slightly over one and one-half minutes. Smaller packages would take a fraction of a minute, this being the case with some update packages. However, utilizing conventional dial-up modems and transmitting over the global communication network 1638, these transfer rates can be as low as 4 Kilobytes/second.

In this illustrated example, there are only provided three software packages transmitted in sequence. Once the Software C package has been transmitted, then the Software A package is immediately re-transmitted, again comprised of the header 1802, body 1804 and trailer 1806. This will continue for a period of time. The reason for this is that, if an error occurs in receiving a package due to the error checking algorithm, then the transaction can be noted as being incomplete and merely waits for the next broadcast of the software to again attempt an error-free download operation. It is noted that this entire operation is completed without actually sending a request to the software vendor to process the software. However, it may be that a user would request a specialized piece of software from a particular vendor. If this vendor were allocated a certain amount of time on the software channel, such as from 9 p.m. to 9:15 p.m. on one day of the week, the software vendor may indicate to a user that the software will be placed on the software channel during that time period. The user need only ensure that the system is listening to the software channel at that time. Of course, the listening interface 1616 could always be active, since it will only download the software when it recognizes the presence thereof. It is noted that the software will be available for only a short period of time.

Referring now to FIG. 19, there is illustrated a flowchart depicting the operation of downloading the software from the broadcast stream of FIG. 18. The program is initiated at a Start block 1902 and then proceeds to a function block 1904 wherein the monitoring operation of listening device 1616 is implemented. In this block 1904, it is noted that various filter parameters are loaded, i.e., the information required to determine which software is to be examined. It is noted that all of the software will not be downloaded. This is primarily for the reason of ensuring that certain software packages are not available to a user without eliciting some type of billing transaction or operation, or that there is not some type of authorization code required. In addition, there is only a finite amount of storage space available.

Once the filter parameters have been loaded, the listening device 1616 will monitor the software stream on a continuous basis, or during a period of time that the user desires to do such. For example, the user may have a removable storage device that is not loaded into the system and, therefore, would not want to download software without the ability to store this information. A decision block 1906 is operable to determine if the header of the desired software associated with the defined filter parameters has been received. If not, the program will continue back to the input of function block 1904 along an “N” path until the header for the desired software package is received. Once received, the program will flow along a. “Y” path to a function block 1908 to initiate storage of the received data stream associated with the body of the software package within some type of storage, either on a hard disk or in another storage medium. It is indicated that the header is also stored, as the header may contain information as to billing, authorization codes, etc. However, this could also be contained within the trailer and only the body would be stored.

The program, during downloading thereof, as associated therewith some type of error checking, this typically being associated with any type of digital transmission channel. If an error is noted, as indicated by a function block 1910, it is possible to perform some type of error correction. If the error cannot be corrected, this would be a fatal error and the program would exit along a “Y” path. As long as no uncorrectable errors were detected, then the program will flow along an “N” path to a decision block 1912 to determine if the trailer has been received, i.e., whether the entire body of the software package has been received. If not, the program will flow along “N” path to a decision block 1914 to determine if a timeout operation has occurred. If so, the program will flow along a “Y” path. If not, the program will flow along an “N” path back to the input of function block 1908 to continue downloading the body of the data. Once the trailer has been received, or an error has been detected, or a timeout operation has been detected, the program will flow to a function block 1916 to terminate the storage operation and update the filter parameters. This updating operation of the filter parameters is one wherein it is noted that the desired software has been downloaded. This is necessary to ensure that it does not again receive the software and write over the already received software, which would require some type of write-over capability. Of course, this would not be necessary. Further, it may be that the filter parameters have some type of authorization code that allow the storage operation to be initiated. Once the software package has been downloaded, the program would indicate such, delete the authorization code and prevent further download of the software package at another time. Additionally, updating of the filter parameters indicates to the system that the software package has been successfully downloaded and, therefore, a billing transaction or some other database update action needs to be taken.

After the filter parameters have been updated, the program will flow to a decision block 1918 to determine if the transaction needs to be recorded as billing, etc. If this is a transaction which is required to be billed, it will be noted as such and the information forwarded to either some type of central clearinghouse or to a memory location for later downloading to a central clearinghouse. This is very similar, as described hereinabove, to digital T.V. networks, wherein access to a given channel at a defined time will trigger a billing event that is stored and later retrieved such that the user can be billed for a pay-for-view program. Further, it may be that the vendor, once the package has been downloaded to a particular user, would require some information as to what user downloaded the information. In the system, there could be provided a profile of the user, which profile is provided to a vendor at a later time. The information that would be transferred to the vendor would be information from the header indicating the software that was downloaded, the user's profile and the time of download. This could be placed in the vendor's database for purposes of later update information and notifications to the user.

Once it has been determined that the transaction must be recorded as a billing transaction, an update transaction, etc., the program will flow along a “Y” path from the decision block 1918 to a function block 1920 to access the information in the header and/or trailer of the downloaded software package. This will provide information as to the software package that was downloaded, any authorization codes required, etc. This will be then transferred to the billing/transaction package to handle all billing aspects thereof, as indicated in a function block 1922. The program will then flow to an End block 1924. If there is no recording transaction required, i.e., the software package is provided for the purpose of a defined period of time for review or it is actually a free software package, as a number of software packages are, the program will flow from the decision block 1918 along a “N” path to the End block 1924.

Referring now to FIG. 20, there is illustrated a flowchart depicting the operation of utilizing an authorization code, which is initiated at a block 2002 and proceeds to a function block 2004 to request an authorization code. In this operation, a user accesses a vendor through many different medium, for example, through a telephone call, through a magazine advertisement or through the global communication network. The user could receive an authorization code for a given software package that would be for review purposes only, as a promotion or as a result of purchasing the software package through some external financial transaction. Once the authorization code is received, this will allow the user to receive the software package. Once the authorization code is input to the system, this will constitute a parameter, as indicated by a function block 2006. The system will then proceed as indicated hereinabove with respect to FIG. 19, wherein the software package will be retrieved, as indicated in function block 2008.

The program will then flow to a function block 2010 to determine if the software package has been retrieved, this noted by the function blocks 1906 through 1916. Once completed, the program will flow along a “Y” path to a function block 2012 to effectively delete the authorization code from the system and then notify the software vendor that this has been received. The reason for this is that the authorization code is associated with the user and can only be utilized for a single download. To ensure that only this user can receive this download, the authorization code may be associated with a user ID which is built into the downloading system. Therefore, the header of the software would include therein an authorization code in combination with the user ID. The system would then compare this header requiring both the authorization code and the user ID to be transmitted, such that a comparison may be made internal to the system in the listing interface 1616 and, only upon a match for both the authorization code and the user ID in the header with the authorization code input by the user as a parameter and the built in ID in the system would allow such a download. This would prevent another user accessing the software with the same code.

Alternatively, upon download, there could be an immediate notification to the software provider to not transfer the software package again with that authorization code. Note the advantage of such a system is that a large group of users could be provided with the same authorization code with the internal ID of each system allowing discrimination between each one of the users. For example, the header could have associated therewith a defined authorization code with a plurality of user IDs associated therewith. Each system that receives the software, this being all of the systems that are tuned to the channel in a broadcast system, would examine each header that is received, and if the header constitutes the desired software, has associated therewith the approved authorization code and has associated therewith the associated user ID of the receiving system, this will constitute a match and allow downloading of the software package. This will allow a software vendor to merely update the software parameters in the outgoing data stream. This may take a certain period of time to update the data stream, but this is inconsequential due to the fact that the user merely enters the authorization code and, when the software package is noted by the listening interface 1616 as being present with the appropriate software header, authorization code and/or user ID embedded therein, the software package will be downloaded. Once the authorization code has been deleted and the notification performed or the transaction completed, the program will flow to an End block 2014.

Referring now to FIG. 21, there is illustrated a flowchart depicting the operation of reviewing the header that is received, this corresponding to the decision block 1906 through to the decision block 1918. The program is initiated at a start block 2102 and then proceeds to a decision block 2104 to determine if the appropriate header has been received. This header indicates that a software package has been received and, if so, then the program will flow to a function block 2106 to compare the header with the desired software that is received. If the package being transmitted is that associated with the desired software package, the program will determine this at a decision block 2108 and proceed along the “Y” path therefrom to a function block 2110 to compare the information in the header with the authorization code that is stored as a part of the parameters. The program will flow to a decision block 2112 to determine if the authorization code is a valid authorization code. If not, the program will flow to an Exit block 2114 and, if it is valid, the program will flow along a “Y” path to a function block 2116 to compare in the information in the header with the user ID in the system. As described hereinabove, this is an option wherein both the desired software, the authorization code and the user ID must be present in order for the software to be downloaded. The validity of the user ID will be determined at a decision block 2118. If it is not valid, the program will exit to block 2114 and, if valid, the program will flow to a block 2120 wherein the program will continue to the function block 1908 in FIG. 19.

Referring now to FIG. 22, there is illustrated an alternate embodiment wherein information such as an E-Mail is transmitted. In this operation, the data channel is utilized by particular Internet Service Providers to transmit bulk E-Mail at desired times, if not continuously. A user can retrieve this E-Mail merely by examining the passing stream. Note that this is has some similarities to a paging system, wherein all paging receivers in a system receive every page that are transmitted to the system and only stores the pages associated therewith. This is facilitated by examining the address of each page that is received, matching it to the paging receiver address and then storing the information if there is a match. This is in accordance with a predetermined protocol referred to as POCSAG.

Each E-Mail illustrated in FIG. 22 will be associated with a header, a body and a trailer. The header will have certain information as to a user address, a password and the such. This password may be encrypted. It is important that there be some type of password for security purposes such that a secure receiving system can receive the information, and access to that secure receiving system only allowed through use of a password.

Referring now to FIG. 23, there is illustrated a flowchart depicting the operation of receiving E-Mails, which is initiated at a start block 2302. The program flows to a function block 2304 to receive E-Mail. This operation, as described hereinabove, requires an examination of the address, matching it to an internal address in the parameter information and downloading thereof. There could actually be a loaded-in password that the user could place into the system that allows the E-Mail to be validated as it is being received. However, it could be that the E-Mail is stored and not actually validated as being received until the user inputs the password. This validation would constitute a receipt of the E-Mail. Once validation is complete, as indicated by decision block 2306, due to the receipt of the associated trailer or input password, the program will flow to a function block 2308 to provide a notification operation. This notification operation is necessary to indicate to the provider of the E-Mail that the information has been received. This information is received only upon a valid password being input thereto. Of course, there will be some latency in this operation because this notification may only be transmitted once a day or once an hour. It could, of course, be transmitted concurrent with input of the password. The use of a secure system for receiving information from a secure channel would facilitate such an operation.

In summary, there is provided a software distribution system which uses a conventional broadcast TV system where selected software distributions are broadcast for subscriber download over selected broadcast channels on a periodic basis. The subscriber programs a receiver box with parameters comprising channel, time, software ID, and date information locating and identifying the desired software download. A local storage device receives and stores the software distribution for transfer at a later time. The receiver connects to the provider to transmit accounting and billing information corresponding to the downloaded software. The subscriber is then billed using standard pay-TV subscriber billing systems.

Although the preferred embodiment has been described in detail, it should be understood that various changes, substitutions and alterations can be made therein without departing from the spirit and scope of the invention as defined by the appended claims.


Patent Citations


Cited Patent

Filing date

Publication date

Applicant

Title


US3668312 2 Apr 1970 6 Jun 1972 Nippon Telegraph & Telephone Television telephone system 
US4002886 20 Jun 1975 11 Jan 1977 Ronald Murl Sundelin Electronic price display unit 
US4042792 26 Jan 1976 16 Aug 1977 The General Electric Company Limited Telephone subscriber's apparatus for signalling decimal digit values represented in printed form 
US4365148 4 Jun 1981 21 Dec 1982 Franklin Electric Co., Inc. Data processing system 
US4621259 18 Mar 1983 4 Nov 1986 International Standard Electric Corporation Consumer electronics equipment combination consisting of a television receiver and of a video recording and/or reproducing apparatus 
US4654482 7 Nov 1984 31 Mar 1987 Deangelis Lawrence J Home merchandise ordering telecommunications terminal 
US4780599 28 Jun 1985 25 Oct 1988 Baus Heinz Georg Apparatus for retrieving stored information about various items in response to coding on the items 
US4785296 3 Feb 1987 15 Nov 1988 Hitachi, Ltd. Method and system for displaying image data 
US4816904 10 Apr 1987 28 Mar 1989 Control Data Corporation Television and market research data collection system and method 
US4817136 17 Aug 1987 28 Mar 1989 Rhoads Richard M Telephone dialing system 
US4833308 24 Jul 1986 23 May 1989 Advance Promotion Technologies, Inc. Checkout counter product promotion system and method 
US4841132 16 Jul 1987 20 Jun 1989 Matsushita Electric Industrial Co., Ltd. Program recording scheduling apparatus using an optical reader 
US4845634 29 Jul 1987 4 Jul 1989 Westinghouse Electric Corp. Product information network system 
US4894789 22 Feb 1988 16 Jan 1990 Yee Keen Y TV data capture device 
US4899370 13 Jun 1988 6 Feb 1990 Matsushita Electric Industrial Co., Ltd. Remote control apparatus for electronic equipment 
US4901073 30 Mar 1988 13 Feb 1990 Regent Of The University Of California Encoder for measuring the absolute position of moving elements 
US4905094 30 Jun 1988 27 Feb 1990 Telaction Corporation System for audio/video presentation 
US4907264 14 Sep 1988 6 Mar 1990 Autophon Telecom Ag Telephone set with subscriber listing 
US4916293 8 Dec 1987 10 Apr 1990 Rolls-Royce Plc Identification in manufacture 
US4937853 3 May 1989 26 Jun 1990 Agt International, Inc. Lottery agent data communication/telephone line interface 
US4947028 19 Jul 1988 7 Aug 1990 Arbor International, Inc. Automated order and payment system 
US4959530 7 Mar 1989 25 Sep 1990 Checkrobot Inc. Article price indicator 
US4975948 13 Oct 1989 4 Dec 1990 Andresen Dennis R Rapid dialing method for telecommunications 
US4984155 29 Aug 1988 8 Jan 1991 Square D Company Order entry system having catalog assistance 
US5003384 * 1 Apr 1988 26 Mar 1991 Scientific Atlanta, Inc. Set-top interface transactions in an impulse pay per view television system 
US5038023 28 Jun 1989 6 Aug 1991 C. Itoh Information Systems Development, Inc. System for storing and monitoring bar coded articles such as keys in a drawer 
US5054096 24 Oct 1988 1 Oct 1991 Empire Blue Cross/Blue Shield Method and apparatus for converting documents into electronic data for transaction processing 
US5088045 2 Jan 1990 11 Feb 1992 Honda Giken Kogyo Kabushiki Kaisha Production management system 
US5111391 5 Oct 1989 5 May 1992 Mrs. Fields, Inc. System and method for making staff schedules as a function of available resources as well as employee skill level, availability and priority 
US5115326 26 Jun 1990 19 May 1992 Hewlett Packard Company Method of encoding an e-mail address in a fax message and routing the fax message to a destination on a network 
US5128752 25 Oct 1990 7 Jul 1992 Kohorn H Von System and method for generating and redeeming tokens 
US5144654 22 Mar 1991 1 Sep 1992 Kelley James T Automatic telephone dialer system with printed storage 
US5161037 10 Oct 1990 3 Nov 1992 Fuji Xerox Corporation, Ltd. Image processing system and method for processing documents in accordance with a job control sheet 
US5161214 28 Aug 1990 3 Nov 1992 International Business Machines Corporation Method and apparatus for document image management in a case processing system 
US5182705 11 Aug 1989 26 Jan 1993 Itt Corporation Computer system and method for work management 
US5189630 15 Jan 1991 23 Feb 1993 Barstow David R Method for encoding and broadcasting information about live events using computer pattern matching techniques 
US5191525 16 Jan 1990 2 Mar 1993 Digital Image Systems, Corporation System and method for extraction of data from documents for subsequent processing 
US5198644 16 Apr 1992 30 Mar 1993 Diablo Research Corporation System for display of prices and related method 
US5235654 30 Apr 1992 10 Aug 1993 International Business Machines Corporation Advanced data capture architecture data processing system and method for scanned images of document forms 
US5241402 7 Oct 1991 31 Aug 1993 Xerox Corporation Concurrent modem control in a reprographic machine 
US5243531 28 Sep 1990 7 Sep 1993 Volt Information Sciences, Inc. Method for routing and scheduling operations on elements of a work product in a production system 
US5247347 27 Sep 1991 21 Sep 1993 Bell Atlantic Network Services, Inc. Pstn architecture for video-on-demand services 
US5262860 23 Apr 1992 16 Nov 1993 International Business Machines Corporation Method and system communication establishment utilizing captured and processed visually perceptible data within a broadcast video signal 
US5285278 21 May 1992 8 Feb 1994 Holman Michael J Electronic redeemable coupon system via television 
US5287181 20 Aug 1992 15 Feb 1994 Holman Michael J Electronic redeemable coupon system and television 
US5288976 15 Jul 1991 22 Feb 1994 Nynex Corporation Bar code use in information, transactional and other system and service applications 
US5296688 23 Jan 1992 22 Mar 1994 Hamilton David W Apparatus and method for recording progress notes 
US5304786 5 Jan 1990 19 Apr 1994 Symbol Technologies, Inc. High density two-dimensional bar code symbol 
US5305195 25 Mar 1992 19 Apr 1994 Gerald Singer Interactive advertising system for on-line terminals 
US5319454 13 Nov 1990 7 Jun 1994 Scientific-Atlanta, Inc. CATV system enabling access to premium (pay per view) program events by bar code data entry 
US5324922 25 Feb 1993 28 Jun 1994 Verifone, Inc. Apparatus and method for managing transactions 
US5331547 29 Jan 1993 19 Jul 1994 Clinical Multiphase Research, Inc. Process and computer system for control of interface software and data files 
US5340966 17 Oct 1991 23 Aug 1994 Matsushita Electric Industrial Co., Ltd. Automatic facsimile-receiving-sheet recognizing apparatus 
US5357276 1 Dec 1992 18 Oct 1994 Scientific-Atlanta, Inc. Method of providing video on demand with VCR like functions 
US5362948 17 Oct 1991 8 Nov 1994 Matsushita Electric Industrial Co., Ltd. Facsimile-use automatic order and sales management system 
US5382779 7 May 1993 17 Jan 1995 Digicomp Research Corporation Shelf price label verification apparatus and method 
US5386298 26 Apr 1993 31 Jan 1995 U.S. Philips Corporation Automated form handing and generating system and a form sheet associated to said system 
US5398336 16 Jul 1993 14 Mar 1995 Consilium, Inc. Object-oriented architecture for factory floor management 
US5405232 2 Apr 1993 11 Apr 1995 Harnischfeger Engineers, Inc. Automatic storage and retrieval system 
US5418713 5 Aug 1993 23 May 1995 Allen; Richard Apparatus and method for an on demand data delivery system for the preview, selection, retrieval and reproduction at a remote location of previously recorded or programmed materials 
US5420403 26 May 1992 30 May 1995 Canada Post Corporation Mail encoding and processing system 
US5420943 29 Oct 1992 30 May 1995 Mak; Stephen M. Universal computer input device 
US5424524 24 Jun 1993 13 Jun 1995 Ruppert; Jonathan P. Personal scanner/computer for displaying shopping lists and scanning barcodes to aid shoppers 
US5438355 16 Apr 1993 1 Aug 1995 Palmer; Shelton L. Interactive system for processing viewer responses to television programming 
US5446490 23 Oct 1992 29 Aug 1995 At&T Corp. Interactive television with tailored programming 
US5446919 9 Oct 1991 29 Aug 1995 Wilkins; Jeff K. Communication system and method with demographically or psychographically defined audiences 
US5491508 21 Mar 1994 13 Feb 1996 Lotus Development Corporation PC video conferencing 
US5493107 18 Oct 1994 20 Feb 1996 Digicomp Research Corporation Shelf price label and product placement verification method and apparatus 
US5519878 15 Jul 1994 21 May 1996 Echelon Corporation System for installing and configuring (grouping and node address assignment) household devices in an automated environment 
US5530852 20 Dec 1994 25 Jun 1996 Sun Microsystems, Inc. Method for extracting profiles and topics from a first file written in a first markup language and generating files in different markup languages containing the profiles and topics for use in accessing data described by the profiles and topics 
US5570295 18 Mar 1994 29 Oct 1996 Lucent Technologies Inc. System and method of capturing encoded data transmitted over a communications network in a video system 
US5572643 19 Oct 1995 5 Nov 1996 Judson; David H. Web browser with dynamic display of information objects during linking 
US5592551 19 Apr 1994 7 Jan 1997 Scientific-Atlanta, Inc. Method and apparatus for providing interactive electronic programming guide 
US5594226 5 Sep 1995 14 Jan 1997 Steger; Paul Automated check verification and tracking system using bar code information 
US5602377 1 Mar 1995 11 Feb 1997 Metanetics Corporation Bar code dataform scanning and labeling apparatus and method 
US5604542 8 Feb 1995 18 Feb 1997 Intel Corporation Using the vertical blanking interval for transporting electronic coupons 
US5640193 15 Aug 1994 17 Jun 1997 Lucent Technologies Inc. Multimedia service access by reading marks on an object 
US5649186 7 Aug 1995 15 Jul 1997 Silicon Graphics Incorporated System and method for a computer-based dynamic information clipping service 
US5664110 8 Dec 1994 2 Sep 1997 Highpoint Systems, Inc. Remote ordering system 
US5666293 * 3 Jul 1995 9 Sep 1997 Bell Atlantic Network Services, Inc. Downloading operating system software through a broadcast channel 
US5671282 23 Jan 1995 23 Sep 1997 Ricoh Corporation Method and apparatus for document verification and tracking 
US5675721 8 Aug 1996 7 Oct 1997 Freedman; Aaron S. Computer network data distribution and selective retrieval system 
US5682540 8 Dec 1994 28 Oct 1997 Xerox Corporation System for representing electronic files using a paper based medium 
US5694163 12 Dec 1996 2 Dec 1997 Intel Corporation Method and apparatus for viewing of on-line information service chat data incorporated in a broadcast television program 
US5708780 7 Jun 1995 13 Jan 1998 Open Market, Inc. Internet server access control and monitoring systems 
US5710887 29 Aug 1995 20 Jan 1998 Broadvision Computer system and method for electronic commerce 
US5715314 24 Oct 1994 3 Feb 1998 Open Market, Inc. Network sales system 
US5724424 29 Nov 1995 3 Mar 1998 Open Market, Inc. Digital active advertising 
US5745681 11 Jan 1996 28 Apr 1998 Sun Microsystems, Inc. Stateless shopping cart for the web 
US5754906 25 Jul 1996 19 May 1998 Fuji Photo Optical Co., Ltd. Photographic camera with barrier 
US5757917 1 Nov 1995 26 May 1998 First Virtual Holdings Incorporated Computerized payment system for purchasing goods and services on the internet 
US5761606 8 Feb 1996 2 Jun 1998 Wolzien; Thomas R. Media online services access via address embedded in video or audio program 
US5764906 7 Nov 1995 9 Jun 1998 Netword Llc Universal electronic resource denotation, request and delivery system 
US5765176 6 Sep 1996 9 Jun 1998 Xerox Corporation Performing document image management tasks using an iconic image having embedded encoded information 
US5768528 24 May 1996 16 Jun 1998 V-Cast, Inc. Client-server system for delivery of online information 
US5768539 * 17 Dec 1996 16 Jun 1998 Bell Atlantic Network Services, Inc. Downloading applications software through a broadcast channel 
US5774664 25 Mar 1996 30 Jun 1998 Actv, Inc. Enhanced video programming system and method for incorporating and displaying retrieved integrated internet information segments 
US5774870 14 Dec 1995 30 Jun 1998 Netcentives, Inc. Fully integrated, on-line interactive frequency and award redemption program 
US5778367 14 Dec 1995 7 Jul 1998 Network Engineering Software, Inc. Automated on-line information service and directory, particularly for the world wide web 
US5790793 4 Apr 1995 4 Aug 1998 Higley; Thomas Method and system to create, transmit, receive and process information, including an address to further information 
US5791991 15 Nov 1995 11 Aug 1998 Small; Maynard E. Interactive consumer product promotion method and match game 
US5794210 11 Dec 1995 11 Aug 1998 Cybergold, Inc. Attention brokerage 
US5894516 * 10 Jul 1996 13 Apr 1999 Ncr Corporation Broadcast software distribution 
US5935004 * 28 Aug 1995 10 Aug 1999 Mediaone Group, Inc. System and method for scheduled delivery of a software program over a cable network 
US6002852 * 30 Jun 1998 14 Dec 1999 Microsoft Corporation Method and system for confirming receipt of data opportunistically broadcast to client computer systems 
US6009274 * 24 Jun 1997 28 Dec 1999 3Com Corporation Method and apparatus for automatically updating software components on end systems over a network 
US6238290 * 20 May 1999 29 May 2001 Mediaone Group, Inc. System and method for scheduled delivery of a software program over a cable network 
US6317885 * 26 Jun 1997 13 Nov 2001 Microsoft Corporation Interactive entertainment and information system using television set-top box 
US6330715 * 19 May 1998 11 Dec 2001 Nortel Networks Limited Method and apparatus for managing software in a network system 
US6377690 * 14 Sep 1998 23 Apr 2002 Lucent Technologies Inc. Safe transmission of broadband data messages 
US6427238 * 29 May 1998 30 Jul 2002 Opentv, Inc. Module manager for interactive television system 
US6741574 * 10 Jun 2002 25 May 2004 Hughes Electronics Corporation Method and apparatus for performing satellite selection in a broadcast communication system 
US6823366 * 28 Aug 2000 23 Nov 2004 Fujitsu Limited Content delivery system including content delivery confirmation data 
US6990680 * 5 Jan 1998 24 Jan 2006 Gateway Inc. System for scheduled caching of in-band data services 

* Cited by examiner


Non-Patent Citations


Reference


1  "AVITAL, a Private Teaching System by Fax Communication", Atsusji Iizawa, Noriro Sugiki, Yukari Shitora and Hideko Kunii, Software Research Center, Tokyo, Japan, no date. 
2  "AVITAL, a Private Teaching System by Fax Communication", Atsusji Iizawa, Noriro Sugiki, Yukari Shitora and Hideko Kunii, Software Research Center, Tokyo, Japan. 
3  "Bar Code Method for Automating Catalog Orders", IBM Technical Disclosure Bulletin, Sep. 1998. 
4  "Bar-Code Recognition System Using Image Processing", Kuroki, Yoneoka et al., Hitachi Research Laborator, no date. 
5  "Bar-Code Recognition System Using Image Processing", Kuroki, Yoneoka et al., Hitachi Research Laborator. 
6  "Development of a Commercially Successful Wearable Data Collection System", Symbol Technologies, Inc. 
7  "Development of a Commercially Successful Wearable Data Collection System", Symbol Technologies, Inc., no date. 
8  "Distributing Uniform Resource Locators as Bar Code Images", IBM Technical Disclosure Bulleting, Jan. 1996. 
9  "Document on Computer" USPS Technical Support Center, Norman, OK, no date. 
10  "Document on Computer" USPS Technical Support Center, Norman, OK. 
11  "Group Decision Support System: Development and Application", Energy Systems, Westinghouse, Pittsburgh, PA, no date. 
12  "Group Decision Support System: Development and Application", Energy Systems, Westinghouse, Pittsburgh, PA. 
13  "IEEE Standard for Bar Coding for Distribution Transformers" Transformers Committee of the IEEE Power Engineering Society, The Institute of Electrical and Electronics Engineers, Inc. NY, no date. 
14  "IEEE Standard for Bar Coding for Distribution Transformers" Transformers Committee of the IEEE Power Engineering Society, The Institute of Electrical and Electronics Engineers, Inc. NY. 
15  "Integration of Hand-Written Address Interpretation Technology into the United States Postal Service Remote Computer Reader System", Srihari (Cedar, Suny at Buffalo) and Kueberg (U.S. Postal Service, VA), no date. 
16  "Integration of Hand-Written Address Interpretation Technology into the United States Postal Service Remote Computer Reader System", Srihari (Cedar, Suny at Buffalo) and Kueberg (U.S. Postal Service, VA). 
17  "New Technologies in Credit Card Authentication", Pieter de Bryne, Institute for Communications Technology, Zurich, Switzerland, no date. 
18  "New Technologies in Credit Card Authentication", Pieter de Bryne, Institute for Communications Technology, Zurich, Switzerland. 
19  "Paper Based Document Security-A Review", van Renesse, TNO Institute of Applied Physics, The Netherlands, no date. 
20  "Paper Based Document Security-A Review", van Renesse, TNO Institute of Applied Physics, The Netherlands. 
21  "The Automation Synergy", Neves and Noivo, Portugal, no date. 
22  "The Automation Synergy", Neves and Noivo, Portugal. 
23  "The Stylus(TM)-Shopping from Home", STYLUS Innovation, MA, no date. 
24  "The Stylus(TM)-Shopping from Home", STYLUS Innovation, MA. 
25  What do forward looking companies consider in their plans and developments?, A.G. Johnston, Nestle, no date. 
26  What do forward looking companies consider in their plans and developments?, A.G. Johnston, Nestle. 



Referenced by


Citing Patent

Filing date

Publication date

Applicant

Title


US7548988 * 6 May 2008 16 Jun 2009 Rpx-Lv Acquisition Llc Software downloading using a television broadcast channel 
US7565649 * 30 Mar 2004 21 Jul 2009 Panasonic Corporation Data reproduction device, video display apparatus and software update system and software update method which use them 
US7984471 * 18 Oct 2001 19 Jul 2011 Thomson Licensing Method and device for the transmission of data in a television system 
US7996552 * 16 Jun 2009 9 Aug 2011 RPX LV-Acquisition LLC Software downloading using a television broadcast channel 
US8024723 * 18 May 2007 20 Sep 2011 Samsung Electronics Co., Ltd. System and method for peer-to-peer datacasting in a broadcasting network 
US8141071 * 7 May 2007 20 Mar 2012 Dell Marketing Usa, L.P. Intelligent patch checker 
US8331380 14 Mar 2005 11 Dec 2012 Broadcom Corporation Bookkeeping memory use in a search engine of a network device 
US8424041 13 Jun 2006 16 Apr 2013 Sony Corporation Method and system for downloading content to a content downloader 
US8863194 7 Mar 2013 14 Oct 2014 Sony Corporation Method and system for downloading content to a content downloader 
US8930937 8 Mar 2012 6 Jan 2015 Dell Marketing L.P. Intelligent patch checker 
US20070214215 * 7 May 2007 13 Sep 2007 Everdream Corporation Intelligent patch checker 

* Cited by examiner


Classifications







U.S. Classification 709/231, 725/97, 725/121, 717/172 
International Classification H04N7/173, G06F15/16, G06F9/44 
Cooperative Classification H04N21/4782, H04N21/4622, H04N21/812, G06F8/60 
European Classification H04N21/4782, H04N21/81C, H04N21/462S, G06F8/60 



Legal Events


Date

Code

Event

Description


30 Oct 2012 AS Assignment 
Owner name: RPX-LV ACQUISITION LLC, DELAWARE

Free format text: RELEASE BY SECURED PARTY;ASSIGNOR:LV PARTNERS, L.P.;REEL/FRAME:029209/0588

Effective date: 20121003

Owner name: RPX CORPORATION, CALIFORNIA

Free format text: RELEASE BY SECURED PARTY;ASSIGNOR:LV PARTNERS, L.P.;REEL/FRAME:029209/0588

Effective date: 20121003 

7 Nov 2011 FPAY Fee payment 
Year of fee payment: 4 

17 Oct 2011 AS Assignment 
Owner name: RPX CORPORATION, CALIFORNIA

Free format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:RPX-LV ACQUISITION LLC;REEL/FRAME:027074/0010

Effective date: 20110923 

30 Dec 2008 AS Assignment 
Owner name: LV PARTNERS, L.P., TEXAS

Free format text: SECURITY AGREEMENT;ASSIGNOR:RPX-LV ACQUISITION LLC;REEL/FRAME:022034/0469

Effective date: 20081007

Owner name: LV PARTNERS, L.P.,TEXAS

Free format text: SECURITY AGREEMENT;ASSIGNOR:RPX-LV ACQUISITION LLC;US-ASSIGNMENT DATABASE UPDATED:20100406;REEL/FRAME:22034/469

Free format text: SECURITY AGREEMENT;ASSIGNOR:RPX-LV ACQUISITION LLC;REEL/FRAME:22034/469

Owner name: LV PARTNERS, L.P.,TEXAS

Free format text: SECURITY AGREEMENT;ASSIGNOR:RPX-LV ACQUISITION LLC;REEL/FRAME:22034/469

Effective date: 20081007

Owner name: LV PARTNERS, L.P.,TEXAS

Free format text: SECURITY AGREEMENT;ASSIGNOR:RPX-LV ACQUISITION LLC;REEL/FRAME:022034/0469

Effective date: 20081007

Owner name: LV PARTNERS, L.P.,TEXAS

Free format text: SECURITY AGREEMENT;ASSIGNOR:RPX-LV ACQUISITION LLC;US-ASSIGNMENT DATABASE UPDATED:20100406;REEL/FRAME:22034/469

Effective date: 20081007 

20 Oct 2008 AS Assignment 
Owner name: RPX CORPORATION, CALIFORNIA

Free format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:LV PARTNERS, L.P.;REEL/FRAME:021701/0560

Effective date: 20081007

Owner name: RPX-LV ACQUISITION LLC, DELAWARE

Free format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:RPX CORPORATION;REEL/FRAME:021701/0643

Effective date: 20081007

Owner name: RPX CORPORATION,CALIFORNIA

Free format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:LV PARTNERS, L.P.;US-ASSIGNMENT DATABASE UPDATED:20100406;REEL/FRAME:21701/560

Owner name: RPX-LV ACQUISITION LLC,DELAWARE

Free format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:RPX CORPORATION;US-ASSIGNMENT DATABASE UPDATED:20100406;REEL/FRAME:21701/643

Free format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:LV PARTNERS, L.P.;REEL/FRAME:21701/560

Free format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:RPX CORPORATION;REEL/FRAME:21701/643

Owner name: RPX CORPORATION,CALIFORNIA

Free format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:LV PARTNERS, L.P.;US-ASSIGNMENT DATABASE UPDATED:20100406;REEL/FRAME:21701/560

Effective date: 20081007

Owner name: RPX CORPORATION,CALIFORNIA

Free format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:LV PARTNERS, L.P.;REEL/FRAME:21701/560

Effective date: 20081007

Owner name: RPX CORPORATION,CALIFORNIA

Free format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:LV PARTNERS, L.P.;REEL/FRAME:021701/0560

Effective date: 20081007

Owner name: RPX-LV ACQUISITION LLC,DELAWARE

Free format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:RPX CORPORATION;REEL/FRAME:21701/643

Effective date: 20081007

Owner name: RPX-LV ACQUISITION LLC,DELAWARE

Free format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:RPX CORPORATION;REEL/FRAME:021701/0643

Effective date: 20081007

Owner name: RPX-LV ACQUISITION LLC,DELAWARE

Free format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:RPX CORPORATION;US-ASSIGNMENT DATABASE UPDATED:20100406;REEL/FRAME:21701/643

Effective date: 20081007 

15 Apr 2008 AS Assignment 
Owner name: DIGITALCONVERGENCE.:COM INC., TEXAS

Free format text: CHANGE OF NAME;ASSIGNOR:DIGITALCONVERGENCE.COM INC.;REEL/FRAME:020794/0861

Effective date: 19991217

Owner name: DIGITALCONVERGENCE.:COM INC.,TEXAS

Free format text: CHANGE OF NAME;ASSIGNOR:DIGITALCONVERGENCE.COM INC.;US-ASSIGNMENT DATABASE UPDATED:20100406;REEL/FRAME:20794/861

Owner name: DIGITALCONVERGENCE.:COM INC.,TEXAS

Free format text: CHANGE OF NAME;ASSIGNOR:DIGITALCONVERGENCE.COM INC.;REEL/FRAME:020794/0861

Effective date: 19991217

Owner name: DIGITALCONVERGENCE.:COM INC.,TEXAS

Free format text: CHANGE OF NAME;ASSIGNOR:DIGITALCONVERGENCE.COM INC.;US-ASSIGNMENT DATABASE UPDATED:20100406;REEL/FRAME:20794/861

Effective date: 19991217 

14 Jun 2004 AS Assignment 
Owner name: JACK A. TURPIN, TEXAS

Free format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:DIGITAL: CONVERGENCE CORPORATION, FORMERLY KOWN AS DIGITAL CONVERGENCE.COM INC., FORMERLY KNOWN AS DIGITAL CONVERGENCE.COM INC.;REEL/FRAME:015418/0622

Effective date: 20020627

Owner name: LV PARTNERS, L.P., TEXAS

Free format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:TURPIN, JACK A.;REEL/FRAME:015400/0415

Effective date: 20020627 

28 Feb 2001 AS Assignment 
Owner name: DIGITAL:CONVERGENCE CORPORATION, TEXAS

Free format text: CHANGE OF NAME;ASSIGNOR:DIGITALCONVERGENCE.:COM, INC.;REEL/FRAME:011554/0922

Effective date: 20000907 

19 Nov 1999 AS Assignment 
Owner name: DIGITALCONVERGENCE.COM, INC., TEXAS

Free format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:PHILYAW, JEFFRY JOVAN;MATHEWS, DAVID KENT;REEL/FRAME:011129/0139

Effective date: 19991101 












Next page

Previous page






 


Google Home - Sitemap - USPTO Bulk Downloads - Privacy Policy - Terms of Service - About Google Patents - Send Feedback
Data provided by IFI CLAIMS Patent Services
 



 
 
Home
Patent Search
File A Patent
Patents For Sale
Patent Resources
Patent Providers



Account Login | Register 




 





 

Easy To Use Patents Search & Patent Lawyer Directory




 


Select Patents Filed by State AlabamaAlaskaArizonaArkansasCaliforniaColoradoConnecticutDelawareDistrict of ColumbiaFloridaGeorgiaHawaiiIdahoIllinoisIndianaIowaKansasLouisianaMaineMarylandMassachusettsMichiganMinnesotaMississippiMissouriMontanaNebraskaNevadaNew HampshireNew JerseyNew MexicoNew YorkNorth CarolinaNorth DakotaOhioOklahomaOregonPennsylvaniaRhode IslandSouth CarolinaSouth DakotaTennesseeTexasUtahVermontVirginiaWashingtonWest VirginiaWisconsinWyoming   


    


At Patents you can conduct a Patent Search, File a Patent Application, find a Patent Attorney, or search available technology through our Patent Exchange. Patents are available using simple keyword or date criteria. If you are looking to hire a patent attorney, you've come to the right place. Protect your idea and hire a patent lawyer.

 


 


Search All Patents:   

 

--------------------------------------------------------------------------------



  This Patent May Be For Sale or Lease. Contact Us

  Is This Your Patent? Claim This Patent Now.




Register or Login To Download This Patent As A PDF 


--------------------------------------------------------------------------------


United States Patent  9,055,255 
 Burdzinski ,   et al.   June 9, 2015  

--------------------------------------------------------------------------------

  

Live television application on top of live feed 


Abstract

An intelligent television and methods for user interaction between the intelligent television and the user are provided. In general, a user is provided with navigation, notification, and setup options which enable one or more functions associated with the intelligent television. The presentation of options is based on input received by the intelligent television. As a user provides input to the intelligent television via a remote control or other input device, the intelligent television is configured to interpret the input and provide interactive functionality in the form of content presented to the display of the intelligent television. 

--------------------------------------------------------------------------------


Inventors:
Burdzinski; Gregory (Mississauga, CA), Chen; Tong (Markham, CA), Torres Milano; Eduardo Diego (Burlington, CA), Lee; Todd (Ancaster, CA), Visosky; John S. (Gormley, CA)  

Applicant: 


Name

City

State

Country

Type


Flextronics AP, LLC  
San Jose  
CA  
US   
  

Assignee:
Flextronics AP, LLC (San Jose, CA) 
 

Family ID: 
1000001146091  

Appl. No.: 
13/968,969 

Filed: 
August 16, 2013 


--------------------------------------------------------------------------------



--------------------------------------------------------------------------------

Prior Publication Data

--------------------------------------------------------------------------------



 
 
Document Identifier

Publication Date

 US 20140059613 A1 Feb 27, 2014 
 

--------------------------------------------------------------------------------

Related U.S. Patent Documents

--------------------------------------------------------------------------------
 





 
 
Application Number

Filing Date

Patent Number

Issue Date

 61684672 Aug 17, 2012   
 61702650 Sep 18, 2012   
 61697710 Sep 6, 2012   
 61700182 Sep 12, 2012   
 61736692 Dec 13, 2012   
 61798821 Mar 15, 2013   
 61804942 Mar 25, 2013   
 61804998 Mar 25, 2013   
 61804971 Mar 25, 2013   
 61804990 Mar 25, 2013   
 61805003 Mar 25, 2013   
 61805053 Mar 25, 2013   
 61805030 Mar 25, 2013   
 61805027 Mar 25, 2013   
 61805042 Mar 25, 2013   
 61805038 Mar 25, 2013   
 

--------------------------------------------------------------------------------



Current U.S. Class: 1/1  
Current CPC Class:  H04N 5/4401 (20130101); H04N 17/04 (20130101); H04N 5/4403 (20130101); H04N 21/4823 (20130101); H04N 5/50 (20130101); H04N 21/433 (20130101); H04N 21/47202 (20130101); H04N 21/435 (20130101); H04N 21/432 (20130101); H04N 21/4307 (20130101); H04N 21/26291 (20130101); H04N 21/437 (20130101); H04N 21/4622 (20130101); H04N 21/482 (20130101); H04N 21/8166 (20130101); H04N 21/44213 (20130101); H04N 21/44222 (20130101); H04N 21/44204 (20130101); H04N 21/485 (20130101); H04N 21/472 (20130101); H04N 21/4788 (20130101); H04N 21/4828 (20130101); H04N 21/4821 (20130101); H04N 21/4755 (20130101); H04N 21/8173 (20130101); H04N 21/84 (20130101); H04N 21/478 (20130101); H04N 21/8358 (20130101); H04N 5/445 (20130101); G06F 3/0481 (20130101); H04N 21/442 (20130101); H04N 21/4882 (20130101); H04N 21/6175 (20130101); H04N 21/8126 (20130101); H04N 21/4858 (20130101); H04N 21/488 (20130101); H04N 21/8133 (20130101); H04N 21/42204 (20130101); H04N 21/4396 (20130101); H04N 21/6125 (20130101); H04N 21/4316 (20130101); H04N 21/47 (20130101); H04L 51/32 (20130101); H04N 21/25808 (20130101); H04N 21/4532 (20130101); G06F 3/017 (20130101); G06F 3/04883 (20130101); G06F 2203/04804 (20130101); H04N 5/44 (20130101); H04N 5/45 (20130101) 
Current International Class:  G06F 3/00 (20060101); H04N 21/422 (20110101); H04N 21/439 (20110101); H04N 21/431 (20110101); H04N 21/433 (20110101); H04N 21/435 (20110101); H04N 21/432 (20110101); H04N 21/47 (20110101); H04L 12/58 (20060101); H04N 21/258 (20110101); H04N 21/45 (20110101); G06F 3/01 (20060101); G06F 3/0488 (20130101); G06F 13/00 (20060101); H04N 5/445 (20110101); H04N 5/44 (20110101); H04N 17/04 (20060101); H04N 21/482 (20110101); H04N 5/50 (20060101); H04N 21/43 (20110101); H04N 21/262 (20110101); H04N 21/437 (20110101); H04N 21/462 (20110101); H04N 21/81 (20110101); H04N 21/442 (20110101); H04N 21/485 (20110101); H04N 21/472 (20110101); H04N 21/4788 (20110101); H04N 21/475 (20110101); H04N 21/84 (20110101); H04N 21/478 (20110101); H04N 21/8358 (20110101); G06F 3/0481 (20130101); H04N 21/488 (20110101); H04N 21/61 (20110101); H04N 5/45 (20110101) 
Field of Search:  ;725/39,40,43,44,47,58,61  

--------------------------------------------------------------------------------

References Cited [Referenced By]

--------------------------------------------------------------------------------

U.S. Patent Documents





4284849 August 1981 Anderson et al. 
5539479 July 1996 Bertram 
5701183 December 1997 Bellemare et al. 
5734444 March 1998 Yoshinobu 
5801747 September 1998 Bedard 
5867227 February 1999 Yamaguchi 
5933141 August 1999 Smith 
5964839 October 1999 Johnson et al. 
6008803 December 1999 Rowe et al. 
6047319 April 2000 Olson 
6111614 August 2000 Mugura et al. 
6177931 January 2001 Alexander et al. 
6239794 May 2001 Yuen et al. 
6285804 September 2001 Crinon et al. 
6493038 December 2002 Singh et al. 
6493876 December 2002 DeFreese et al. 
6515968 February 2003 Combar et al. 
6563515 May 2003 Reynolds et al. 
6564378 May 2003 Satterfield et al. 
6629077 September 2003 Arling et al. 
6661468 December 2003 Alten et al. 
6704062 March 2004 Ahida 
6766526 July 2004 Ellis 
6971118 November 2005 Akhavan et al. 
7058600 June 2006 Combar et al. 
7174126 February 2007 McElhatten et al. 
7228556 June 2007 Beach et al. 
7233316 June 2007 Smith et al. 
7266726 September 2007 Ladd et al. 
7363591 April 2008 Goldthwaite et al. 
7487529 February 2009 Orlick 
7493641 February 2009 Klosterman et al. 
7506350 March 2009 Johnson 
7543320 June 2009 Schein et al. 
7577923 August 2009 Beam et al. 
7623933 November 2009 Sarosi et al. 
7685520 March 2010 Rashkovskiy et al. 
7698606 April 2010 Ladd et al. 
7805634 September 2010 Balazich et al. 
7822716 October 2010 Lee et al. 
7880077 February 2011 Pauws et al. 
7900228 March 2011 Stark et al. 
7904924 March 2011 De Heer et al. 
7908635 March 2011 Barton et al. 
8006201 August 2011 Bhattacharya 
8065390 November 2011 Cheng 
8089455 January 2012 Wieder 
8127329 February 2012 Kunkel et al. 
8151215 April 2012 Baurmann et al. 
8166511 April 2012 Griggs 
8201104 June 2012 Yamamoto et al. 
8220021 July 2012 Look et al. 
8473976 June 2013 Udani 
8566874 October 2013 Roberts et al. 
8589981 November 2013 Lee et al. 
8640166 January 2014 Craner 
8683519 March 2014 McCarthy et al. 
8756620 June 2014 Papish et al. 
8832742 September 2014 Rasanen et al. 
2001/0001160 May 2001 Shoff et al. 
2001/0010097 July 2001 Lee 
2001/0056577 December 2001 Gordon et al. 
2002/0007485 January 2002 Rodriguez et al. 
2002/0042914 April 2002 Walker et al. 
2002/0049970 April 2002 Park 
2002/0052746 May 2002 Handelman 
2002/0056098 May 2002 White 
2002/0067376 June 2002 Martin et al. 
2002/0152267 October 2002 Lennon 
2002/0188944 December 2002 Noble 
2003/0003876 January 2003 Rumsey 
2003/0014752 January 2003 Zaslavsky et al. 
2003/0070171 April 2003 Jeon et al. 
2003/0084449 May 2003 Chane et al. 
2003/0110234 June 2003 Egli et al. 
2003/0118323 June 2003 Ismail et al. 
2003/0149988 August 2003 Ellis et al. 
2003/0151621 August 2003 McEvilly et al. 
2003/0177498 September 2003 Ellis et al. 
2003/0182658 September 2003 Alexander 
2003/0182659 September 2003 Ellis et al. 
2003/0208763 November 2003 McElhatten et al. 
2003/0225777 December 2003 Marsh 
2003/0226146 December 2003 Thurston et al. 
2004/0078807 April 2004 Fries et al. 
2004/0093616 May 2004 Johnson 
2004/0103120 May 2004 Fickle et al. 
2004/0117831 June 2004 Ellis et al. 
2004/0119815 June 2004 Soloff 
2004/0148362 July 2004 Friedman 
2004/0154040 August 2004 Ellis 
2004/0158193 August 2004 Bui 
2004/0211282 October 2004 Kim 
2004/0216156 October 2004 Wagner 
2004/0237108 November 2004 Drazin et al. 
2005/0015804 January 2005 LaJoie et al. 
2005/0022237 January 2005 Nomura 
2005/0091596 April 2005 Anthony et al. 
2005/0097606 May 2005 Scott, III et al. 
2005/0097622 May 2005 Zigmond et al. 
2005/0120306 June 2005 Klassen et al. 
2005/0149964 July 2005 Thomas et al. 
2005/0160452 July 2005 Lawler et al. 
2005/0165918 July 2005 Wantanabe et al. 
2005/0188318 August 2005 Tamir et al. 
2005/0188402 August 2005 de Andrade et al. 
2005/0204382 September 2005 Ellis 
2005/0204387 September 2005 Knudson et al. 
2005/0229210 October 2005 Akhavan 
2005/0232210 October 2005 Karaoguz et al. 
2005/0273819 December 2005 Knudson et al. 
2005/0289603 December 2005 Cezeaux et al. 
2006/0031875 February 2006 Yu 
2006/0064716 March 2006 Sull et al. 
2006/0090183 April 2006 Zito et al. 
2006/0101504 May 2006 Aravamudan et al. 
2006/0117337 June 2006 Shivaji Rao et al. 
2006/0123445 June 2006 Sullivan et al. 
2006/0143674 June 2006 Jones et al. 
2006/0158838 July 2006 Kinoshita et al. 
2006/0184972 August 2006 Rafey et al. 
2006/0248557 November 2006 Stark et al. 
2006/0262116 November 2006 Moshiri et al. 
2006/0280449 December 2006 Ogawa et al. 
2007/0011702 January 2007 Vaysman 
2007/0028282 February 2007 Kooijmans et al. 
2007/0050733 March 2007 Lee et al. 
2007/0061724 March 2007 Slothouber et al. 
2007/0066283 March 2007 Haar et al. 
2007/0096939 May 2007 Walrath 
2007/0143809 June 2007 Chen et al. 
2007/0154163 July 2007 Cordray 
2007/0162936 July 2007 Stallings et al. 
2007/0192715 August 2007 Kataria et al. 
2007/0199022 August 2007 Moshiri et al. 
2007/0250762 October 2007 Mansfield 
2007/0250864 October 2007 Diaz Perez 
2007/0261090 November 2007 Miller et al. 
2008/0022309 January 2008 Begeja et al. 
2008/0086745 April 2008 Knudson et al. 
2008/0092198 April 2008 Hutten 
2008/0098433 April 2008 Hardacker et al. 
2008/0114794 May 2008 Craner 
2008/0114861 May 2008 Gildred 
2008/0120635 May 2008 Trimper et al. 
2008/0133525 June 2008 Ott 
2008/0141307 June 2008 Whitehead 
2008/0155613 June 2008 Benya et al. 
2008/0163307 July 2008 Coburn et al. 
2008/0177828 July 2008 Accarie et al. 
2008/0235595 September 2008 Krantz et al. 
2008/0244637 October 2008 Candelore 
2008/0250455 October 2008 Fukuda et al. 
2008/0271080 October 2008 Gossweiler et al. 
2008/0276279 November 2008 Gossweiler et al. 
2008/0282294 November 2008 Carpenter et al. 
2008/0288461 November 2008 Glennon et al. 
2008/0307457 December 2008 Yang et al. 
2008/0313677 December 2008 Lee 
2009/0013350 January 2009 Ohlfs et al. 
2009/0019485 January 2009 Ellis et al. 
2009/0064222 March 2009 Dawson et al. 
2009/0102966 April 2009 Jiang et al. 
2009/0106793 April 2009 Tecot et al. 
2009/0125940 May 2009 Kim et al. 
2009/0129340 May 2009 Handa 
2009/0150379 June 2009 Park et al. 
2009/0158326 June 2009 Hunt et al. 
2009/0158375 June 2009 Rodriguez et al. 
2009/0160764 June 2009 Myllymaki 
2009/0165045 June 2009 Stallings et al. 
2009/0177981 July 2009 Christie et al. 
2009/0179989 July 2009 Bessone et al. 
2009/0199237 August 2009 White et al. 
2009/0199241 August 2009 Unger et al. 
2009/0199242 August 2009 Johnson et al. 
2009/0204929 August 2009 Baurmann et al. 
2009/0210910 August 2009 Smith et al. 
2009/0213079 August 2009 Segal et al. 
2009/0228919 September 2009 Zott et al. 
2009/0235311 September 2009 Michel et al. 
2009/0241048 September 2009 Augustine et al. 
2009/0249394 October 2009 Schwesinger et al. 
2009/0271823 October 2009 Jung et al. 
2009/0293078 November 2009 Pirani et al. 
2009/0293079 November 2009 McKee et al. 
2009/0300674 December 2009 Ratsch et al. 
2009/0313232 December 2009 Tinsley et al. 
2010/0013997 January 2010 Whang 
2010/0031193 February 2010 Stark et al. 
2010/0050219 February 2010 Angiolillo et al. 
2010/0060799 March 2010 Ishii 
2010/0071019 March 2010 Blanchard et al. 
2010/0086277 April 2010 Craner 
2010/0100512 April 2010 Brodin et al. 
2010/0107112 April 2010 Jennings et al. 
2010/0122284 May 2010 Yoon et al. 
2010/0128183 May 2010 Ishii 
2010/0161506 June 2010 Bosenick et al. 
2010/0172407 July 2010 Ramaswamy 
2010/0177252 July 2010 Larsen et al. 
2010/0180292 July 2010 Epstein et al. 
2010/0180300 July 2010 Carpenter et al. 
2010/0191727 July 2010 Malik 
2010/0201890 August 2010 Degonde et al. 
2010/0225830 September 2010 Blanchard et al. 
2010/0235740 September 2010 Friedlander et al. 
2010/0241962 September 2010 Peterson et al. 
2010/0293497 November 2010 Peterson 
2010/0302444 December 2010 Ahn et al. 
2010/0306402 December 2010 Russell et al. 
2010/0306800 December 2010 Jung et al. 
2010/0319036 December 2010 Lim et al. 
2011/0016492 January 2011 Morita 
2011/0022450 January 2011 Meredith 
2011/0023608 February 2011 Rueger 
2011/0035774 February 2011 Parker 
2011/0041150 February 2011 Schein et al. 
2011/0043696 February 2011 Onogi et al. 
2011/0047572 February 2011 Hill et al. 
2011/0055873 March 2011 Heo et al. 
2011/0060661 March 2011 Chai et al. 
2011/0067066 March 2011 Barton et al. 
2011/0072480 March 2011 Stone 
2011/0074591 March 2011 Arling et al. 
2011/0078745 March 2011 Macrae et al. 
2011/0093888 April 2011 Araki et al. 
2011/0107376 May 2011 Lee et al. 
2011/0119626 May 2011 Faenger et al. 
2011/0119702 May 2011 Jang et al. 
2011/0119707 May 2011 Bae et al. 
2011/0125755 May 2011 Kaila et al. 
2011/0126251 May 2011 LaFreniere et al. 
2011/0131506 June 2011 Calissendorff 
2011/0145860 June 2011 Wei 
2011/0145881 June 2011 Hartman et al. 
2011/0154198 June 2011 Bachman et al. 
2011/0154405 June 2011 Isaias 
2011/0161996 June 2011 Hamano et al. 
2011/0167452 July 2011 Baumgartner et al. 
2011/0173657 July 2011 Thomas et al. 
2011/0179453 July 2011 Poniatowski 
2011/0179454 July 2011 Yates 
2011/0187929 August 2011 Suzuki et al. 
2011/0213700 September 2011 Sant'Anselmo 
2011/0219395 September 2011 Moshiri et al. 
2011/0246495 October 2011 Mallinson 
2011/0252446 October 2011 Jeong et al. 
2011/0273552 November 2011 Wang et al. 
2011/0273625 November 2011 McMahon et al. 
2011/0276995 November 2011 Alten et al. 
2011/0283304 November 2011 Roberts et al. 
2011/0283318 November 2011 Seidel et al. 
2011/0289067 November 2011 Jordan et al. 
2011/0289419 November 2011 Yu et al. 
2011/0289452 November 2011 Jordan et al. 
2011/0321095 December 2011 Yao et al. 
2011/0321098 December 2011 Bangalore et al. 
2012/0002951 January 2012 Reisman 
2012/0011545 January 2012 Doets et al. 
2012/0026400 February 2012 Kang et al. 
2012/0030317 February 2012 Smyth et al. 
2012/0033950 February 2012 Cordray et al. 
2012/0042334 February 2012 Choi et al. 
2012/0054803 March 2012 Lee et al. 
2012/0060094 March 2012 Irwin et al. 
2012/0060187 March 2012 Moon et al. 
2012/0069131 March 2012 Abelow 
2012/0072952 March 2012 Vaysman et al. 
2012/0076473 March 2012 Kunkel et al. 
2012/0079096 March 2012 Cowan et al. 
2012/0079427 March 2012 Carmichael et al. 
2012/0086857 April 2012 Kim et al. 
2012/0090004 April 2012 Jeong 
2012/0096264 April 2012 Traversat et al. 
2012/0099024 April 2012 Ryu et al. 
2012/0110623 May 2012 Hill et al. 
2012/0120316 May 2012 Lee 
2012/0133840 May 2012 Shirasuka et al. 
2012/0143972 June 2012 Malik et al. 
2012/0144416 June 2012 Wetzer et al. 
2012/0144422 June 2012 Han et al. 
2012/0144423 June 2012 Kim et al. 
2012/0147049 June 2012 Lee 
2012/0147270 June 2012 Kim et al. 
2012/0147825 June 2012 Hassan et al. 
2012/0151006 June 2012 McInerney et al. 
2012/0154449 June 2012 Ramagem et al. 
2012/0167154 June 2012 Kim et al. 
2012/0173979 July 2012 Lee 
2012/0174039 July 2012 Rhoads et al. 
2012/0174157 July 2012 Stinson, III et al. 
2012/0176546 July 2012 Yoon 
2012/0194742 August 2012 Barnes et al. 
2012/0198490 August 2012 Mertens 
2012/0200574 August 2012 Hill et al. 
2012/0206652 August 2012 Yi 
2012/0210275 August 2012 Park et al. 
2012/0210355 August 2012 Kim et al. 
2012/0210367 August 2012 Lee et al. 
2012/0210370 August 2012 Kim et al. 
2012/0210375 August 2012 Wong et al. 
2012/0210386 August 2012 Kim et al. 
2012/0218203 August 2012 Kanki 
2012/0221972 August 2012 Dougall et al. 
2012/0229320 September 2012 Yu 
2012/0229473 September 2012 Tam 
2012/0257108 October 2012 Friedlander et al. 
2012/0260284 October 2012 Friedlander et al. 
2012/0272271 October 2012 Nishizawa et al. 
2012/0278725 November 2012 Gordon et al. 
2012/0284751 November 2012 Kim et al. 
2012/0284752 November 2012 Jung 
2012/0291068 November 2012 Khushoo et al. 
2012/0297422 November 2012 Mountain 
2012/0331505 December 2012 Chun et al. 
2013/0014006 January 2013 Abellera et al. 
2013/0027613 January 2013 Kim et al. 
2013/0034023 February 2013 Jung 
2013/0047174 February 2013 Lee et al. 
2013/0091053 April 2013 Park et al. 
2013/0097640 April 2013 Lemmons et al. 
2013/0148023 June 2013 Sullivan et al. 
2013/0152135 June 2013 Hong et al. 
2013/0160065 June 2013 Aso et al. 
2013/0191869 July 2013 Sugiyama et al. 
2013/0238777 September 2013 Raleigh 
2013/0238796 September 2013 Lentzitzky 
2013/0263021 October 2013 Dunn et al. 
2013/0263053 October 2013 Tritschler et al. 
2013/0275519 October 2013 Nichols 
2013/0276031 October 2013 Oh et al. 
2013/0282839 October 2013 Alcala 
2013/0291015 October 2013 Pan 
2013/0297697 November 2013 Haimovitch et al. 
2013/0298164 November 2013 Moreau et al. 
2013/0318553 November 2013 Yegorov et al. 
2013/0326557 December 2013 Kang et al. 
2013/0332856 December 2013 Sanders et al. 
2014/0040344 February 2014 Gehring et al. 
2014/0040819 February 2014 Duffy 
2014/0049651 February 2014 Voth 
2014/0049691 February 2014 Burdzinski et al. 
2014/0049692 February 2014 Sirpal et al. 
2014/0049693 February 2014 Selim et al. 
2014/0052785 February 2014 Sirpal 
2014/0052786 February 2014 de Paz 
2014/0053176 February 2014 Milano et al. 
2014/0053177 February 2014 Voth 
2014/0053178 February 2014 Voth et al. 
2014/0053179 February 2014 Voth 
2014/0053180 February 2014 Shoykher 
2014/0053190 February 2014 Sirpal 
2014/0053191 February 2014 Selim 
2014/0053192 February 2014 Sirpal 
2014/0053193 February 2014 Selim et al. 
2014/0053194 February 2014 Shoykher et al. 
2014/0053195 February 2014 Sirpal et al. 
2014/0053196 February 2014 Selim 
2014/0053197 February 2014 Shoykher et al. 
2014/0053198 February 2014 Sirpal et al. 
2014/0053200 February 2014 de Paz et al. 
2014/0053202 February 2014 Selim 
2014/0053203 February 2014 Csiki 
2014/0053204 February 2014 Milano 
2014/0053205 February 2014 Sirpal et al. 
2014/0053206 February 2014 Shoykher et al. 
2014/0053207 February 2014 Shoykher et al. 
2014/0053208 February 2014 Sirpal et al. 
2014/0053211 February 2014 Milano 
2014/0053212 February 2014 Shoykher et al. 
2014/0053221 February 2014 Sirpal et al. 
2014/0053222 February 2014 Shoykher et al. 
2014/0053225 February 2014 Shoykher et al. 
2014/0055673 February 2014 Sirpal et al. 
2014/0059480 February 2014 de Paz et al. 
2014/0059578 February 2014 Voth et al. 
2014/0059589 February 2014 Sirpal 
2014/0059596 February 2014 Dourado 
2014/0059598 February 2014 Milano 
2014/0059599 February 2014 Sirpal et al. 
2014/0059600 February 2014 Duarado 
2014/0059601 February 2014 Sirpal 
2014/0059602 February 2014 Sirpal 
2014/0059603 February 2014 Lee et al. 
2014/0059605 February 2014 Sirpal et al. 
2014/0059606 February 2014 Selim et al. 
2014/0059609 February 2014 Duarado 
2014/0059610 February 2014 Sirpal et al. 
2014/0059612 February 2014 Selim 
2014/0059614 February 2014 Shoykher et al. 
2014/0059615 February 2014 Sirpal et al. 
2014/0059625 February 2014 Dourado et al. 
2014/0059626 February 2014 Selim 
2014/0059635 February 2014 Sirpal et al. 
2014/0059637 February 2014 Chen et al. 
2014/0067954 March 2014 Sirpal 
2014/0068673 March 2014 Sirpal et al. 
2014/0068674 March 2014 Sirpal et al. 
2014/0068679 March 2014 Kaneko et al. 
2014/0068682 March 2014 Selim et al. 
2014/0068683 March 2014 Selim et al. 
2014/0068685 March 2014 Selim et al. 
2014/0068689 March 2014 Sirpal et al. 
2014/0075475 March 2014 Sirpal et al. 
2014/0075476 March 2014 de Paz et al. 
2014/0075477 March 2014 de Paz et al. 
2014/0075479 March 2014 Soto et al. 
2014/0075483 March 2014 de Paz et al. 
2014/0075484 March 2014 Selim et al. 
2014/0075487 March 2014 Selim et al. 
2014/0082659 March 2014 Fife et al. 
2014/0109143 April 2014 Craner 
2014/0173660 June 2014 Correa et al. 
2014/0181851 June 2014 Givon et al. 
2014/0181853 June 2014 Dureau et al. 
2014/0188970 July 2014 Madhok et al. 
2014/0223464 August 2014 Moran et al. 
2014/0259074 September 2014 Ansari et al. 
2014/0380414 December 2014 Saidi et al. 
 

Foreign Patent Documents

 
 
 

 1832534  Sep 2006  CN 
 101472102  Jul 2009  CN 
 101540850  Sep 2009  CN 
 101567992  Oct 2009  CN 
 201937743  Aug 2011  CN 
 1031929  Aug 2000  EP 
 1067458  Jan 2001  EP 
 1770956  Apr 2007  EP 
 1865723  Dec 2007  EP 
 2328346  Jun 2011  EP 
 2348724  Jul 2011  EP 
 2439935  Apr 2012  EP 
 2487922  Aug 2012  EP 
 WO 99/21308  Apr 1999  WO 
 WO 99/35849  Jul 1999  WO 
 WO 00/05884  Feb 2000  WO 
 WO 01/06784  Jan 2001  WO 
 WO 01/06788  Jan 2001  WO 
 WO 02/080552  Oct 2002  WO 
 WO 03/044755  May 2003  WO 
 WO 2007/137611  Dec 2007  WO 
 WO 2011/148054  Dec 2011  WO 
 WO 2011/163481  Dec 2011  WO 
 WO 2012/030024  Mar 2012  WO 
 WO 2012/068438  May 2012  WO 
 WO 2012/073027  Jun 2012  WO 
 WO 2012/094247  Jul 2012  WO 
 WO 2012/103121  Aug 2012  WO 
 WO 2014/026636  Feb 2014  WO 
 WO 2014/026640  Feb 2014  WO 
 WO 2014/028067  Feb 2014  WO 
 WO 2014/028068  Feb 2014  WO 
 WO 2014/028069  Feb 2014  WO 
 WO 2014/028071  Feb 2014  WO 
 WO 2014/028074  Feb 2014  WO 
 


Other References


US. Appl. No. 13/970,420, filed Aug. 19, 2013, Selim et al. cited by applicant .
Tvonicsuk "Tvonics: How to use the EPG search function." 1 pages retrieved from the internet on Nov. 11, 2013 from [www.youtube.com/watch?v=H8euZ0lydo]. cited by applicant .
International Search Report and Written Opinion for International (PCT) Patent Application No. PCT/US13/36843, mailed Jun. 28, 2013 8 pages. cited by applicant .
International Search Report and Written Opinion for International (PCT) Patent Application No. PCT/US13/36826, mailed Jun. 17, 2013 8 pages. cited by applicant .
International Search Report and Written Opinion for International (PCT) Patent Application No. PCT/US13/55589, mailed Dec. 19, 2013 9 pages. cited by applicant .
International Search Report and Written Opinion for International (PCT) Patent Application No. PCT/US2013/055289, mailed Dec. 2, 2013 7 pages. cited by applicant .
International Search Report and Written Opinion for International (PCT) Patent Application No. PCT/US2013/055288, mailed Dec. 2, 2013 9 pages. cited by applicant .
International Search Report and Written Opinion for International (PCT) Patent Application No. PCT/US2013/055286, mailed Dec. 2, 2013 8 pages. cited by applicant .
International Search Report and Written Opinion for International (PCT) Patent Application No. PCT/US13/55285, mailed Dec. 11, 2013 8 pages. cited by applicant .
International Search Report and Written Opinion for International (PCT) Patent Application No. PCT/US2013/055284, mailed Jan. 14, 2014 12 pages. cited by applicant .
International Search Report and Written Opinion for International (PCT) Patent Application No. PCT/US2013/055293, mailed Dec. 2, 2013 12 pages. cited by applicant .
International Search Report and Written Opinion for International (PCT) Patent Application No. PCT/US2013/055294, mailed Dec. 2, 2013 10 pages. cited by applicant .
International Search Report and Written Opinion for International (PCT) Patent Application No. PCT/US2013/055296, mailed Nov. 29, 2013 9 pages. cited by applicant .
International Search Report and Written Opinion for International (PCT) Patent Application No. PCT/US13/55493, mailed Nov. 7, 2013 9 pages. cited by applicant .
International Search Report and Written Opinion for International (PCT) Patent Application No. PCT/US2013/036828, mailed Jun. 28, 2013 12 pages. cited by applicant .
International Search Report and Written Opinion for International (PCT) Patent Application No. PCT/US2013/055340, mailed Feb. 10, 2014 10 pages. cited by applicant .
International Search Report and Written Opinion for International (PCT) Patent Application No. PCT/US13/55551, mailed Dec. 6, 2013 7 pages. cited by applicant .
International Search Report and Written Opinion for International (PCT) Patent Application No. PCT/US2013/036819, mailed Jun. 17, 2013 9 pages. cited by applicant .
International Search Report and Written Opinion for International (PCT) Patent Application No. PCT/US2013/036782, mailed Jun. 28, 2013 9 pages. cited by applicant .
International Search Report and Written Opinion for International (PCT) Patent Application No. PCT/US13/36678, mailed Aug. 30, 2013 9 pages. cited by applicant .
International Search Report and Written Opinion for International (PCT) Patent Application No. PCT/US2013/036804, mailed Jul. 1, 2013 13 pages. cited by applicant .
International Search Report and Written Opinion for International (PCT) Patent Application No. PCT/US13/55405, mailed Jan. 17, 2014 8 pages. cited by applicant .
International Search Report and Written Opinion for International (PCT) Patent Application No. PCT/US2013/055278, mailed Mar. 11, 2014 9 pages. cited by applicant .
International Search Report and Written Opinion for International (PCT) Patent Application No. PCT/US13/55509, mailed Nov. 8, 2013 9 pages. cited by applicant .
International Search Report and Written Opinion for Intenational (PCT) Patent Application No. PCT/CN2013/081639, mailed Nov. 28, 2013 10 pages. cited by applicant .
International Search Report and Written Opinion for International (PCT) Patent Application No. PCT/US2013/055303, mailed Dec. 5, 2013 8 pages. cited by applicant .
International Search Report and Written Opinion for International (PCT) Patent Application No. PCT/US2013/055280, mailed Jan. 10, 2014 10 pages. cited by applicant .
International Search Report and Written Opinion for International (PCT) Patent Application No. PCT/US13/55383, mailed Nov. 13, 2013 9 pages. cited by applicant .
International Search Report and Written Opinion for International (PCT) Patent Application No. PCT/US2013/055344, mailed Mar. 11, 2014 8 pages. cited by applicant .
International Search Report and Written Opinion for International (PCT) Patent Application No. PCT/US2013/055345, mailed Dec. 6, 2013 7 pages. cited by applicant .
International Search Report and Written Opinion for International (PCT) Patent Application No. PCT/US13/55371, mailed No. 08, 2013 7 pages. cited by applicant .
International Search Report and Written Opinion for International (PCT) Patent Application No. PCT/US13/55389, mailed Mar. 10, 2014 10 pages. cited by applicant .
International Search Report and Written Opinion for International (PCT) Patent Application No. PCT/US2013/055283, mailed Mar. 4, 2014 7 pages. cited by applicant .
International Search Report and Written Opinion for International (PCT) Patent Application No. PCT/US13/55564, mailed Nov. 22, 2013 7 pages. cited by applicant .
International Search Report and Written Opinion for International (PCT) Patent Application No. PCT/US13/55379, mailed Dec. 6, 2013 8 pages. cited by applicant .
International Search Report and Written Opinion for International (PCT) Patent Application No. PCT/US2013/055349, mailed Nov. 29, 2013 7 pages. cited by applicant .
International Search Report and Written Opinion for International (PCT) Patent Application No. PCT/US2013/055312, mailed Dec. 5, 2013 8 pages. cited by applicant .
International Search Report and Written Opinion for International (PCT) Patent Application No. PCT/US13/55374, mailed Nov. 12, 2013 8 pages. cited by applicant .
International Search Report and Written Opinion for International (PCT) Patent Application No. PCT/US13/55542, mailed Mar. 10, 2014 9 pages. cited by applicant .
International Search Report and Written Opinion for International (PCT) Patent Application No. PCT/US13/55315, mailed Jan. 24, 2014 9 pages. cited by applicant .
International Search Report and Written Opinion for International (PCT) Patent Application No. PCT/US2013/055317, mailed Dec. 2, 2013 9 pages. cited by applicant .
International Search Report and Written Opinion for International (PCT) Patent Application No. PCT/US2013/055318, mailed Jan. 9, 2014 10 pages. cited by applicant .
International Search Report and Written Opinion for International (PCT) Patent Application No. PCT/US2013/055319, mailed Mar. 11, 2014 7 pages. cited by applicant .
International Search Report and Written Opinion for International (PCT) Patent Application No. PCT/US2013/055321, mailed Dec. 6, 2013 9 pages. cited by applicant .
International Search Report and Written Opinion for International (PCT) Patent Application No. PCT/CN2013/081630, mailed Nov. 21, 2013 11 pages. cited by applicant .
International Search Report and Written Opinion for International (PCT) Patent Application No. PCT/US2013/055298, mailed Nov. 29, 2013 8 pages. cited by applicant .
International Search Report and Written Opinion for International (PCT) Patent Application No. PCT/US13/55567, mailed Dec. 20, 2013 10 pages. cited by applicant .
International Search Report and Written Opinion for International (PCT) Patent Application No. PCT/US13/55570, mailed Nov. 22, 2013 8 pages. cited by applicant .
Official Action for U.S. Appl. No. 13/864,206, mailed Nov. 27, 2013 17 pages. cited by applicant .
Official Action for U.S. Appl. No. 13/864,214, mailed Mar. 12, 2014 12 pages. cited by applicant .
International Search Report and Written Opinion for International (PCT) Patent Application No. PCT/US13/55494, mailed Apr. 16, 2014 9 pages. cited by applicant .
International Search Report and Written Opinion for International (PCT) Patent Application No. PCT/US2013/055342, mailed Apr. 17, 2014 12 pages. cited by applicant .
International Search Report and Written Opinion for International (PCT) Patent Application No. PCT/US13/55592, mailed Mar. 10, 2014 11 pages. cited by applicant .
Notice of Allowance for U.S. Appl. No. 13/864,206, mailed Apr. 16, 2014 7 pages. cited by applicant .
Official Action for U.S. Appl. No. 13/970,409, mailed Jul. 21, 2014 21 pages. cited by applicant .
Official Action for U.S. Appl. No. 13/970,442, mailed Jun. 4, 2014 10 pages. cited by applicant .
Official Action for U.S. Appl. No. 13/970,450, mailed Jul. 9, 2014 17 pages. cited by applicant .
Official Action for U.S. Appl. No. 13/970,453, mailed Jul. 21, 2014 12 pages. cited by applicant .
Official Action for U.S. Appl. No. 13/968,858 mailed May 15, 2014 6 pages. cited by applicant .
Official Action for U.S. Appl. No. 13/968,884, mailed Jun. 25, 2014 23 pages. cited by applicant .
Official Action for U.S. Appl. No. 13/968,876 mailed Jun. 16, 2014 10 pages. cited by applicant .
Official Action for U.S. Appl. No. 13/968,983, mailed Ju. 07, 2014 15 pages. cited by applicant .
Official Action for U.S. Appl. No. 13/968,948 mailed May 6, 2014 11 pages. cited by applicant .
Official Action for U.S. Appl. No. 13/864,120 mailed Jun. 13, 2014 10 pages. cited by applicant .
Official Action for U.S. Appl. No. 13/969,505, mailed Jul. 15, 2014 7 pages. cited by applicant .
Official Action for U.S. Appl. No. 13/969,490 mailed May 23, 2014 18 pages. cited by applicant .
Official Action for U.S. Appl. No. 13/969,492 mailed May 23, 2014 17 pages. cited by applicant .
Official Action for U.S. Appl. No. 13/970,000, mailed Jul. 15, 2014 12 pages. cited by applicant .
Official Action for U.S. Appl. No. 13/970,355, mailed Jul. 7, 2014 7 pages. cited by applicant .
Official Action for U.S. Appl. No. 13/970,374, mailed Jun. 6, 2014 7 pages. cited by applicant .
Official Action for U.S. Appl. No. 13/968,903, mailed Jul. 18, 2014 14 pages. cited by applicant .
Official Action for U.S. Appl. No. 13/968,610, mailed Apr. 30, 2014 11 pages. cited by applicant .
Official Action for U.S. Appl. No. 13/968,732, mailed May 27, 2014 12 pages. cited by applicant .
Official Action for U.S. Appl. No. 13/969,777, mailed Jun. 25, 2014 9 pages. cited by applicant .
Official Action for U.S. Appl. No. 13/969,510, mailed Jun. 25, 2014 13 pages. cited by applicant .
Official Action for U.S. Appl. No. 13/970,247, mailed Jul. 9, 2014 19 pages. cited by applicant .
Official Action for U.S. Appl. No. 13/969,504, mailed Jul. 15, 2014 9 pages. cited by applicant .
Official Action for U.S. Appl. No. 13/969,846, mailed Aug. 15, 2014 19 pages. cited by applicant .
Official Action for U.S. Appl. No. 13/969,869, mailed Sep. 16, 2014 20 pages. cited by applicant .
Official Action for U.S. Appl. No. 13/969,880, mailed Sep. 11, 2014 10 pages. cited by applicant .
Official Action for U.S. Appl. No. 13/969,884, mailed Oct. 23, 2014 20 pages. cited by applicant .
Official Action for U.S. Appl. No. 13/969,887, mailed Oct. 23, 2014 16 pages. cited by applicant .
Official Action for U.S. Appl. No. 13/969,482, mailed Oct. 21, 2014 22 pages. cited by applicant .
Official Action for U.S. Appl. No. 13/969,485, mailed Oct. 2, 2014 21 pages. cited by applicant .
Official Action for U.S. Appl. No. 13/970,388, mailed Sep. 4, 2014 14 pages. cited by applicant .
Official Action for U.S. Appl. No. 13/970,398, mailed Sep. 2, 2014 14 pages. cited by applicant .
Official Action for U.S. Appl. No. 13/970,420, mailed Oct. 9, 2014 15 pages. cited by applicant .
Official Action for U.S. Appl. No. 13/970,427, mailed Sep. 30, 2014 24 pages. cited by applicant .
Official Action for U.S. Appl. No. 13/970,442, mailed Oct. 7, 2014 10 pages. cited by applicant .
Official Action for U.S. Appl. No. 13/969,588, mailed Nov. 10, 2014 11 pages. cited by applicant .
Official Action for U.S. Appl. No. 13/969,487, mailed Sep. 11, 2014 10 pages. cited by applicant .
Official Action for U.S. Appl. No. 13/969,491, mailed Oct. 8, 2014 21 pages. cited by applicant .
Official Action for U.S. Appl. No. 13/9700,000, mailed Nov. 14, 2014 14 pages. cited by applicant .
Official Action for U.S. Appl. No. 13/864,214, mailed Aug. 19, 2014 17 pages. cited by applicant .
Official Action for U.S. Appl. No. 13/969,506, mailed Oct. 2, 2014 9 pages. cited by applicant .
Official Action for U.S. Appl. No. 13/968,665, mailed Oct. 9, 2014 12 pages. cited by applicant .
Official Action for U.S. Appl. No. 13/968,897, mailed Aug. 15, 2014 15 pages. cited by applicant .
Official Action for U.S. Appl. No. 13/968,709, mailed Nov. 14, 2014 17 pages. cited by applicant .
Official Action for U.S. Appl. No. 13/970,234, mailed Aug. 12, 2014 19 pages. cited by applicant .
Official Action for U.S. Appl. No. 13/968,610, mailed Aug. 19, 2014 13 pages. cited by applicant .
Official Action for U.S. Appl. No. 13/968,630, mailed Jul. 31, 2014 9 pages. cited by applicant .
Official Action for U.S. Appl. No. 13/969,507, mailed Aug. 29, 2014 30 pages. cited by applicant .
Official Action for U.S. Appl. No. 13/969,508, mailed Nov. 7, 2014 10 pages. cited by applicant .
Official Action for U.S. Appl. No. 13/969,510, mailed Nov. 3, 2014 16 pages. cited by applicant .
Official Action for U.S. Appl. No. 13/970,243, mailed Aug. 22, 2014 20 pages. cited by applicant .
Official Action for U.S. Appl. No. 13/970,388, mailed Jan. 22, 2015 12 pages. cited by applicant .
Notice of Allowance for U.S. Appl. No. 13/970,398, mailed Feb. 2, 2015 14 pages. cited by applicant .
Official Action for U.S. Appl. No. 13/970,409, mailed Feb. 11, 2015 25 pages. cited by applicant .
Official Action for U.S. Appl. No. 13/970,420, mailed Feb. 10, 2015 13 pages. cited by applicant .
Official Action for U.S. Appl. No. 13/970,450, mailed Nov. 19, 2014 12 pages. cited by applicant .
Notice of Allowance for U.S. Appl. No. 13/970,453, mailed Dec. 9, 2014 11 pages. cited by applicant .
Official Action for U.S. Appl. No. 13/968,858, mailed Jan. 23, 2015 9 pages. cited by applicant .
Notice of Allowance for U.S. Appl. No. 13/968,884, mailed Jan. 5, 2015 20 pages. cited by applicant .
Official Action for U.S. Appl. No. 13/968,876, mailed Dec. 26, 2014 13 pages. cited by applicant .
Official Action for U.S. Appl. No. 13/968,867, mailed Jan. 27, 2015 17 pages. cited by applicant .
Official Action for U.S. Appl. No. 13/968,983, mailed Nov. 26, 2014 17 pages. cited by applicant .
Official Action for U.S. Appl. No. 13/968,948, mailed Nov. 24, 2014 13 pages. cited by applicant .
Official Action for U.S. Appl. No. 13/864,120, mailed Dec. 24, 2014 13 pages. cited by applicant .
Official Action for U.S. Appl. No. 13/969,490, mailed Nov. 19, 2014 22 pages. cited by applicant .
Official Action for U.S. Appl. No. 13/969,492, mailed Dec. 5, 2014 14 pages. cited by applicant .
Official Action for U.S. Appl. No. 13/970,355, mailed Dec. 19, 2014 9 pages. cited by applicant .
Official Action for U.S. Appl. No. 13/864,214, mailed Jan. 29, 2015 17 pages. cited by applicant .
Official Action for U.S. Appl. No. 13/969,179, mailed Nov. 28, 2014 15 pages. cited by applicant .
Official Action for U.S. Appl. No. 13/968,767, mailed Jan. 22, 2015 15 pages. cited by applicant .
Official Action for U.S. Appl. No. 13/970,374, mailed Jan. 23, 2015 9 pages. cited by applicant .
Official Action for U.S. Appl. No. 13/970,374, mailed Dec. 9, 2014 9 pages. cited by applicant .
Official Action for U.S. Appl. No. 13/968,897, mailed Jan. 28, 2015 18 pages. cited by applicant .
Official Action for U.S. Appl. No. 13/968,652, mailed Dec. 5, 2014 25 pages. cited by applicant .
Official Action for U.S. Appl. No. 13/968,903, mailed Jan. 5, 2015 13 pages. cited by applicant .
Official Action for U.S. Appl. No. 13/970,234, mailed Dec. 26, 2014 13 pages. cited by applicant .
Official Action for U.S. Appl. No. 13/968,610, mailed Dec. 31, 2014 7 pages. cited by applicant .
Official Action for U.S. Appl. No. 13/968,732, mailed Dec. 26, 2014 13 pages. cited by applicant .
Official Action for U.S. Appl. No. 13/969,777, mailed Jan. 8, 2015 11 pages. cited by applicant .
Official Action for U.S. Appl. No. 13/968,630, mailed Nov. 19, 2014 11 pages. cited by applicant .
Official Action for U.S. Appl. No. 13/969,507, mailed Jan. 27, 2015 30 pages. cited by applicant .
Official Action for U.S. Appl. No. 13/968,937, mailed Dec. 18, 2014 9 pages. cited by applicant .
Official Action for U.S. Appl. No. 13/970,243, mailed Jan. 22, 2015 14 pages. cited by applicant .
Official Action for U.S. Appl. No. 13/970,247, mailed Dec. 22, 2014 20 pages. cited by applicant .
International Preliminary Report on Patentability for International (PCT) Patent Application No. PCT/US13/55494, mailed Feb. 26, 2015 8 pages. cited by applicant .
International Preliminary Report on Patentability for International (PCT) Patent Application No. PCT/US13/36826, mailed Feb. 26, 2015 8 pages. cited by applicant .
International Preliminary Report on Patentability for International (PCT) Patent Application No. PCT/US2013/055342, mailed Feb. 26, 2015 10 pages. cited by applicant .
International Preliminary Report on Patentability for International (PCT) Patent Application No. PCT/US13/55589, mailed Feb. 26, 2015 8 pages. cited by applicant .
International Preliminary Report on Patentability for International (PCT) Patent Application No. PCT/US2013/055289, mailed Feb. 26, 2015 8 pages. cited by applicant .
International Preliminary Report on Patentability for International (PCT) Patent Application No. PCT/US2013/055288, mailed Feb. 26, 2015 10 pages. cited by applicant .
International Preliminary Report on Patentability for International (PCT) Patent Application No. PCT/US2013/055286, mailed Feb. 26, 2015 8 pages. cited by applicant .
International Preliminary Report on Patentability for International (PCT) Patent Application No. PCT/US2013/055294, mailed Feb. 26, 2015 10 pages. cited by applicant .
International Preliminary Report on Patentability for International (PCT) Patent Application No. PCT/US13/55493, mailed Feb. 26, 2015 8 pages. cited by applicant .
International Preliminary Report on Patentability for International (PCT) Patent Application No. PCT/US2013/036828, mailed Feb. 26, 2015 12 pages. cited by applicant .
International Preliminary Report on Patentability for International (PCT) Patent Application No. PCT/US2013/055340, mailed Feb. 26, 2015 8 pages. cited by applicant .
International Preliminary Report on Patentability for International (PCT) Patent Application No. PCT/US13/055592, mailed Feb. 26, 2015 10 pages. cited by applicant .
International Preliminary Report on Patentability for International (PCT) Patent Application No. PCT/US2013/036819, mailed Feb. 26, 2015 8 pages. cited by applicant .
International Preliminary Report on Patentability for International (PCT) Patent Application No. PCT/US2013/036782, mailed Feb. 26, 2015 8 pages. cited by applicant .
International Preliminary Report on Patentability for International (PCT) Patent Application No. PCT/US13/036678, mailed Feb. 26, 2015 8 pages. cited by applicant .
International Preliminary Report on Patentability for International (PCT) Patent Application No. PCT/US2013/036804, mailed Feb. 26, 2015 12 pages. cited by applicant .
International Preliminary Report on Patentability for International (PCT) Patent Application No. PCT/US13/055405, mailed Feb. 26, 2015 8 pages. cited by applicant .
International Preliminary Report on Patentability for International (PCT) Patent Application No. PCT/US2013/55509, mailed Feb. 26, 2015 8 pages. cited by applicant .
International Preliminary Report on Patentability for International (PCT) Patent Application No. PCT/US13/55509, mailed Feb. 26, 2015 8 pages. cited by applicant .
International Preliminary Report on Patentability for International (PCT) Patent Application No. PCT/CN2013/081639, mailed Feb. 26, 2015 6 pages. cited by applicant .
International Preliminary Report on Patentability for International (PCT) Patent Application No. PCT/US2013/055303, mailed Feb. 26, 2015 7 pages. cited by applicant .
International Preliminary Report on Patentability for International (PCT) Patent Application No. PCT/US13/55567, mailed Feb. 26, 2015 9 pages. cited by applicant .
International Preliminary Report on Patentability for International (PCT) Patent Application No. PCT/US13/55570, mailed Feb. 26, 2015 7 pages. cited by applicant .
Official Action for U.S. Appl. No. 13/969,846, mailed Mar. 2, 2015 21 pages. cited by applicant .
Official Action for U.S. Appl. No. 13/969,869, mailed Feb. 24, 2015 22 pages. cited by applicant .
Official Action for U.S. Appl. No. 13/969,880, mailed Mar. 27, 2015 14 pages. cited by applicant .
Notice of Allowance for U.S. Appl. No. 13/969,884, mailed Mar. 24, 2015 16 pages. cited by applicant .
Official Action for U.S. Appl. No. 13/969,887, mailed Mar. 11, 2015 24 pages. cited by applicant .
Official Action for U.S. Appl. No. 13/969,485, mailed Mar. 11, 2015 19 pages. cited by applicant .
Official Action for U.S. Appl. No. 13/970,442, mailed Feb. 26, 2015 10 pages. cited by applicant .
Corrected Notice of Allowance for U.S. Appl. No. 13/968,884, mailed Apr. 1, 2015 15 pages. cited by applicant .
Official Action for U.S. Appl. No. 13/968,913, mailed Apr. 1, 2015 16 pages. cited by applicant .
Official Action for U.S. Appl. No. 13/968,983, mailed Mar. 12, 2015 21 pages. cited by applicant .
Official Action for U.S. Appl. No. 13/968,948, mailed Mar. 11, 2015 13 pages. cited by applicant .
Official Action for U.S. Appl. No. 13/969,588, mailed Mar. 11, 2015 12 pages. cited by applicant .
Official Action for U.S. Appl. No. 13/969,505, mailed Feb. 24, 2015 9 pages. cited by applicant .
Official Action for U.S. Appl. No. 13/969,491, mailed Mar. 20, 2015 25 pages. cited by applicant .
Official Action for U.S. Appl. No. 13/969,493, mailed Mar. 2, 2015 15 pages. cited by applicant .
Official Action for U.S. Appl. No. 13/969,179, mailed Mar. 12, 2015 17 pages. cited by applicant .
Official Action for U.S. Appl. No. 13/968,709, mailed Feb. 23, 2015 13 pages. cited by applicant .
Notice of Allowance for U.S. Appl. No. 13/968,610, mailed Feb. 24, 2015 5 pages. cited by applicant .
Official Action for U.S. Appl. No. 13/968,630, mailed Mar. 27, 2015 15 pages. cited by applicant .
Official Action for U.S. Appl. No. 13/969,508, mailed Mar. 5, 2015 9 pages. cited by applicant .
Official Action for U.S. Appl. No. 13/969,510, mailed Feb. 24, 2015 17 pages. cited by applicant .
Official Action for U.S. Appl. No. 13/969,504, mailed Feb. 23, 2015 10 pages. cited by applicant.  

Primary Examiner: Mengesha; Mulugeta 
Attorney, Agent or Firm: Sheridan Ross P.C. 

--------------------------------------------------------------------------------

Parent Case Text

--------------------------------------------------------------------------------


CROSS REFERENCE TO RELATED APPLICATION 

 The present application claims the benefits of and priority, under 35 U.S.C. .sctn.119(e), to U.S. Provisional Application Ser. Nos. 61/684,672 filed Aug. 17, 2012, "Smart TV"; 61/702,650 filed Sep. 18, 2012, "Smart TV"; 61/697,710 filed Sep. 6, 2012, "Social TV"; 61/700,182 filed Sep. 12, 2012, "Social TV Roadmap"; 61/736,692 filed Dec. 13, 2012, "SmartTV"; 61/798,821 filed Mar. 15, 2013, "SmartTV"; 61/804,942 filed Mar. 25, 2013, "SmartTV"; 61/804,998 filed Mar. 25, 2013, "SmartTV"; 61/804,971 filed Mar. 25, 2013, "SmartTV"; 61/804,990 filed Mar. 25, 2013, "SmartTV"; 61/805,003 filed Mar. 25, 2013, "SmartTV"; 61/805,053 filed Mar. 25, 2013, "SmartTV"; 61/805,030 filed Mar. 25, 2013, "SmartTV"; 61/805,027 filed Mar. 25, 2013, "SmartTV"; 61/805,042 filed Mar. 25, 2013, "SmartTV"; and 61/805,038 filed Mar. 25, 2013, "SmartTV." Each of the aforementioned documents is incorporated herein by reference in their entirety for all that they teach and for all purposes. 
--------------------------------------------------------------------------------

Claims

--------------------------------------------------------------------------------


What is claimed is: 

 1. A method of presenting a user interface implemented on an intelligent television (TV), comprising: running, via a processor associated with the intelligent television, a live TV application, wherein the live TV application is configured to control one or more interactive user functions of the intelligent TV; presenting, substantially simultaneously via a display of the intelligent TV, live TV broadcast content, wherein the live TV broadcast content is presented to a first portion of the display, wherein the first portion of the display includes substantially an entire area of a screen of the TV; receiving a first live TV application input at the intelligent TV; determining, by the processor and in response to receiving the first live TV application input, a first live TV application feature to present via the display, wherein the one or more interactive user functions of the intelligent TV are controlled via the first live TV application feature; presenting, via the display, the first live TV application feature to a second portion of the display, wherein the second portion of the display overlaps at least a portion of the first portion of the display, wherein the second portion of the display includes less than the entire area of the screen of the TV, and wherein at least part of the second portion is either transparent or translucent; receiving a home screen input at the intelligent TV; determining, by the processor and in response to receiving the home screen input, a global panel feature to present via the display, wherein the one or more interactive user functions of the intelligent TV are controlled via the global panel feature; and presenting, via the display, the global panel feature to a third portion of the display, wherein the third portion of the display overlaps at least a portion of the first portion of the display, wherein the third portion of the display includes less than the entire area of the screen of the TV, wherein at least part of the third portion of the display is either transparent or translucent, and wherein a first location of the third portion of the display is different from a second location of the second portion of the display. 

 2. The method of claim 1, wherein the live TV broadcast content includes at least one of a TV episode, a TV special, a movie, a sport event, and a radio program. 

 3. The method of claim 1, wherein the first live TV application input is provided automatically via the processor associated with the intelligent TV. 

 4. The method of claim 1, wherein the first live TV application input is provided by a user via a remote control associated with the intelligent TV. 

 5. The method of claim 1, wherein presenting the first live TV application feature further comprises presenting views and dialogs via the display of the intelligent TV. 

 6. The method of claim 1, wherein the one or more interactive user functions of the intelligent TV include at least one of channel changing, channel viewing, program information viewing, setting reminders, clearing reminders, setting favorites, and clearing favorites. 

 7. The method of claim 1, wherein the first live TV application is configured to communicate with at least one manager and provider of an operating system framework associated with the intelligent TV. 

 8. The method of claim 1, wherein the first live TV application is configured to communicate with a system user interface (UI) application associated with the intelligent TV. 

 9. The method of claim 8, wherein the system UI application is configured to automatically format one or more applications for use by the first live TV application. 

 10. A tangible, non-transitory computer readable medium having instructions stored thereon that, when executed by a processor, implement the method of presenting a user interface, the method comprising: running, via a processor associated with an intelligent television (TV), a live TV application, wherein the live TV application is configured to control one or more interactive user functions of the intelligent TV; presenting, substantially simultaneously via a display of the intelligent TV, live TV broadcast content, wherein the live TV broadcast content is presented to a first portion of the display, wherein the first portion of the display includes substantially an entire area of a screen of the TV; receiving a live TV application input at the intelligent TV; determining, by the processor and in response to receiving the live TV application input, a live TV application feature to present via the display, wherein the one or more interactive user functions of the intelligent TV are controlled via the live TV application feature; presenting, via the display, the live TV application feature to a second portion of the display, wherein the second portion of the display overlaps at least a portion of first portion of the display, wherein the second portion of the display includes less than the entire area of the screen of the TV, and wherein at least part of the second portion of the display is either transparent or translucent; receiving a global panel input at the intelligent TV; determining, by the processor and in response to receiving the global panel input, a global panel feature to present via the display, wherein the one or more interactive user functions of the intelligent TV are controlled via the global panel feature; and presenting, via the display, the global panel feature to a third portion of the display, wherein the third portion of the display overlaps at least a portion of the first portion of the display, wherein the third portion of the display includes less than the entire area of the screen of the TV, wherein at least part of the third portion of the display is either transparent or translucent, and wherein a first location of the third portion of the display is different from a second location of the second portion of the display. 

 11. The tangible, non-transitory computer readable medium of claim 10, wherein the live TV broadcast content includes at least one of a TV episode, a TV special, a movie, a sport event, and a radio program. 

 12. The tangible, non-transitory computer readable medium of claim 10, wherein the live TV application input is provided automatically via the processor associated with the intelligent TV. 

 13. The tangible, non-transitory computer readable medium of claim 10, wherein live TV application input is provided by a user via a remote control associated with the intelligent TV. 

 14. The tangible, non-transitory computer readable medium of claim 10, wherein presenting the live TV application feature further comprises presenting views and dialogs via the display of the intelligent TV. 

 15. The tangible, non-transitory computer readable medium of claim 10, wherein the one or more interactive user functions of the intelligent TV include at least one of channel changing, channel viewing, program information viewing, setting reminders, clearing reminders, setting favorites, and clearing favorites. 

 16. The tangible, non-transitory computer readable medium of claim 10, wherein the live TV application is configured to communicate with at least one manager and provider of an operating system framework associated with the intelligent TV. 

 17. The tangible, non-transitory computer readable medium of claim 10, wherein the live TV application is configured to communicate with a system user interface (UI) application associated with the intelligent TV. 

 18. The tangible, non-transitory computer readable medium of claim 17, wherein the system UI application is configured to automatically format one or more applications for use by the live TV application. 

 19. A machine, comprising: an intelligent television (TV) having a display and a tuner, wherein the tuner is configured to receive and convert broadcast content signals to be displayed by the display; an input device associated with the intelligent TV; a memory; and a microprocessor operable to: run a live TV application, wherein the live TV application is configured to control one or more interactive user functions of the intelligent TV; present, substantially simultaneously via the display of the intelligent TV, live TV broadcast content, wherein the live TV broadcast content is presented to a first portion of the display, wherein the first portion of the display includes substantially an entire area of a screen of the TV; receive a live TV application input at the intelligent TV; determine, in response to receiving the live TV application input, a live TV application feature to present via the display, wherein the one or more interactive user functions of the intelligent TV are controlled via the live TV application feature; present, via the display, the live TV application feature to a second portion of the display, wherein the second portion of the display overlaps at least a portion of the first portion of the display, wherein the second portion of the display includes less than the entire area of the screen of the TV, and wherein at least part of the second portion of the display is either transparent or translucent; receive a global panel input at the intelligent TV; determine, by the processor and in response to receiving the global panel input, a global panel feature to present via the display, wherein the one or more interactive user functions of the intelligent TV are controlled via the global panel feature; and present, via the display, the global panel feature to a third portion of the display, wherein the third portion of the display overlaps at least a portion of the first portion of the display, wherein the third portion of the display includes less than the entire area of the screen of the TV, wherein at least part of the third portion of the display is either transparent or translucent, and wherein a first location of the third portion of the display is different from a second location of the second portion of the display. 

 20. The system of claim 19, wherein live TV application input is provided by a user via the input device associated with the intelligent TV. 
--------------------------------------------------------------------------------

Description

--------------------------------------------------------------------------------


BACKGROUND 

 Consolidation of device features or technological convergence is in an increasing trend. Technological convergence describes the tendency for different technological systems to evolve toward performing similar tasks. As people use more devices, the need to carry those devices, charge those devices, update software on those devices, etc. becomes more cumbersome. To compensate for these problems, technology companies have been integrating features from different devices into one or two multi-functional devices. For example, cellular phones are now capable of accessing the Internet, taking photographs, providing calendar functions, etc. 

 The consolidation trend is now affecting the design and functionality of devices generally used in the home. For example, audio receivers can access the Internet, digital video recorders can store or provide access to digital photographs, etc. The television in home audio/video systems remains a cornerstone device because the display function cannot be integrated into other devices. As such, consolidating home devices leads to integrating features and functionality into the television. The emergence of the Smart Television (Smart TV) is evidence of the trend to consolidate functionality into the television. 

 A Smart TV is generally conceived as a device that integrates access to the Internet and Web 2.0 features into television sets. The Smart TV represents the trend of technological convergence between computers and television sets. The Smart TV generally focuses on online interactive media, Internet TV, on-demand streaming media, and generally does not focus on traditional broadcast media. Unfortunately, most Smart TVs have yet to provide seamless and intuitive user interfaces for navigating and/or executing the various features of the Smart TV. As such, there are still issues with the consolidation of features and the presentation of these features in Smart TVs. 

SUMMARY 

 There is a need for an Intelligent TV with intuitive user interfaces and with seamless user interaction capability. These and other needs are addressed by the various aspects, embodiments, and/or configurations of the present disclosure. Also, while the disclosure is presented in terms of exemplary embodiments, it should be appreciated that individual aspects of the disclosure can be separately claimed. 

 In embodiments, a method is provided, comprising: running, via a processor associated with an intelligent television (TV), a live TV application, wherein the live TV application is configured to control one or more interactive user functions of the intelligent TV; presenting, simultaneously via a display of the intelligent TV, live TV broadcast content, wherein the live TV broadcast content is presented to a first portion of the display; receiving a live TV application input at the intelligent TV; determining, by the processor and in response to receiving the live TV application input, a live TV application feature to present via the display, wherein the one or more interactive user functions of the intelligent TV are controlled via the live TV application feature; and presenting, via the display, the live TV application feature to a second portion of the display, wherein the second portion of the display overlaps at least a portion of the presented live TV broadcast content. 

 In another embodiment, a tangible, non-transitory computer readable medium is provided having instructions stored thereon that, when executed by a processor, perform the method comprising: running, via a processor associated with an intelligent television (TV), a live TV application, wherein the live TV application is configured to control one or more interactive user functions of the intelligent TV; presenting, simultaneously via a display of the intelligent TV, live TV broadcast content, wherein the live TV broadcast content is presented to a first portion of the display; receiving a live TV application input at the intelligent TV; determining, by the processor and in response to receiving the live TV application input, a live TV application feature to present via the display, wherein the one or more interactive user functions of the intelligent TV are controlled via the live TV application feature; and presenting, via the display, the live TV application feature to a second portion of the display, wherein the second portion of the display overlaps at least a portion of the presented live TV broadcast content. 

 In yet another embodiment, a system is provided, comprising: an intelligent television (TV) having a display and a tuner, wherein the tuner is configured to receive and convert broadcast content signals to be displayed by the display; an input device associated with the intelligent TV; a memory; and a microprocessor operable to: run a live TV application, wherein the live TV application is configured to control one or more interactive user functions of the intelligent TV; present, simultaneously via the display of the intelligent TV, live TV broadcast content, wherein the live TV broadcast content is presented to a first portion of the display; receive a live TV application input at the intelligent TV; determine, in response to receiving the live TV application input, a live TV application feature to present via the display, wherein the one or more interactive user functions of the intelligent TV are controlled via the live TV application feature; and present, via the display, the live TV application feature to a second portion of the display, wherein the second portion of the display overlaps at least a portion of the presented live TV broadcast content. 

 The present disclosure can provide a number of advantages depending on the particular aspect, embodiment, and/or configuration. Among other things, embodiments of the present disclosure allow a user to interface with live television content via a live TV application of an intelligent TV. More specifically, a user may be provided with navigation, notification, and/or setup options which are associated with or enable one or more functions of the intelligent TV. 

 These and other advantages will be apparent from the disclosure. 

 The phrases "at least one", "one or more", and "and/or" are open-ended expressions that are both conjunctive and disjunctive in operation. For example, each of the expressions "at least one of A, B and C", "at least one of A, B, or C", "one or more of A, B, and C", "one or more of A, B, or C" and "A, B, and/or C" means A alone, B alone, C alone, A and B together, A and C together, B and C together, or A, B and C together. 

 The term "a" or "an" entity refers to one or more of that entity. As such, the terms "a" (or "an"), "one or more" and "at least one" can be used interchangeably herein. It is also to be noted that the terms "comprising", "including", and "having" can be used interchangeably. 

 The term "automatic" and variations thereof, as used herein, refers to any process or operation done without material human input when the process or operation is performed. However, a process or operation can be automatic, even though performance of the process or operation uses material or immaterial human input, if the input is received before performance of the process or operation. Human input is deemed to be material if such input influences how the process or operation will be performed. Human input that consents to the performance of the process or operation is not deemed to be "material." 

 A "blog" (a blend of the term web log) is a type of website or part of a website supposed to be updated with new content from time to time. Blogs are usually maintained by an individual with regular entries of commentary, descriptions of events, or other material such as graphics or video. Entries are commonly displayed in reverse-chronological order. 

 A "blogging service" is a blog-publishing service that allows private or multi-user blogs with time-stamped entries. 

 The term "cable TV" refers to a system of distributing television programs to subscribers via radio frequency (RF) signals transmitted through coaxial cables or light pulses through fiber-optic cables. This contrasts with traditional broadcast television (terrestrial television) in which the television signal is transmitted over the air by radio waves and received by a television antenna attached to the television. 

 The term "channel" or "television channel," as used herein, can be a physical or virtual channel over which a television station or television network is distributed. A physical cannel in analog television can be an amount of bandwidth, typically 6, 7, or 8 MHz, that occupies a predetermine channel frequency. A virtual channel is a representation, in cable or satellite television, of a data stream for a particular television media provider (e.g., CDS, TNT, HBO, etc.). 

 The term "computer-readable medium," as used herein, refers to any tangible storage and/or transmission medium that participate in providing instructions to a processor for execution. Such a medium may take many forms, including but not limited to, non-volatile media, volatile media, and transmission media. Non-volatile media includes, for example, NVRAM, or magnetic or optical disks. Volatile media includes dynamic memory, such as main memory. Common forms of computer-readable media include, for example, a floppy disk, a flexible disk, hard disk, magnetic tape, or any other magnetic medium, magneto-optical medium, a CD-ROM, any other optical medium, punch cards, paper tape, any other physical medium with patterns of holes, a RAM, a PROM, and EPROM, a FLASH-EPROM, a solid state medium like a memory card, any other memory chip or cartridge, a carrier wave as described hereinafter, or any other medium from which a computer can read. A digital file attachment to e-mail or other self-contained information archive or set of archives is considered a distribution medium equivalent to a tangible storage medium. When the computer-readable media is configured as a database, it is to be understood that the database may be any type of database, such as relational, hierarchical, object-oriented, and/or the like. Accordingly, the disclosure is considered to include a tangible storage medium or distribution medium and prior art-recognized equivalents and successor media, in which the software implementations of the present disclosure are stored. 

 The term "enhanced television" (ETV) refers to a collection of specifications developed under the OpenCable project of CableLabs (Cable Television Laboratories, Inc.) that define an ETV Application consisting of resources (files) adhering to the Enhanced TV Binary Interchange Format (EBIF) content format as well as PNG images, JPEG images, and PFR downloadable fonts. An ETV application is normally delivered through an MPEG transport stream and accompanies an MPEG program containing video and audio elementary streams. An "ETV Application" is a collection of resources (files) that include one or more EBIF resources that represent viewable information in the form of pages. Two forms of a given ETV Application may be distinguished: (1) an interchange form and (2) an execution form. The interchange form of an ETV Application consists of the resources (files) that represent the compiled application prior to its actual execution by an ETV User Agent. The execution form of an ETV Application consists of the stored, and possibly mutated forms of these resources while being decoded, presented, and executed by an ETV User Agent. An "ETV User Agent" is a software component that operates on a set-top box, a television, or any other computing environment capable of receiving, decoding, presenting, and processing an ETV Application. This component usually provides, along with its host hardware environment, one or more mechanisms for an end-user to navigate and interact with the multimedia content represented by ETV Applications. 

 The term "high-definition television" (HDTV) provides a resolution that is substantially higher than that of standard-definition television. HDTV may be transmitted in various formats, namely 1080p-1920.times.1080p: 2,073,600 pixels (approximately 2.1 megapixels) per frame, 1080i (which is typically either 1920.times.1080i: 1,036,800 pixels (approximately 1 megapixel) per field or 2,073,600 pixels (approximately 2.1 megapixels) per frame or 1440.times.1080i:[1] 777,600 pixels (approximately 0.8 megapixels) per field or 1,555,200 pixels (approximately 1.6 megapixels) per frame), or 720p-1280.times.720p: 921,600 pixels (approximately 0.9 megapixels) per frame. As will be appreciated, "frame size" in pixels is defined as number of horizontal pixels.times.number of vertical pixels, for example 1280.times.720 or 1920.times.1080. Often the number of horizontal pixels is implied from context and is omitted, as in the case of 720p and 1080p, "scanning system" is identified with the letter "p" for progressive scanning or "i" for interlaced scanning, and "frame rate" is identified as number of video frames per second. For interlaced systems an alternative form of specifying number of fields per second is often used. For purposes of this disclosure, "high-definition television" is deemed to include other high-definition analog or digital video formats, including ultra high definition television. 

 The term "internet television" (otherwise known as Internet TV, Online Television, or Online TV) is the digital distribution of television content via the Internet. It should not be confused with Web television--short programs or videos created by a wide variety of companies and individuals, or Internet protocol television (IPTV)--an emerging internet technology standard for use by television broadcasters. Internet Television is a general term that covers the delivery of television shows and other video content over the internet by video streaming technology, typically by major traditional television broadcasters. It does not describe a technology used to deliver content (see Internet protocol television). Internet television has become very popular through services such as RTE Player in Ireland; BBC iPlayer, 4oD, ITV Player (also STV Player and UTV Player) and Demand Five in the United Kingdom; Hulu in the United States; Nederland 24 in the Netherlands; ABC iview and Australia Live TV in Australia; Tivibu in Turkey; and iWanTV! in the Philippines. 

 The term "internet protocol television" (IPTV) refers to a system through which television services are delivered using the Internet protocol suite over a packet-switched network such as the Internet, instead of being delivered through traditional terrestrial, satellite signal, and cable television formats. IPTV services may be classified into three main groups, namely live television, with or without interactivity related to the current TV show; time-shifted television: catch-up TV (replays a TV show that was broadcast hours or days ago), start-over TV (replays the current TV show from its beginning); and video on demand (VOD): browse a catalog of videos, not related to TV programming. IPTV is distinguished from Internet television by its on-going standardization process (e.g., European Telecommunications Standards Institute) and preferential deployment scenarios in subscriber-based telecommunications networks with high-speed access channels into end-user premises via set-top boxes or other customer-premises equipment. 

 The term "silo," as used herein, can be a logical representation of an input, source, or application. An input can be a device or devices (e.g., DVD, VCR, etc.) electrically connected to the television through a port (e.g., HDMI, video/audio inputs, etc.) or through a network (e.g., LAN WAN, etc.). Rather than a device or devices, the input could be configured as an electrical or physical connection to one or more devices. A source, particularly a content source, can be a data service that provides content (e.g., a media center, a file system, etc.). An application can be a software service that provides a particular type of function (e.g., Live TV, Video on Demand, User Applications, photograph display, etc.). The silo, as a logical representation, can have an associated definition or property, such as a setting, feature, or other characteristic. 

 The term "panel," as used herein, can mean a user interface displayed in at least a portion of the display. The panel may be interactive (e.g., accepts user input) or informational (e.g., does not accept user input). A panel may be translucent whereby the panel obscures but does not mask the underlying content being displayed in the display. Panels may be provided in response to a user input from a button or remote control interface. 

 The term "screen," as used herein, refers to a physical structure that includes one or more hardware components that provide the device with the ability to render a user interface and/or receive user input. A screen can encompass any combination of gesture capture region, a touch sensitive display, and/or a configurable area. The device can have one or more physical screens embedded in the hardware. However a screen may also include an external peripheral device that may be attached and detached from the device. In embodiments, multiple external devices may be attached to the device. For example, another screen may be included with a remote control unit that interfaces with the Intelligent TV. 

 The term "media" of "multimedia," as used herein, refers to content that may assume one of a combination of different content forms. Multimedia can include one or more of, but is not limited to, text, audio, still images, animation, video, or interactivity content forms. 

 The term "Intelligent TV," as used herein, refers to a television configured to provide one or more intuitive user interfaces and interactions based on a unique application platform and architecture. The Intelligent TV utilizes processing resources associated with the television to integrate Internet connectivity with parallel application functionality. This integration allows a user the ability to intuitively access various sources of media and content (e.g., Internet, over-the-top content, on-demand streaming media, over-the-air broadcast media, and/or other forms of information) via the Intelligent TV in a quick and efficient manner. Although the Intelligent TV disclosed herein may comprise one or more components of a "smart TV," it is an aspect of the Intelligent TV to provide expanded intuitive user interaction capability for navigating and executing the various features of the television. A "smart TV," sometimes referred to as a connected TV, or hybrid TV (not to be confused with IPTV, Internet TV, or with Web TV), describes a trend of integration of the Internet and Web 2.0 features into television sets and set-top boxes, as well as the technological convergence between computers and these television sets/set-top boxes. The smart TV devices have a higher focus on online interactive media, Internet TV, over-the-top content, as well as on-demand streaming media, and less focus on traditional broadcast media than traditional television sets and set-top boxes. As can be appreciated, the Intelligent TV encompasses a broader range of technology than that of the smart TV defined above. 

 The term "television" is a telecommunication medium, device (or set) or set of associated devices, programming, and/or transmission for transmitting and receiving moving images that can be monochrome (black-and-white) or colored, with or without accompanying sound. Different countries use one of the three main video standards for TVs, namely PAL, NTSC or SECAM. Television is most commonly used for displaying broadcast television signals. The broadcast television system is typically disseminated via radio transmissions on designated channels in the 54-890 MHz frequency band. A common television set comprises multiple internal electronic circuits, including those for receiving and decoding broadcast signals. A visual display device which lacks a tuner is properly called a video monitor, rather than a television. A television may be different from other monitors or displays based on the distance maintained between the user and the television when the user watches the media and based on the inclusion of a tuner or other electronic circuit to receive the broadcast television signal. 

 The term "Live TV," as used herein, refers to a television production broadcast in real-time, as events happen, in the present. 

 The term "standard-definition television" (SDTV) is a television system that uses a resolution that is not considered to be either high-definition television (HDTV 720p and 1080p) or enhanced-definition television (EDTV 480p). The two common SDTV signal types are 576i, with 576 interlaced lines of resolution, derived from the European-developed PAL and SECAM systems; and 480i based on the American National Television System Committee NTSC system. In the US, digital SDTV is broadcast in the same 4:3 aspect ratio as NTSC signals. However, in other parts of the world that used the PAL or SECAM analog standards, standard-definition television is now usually shown with a 16:9 aspect ratio. Standards that support digital SDTV broadcast include DVB, ATSC and ISDB. Television signals are transmitted in digital form, and their pixels have a rectangular shape, as opposed to square pixels that are used in modern computer monitors and modern implementations of HDTV. The table below summarizes pixel aspect ratios for various kinds of SDTV video signal. Note that the actual image (be it 4:3 or 16:9) is always contained in the center 704 horizontal pixels of the digital frame, regardless of how many horizontal pixels (704 or 720) are used. In case of digital video signal having 720 horizontal pixels, only the center 704 pixels contain actual 4:3 or 16:9 image, and the 8 pixel wide stripes from either side are called nominal analogue blanking and should be discarded before displaying the image. Nominal analogue blanking should not be confused with overscan, as overscan areas are part of the actual 4:3 or 16:9 image. 

 The term "video on demand (VOD)," as used herein, refers to systems and processes which allow users to select and watch/listen to video or audio content on demand. VOD systems may stream content, to view the content in real time, or download the content to a storage medium for viewing at a later time. 

 The term "satellite positioning system receiver" refers to a wireless receiver or transceiver to receive and/or send location signals from and/or to a satellite positioning system, such as the Global Positioning System ("GPS") (US), GLONASS (Russia), Galileo positioning system (EU), Compass navigation system (China), and Regional Navigational Satellite System (India). 

 The term "display," as used herein, refers to at least a portion of a screen used to display the output of the television to a user. A display may be a single-screen display or a multi-screen display, referred to as a composite display. A composite display can encompass the touch sensitive display of one or more screens. A single physical screen can include multiple displays that are managed as separate logical displays. Thus, different content can be displayed on the separate displays although part of the same physical screen. 

 The term "displayed image," as used herein, refers to an image produced on the display. A typical displayed image is a television broadcast or menu. The displayed image may occupy all or a portion of the display. 

 The term "display orientation," as used herein, refers to the way in which a rectangular display is oriented by a user for viewing. The two most common types of display orientation are portrait and landscape. In landscape mode, the display is oriented such that the width of the display is greater than the height of the display (such as a 4:3 ratio, which is 4 units wide and 3 units tall, or a 16:9 ratio, which is 16 units wide and 9 units tall). Stated differently, the longer dimension of the display is oriented substantially horizontal in landscape mode while the shorter dimension of the display is oriented substantially vertical. In the portrait mode, by contrast, the display is oriented such that the width of the display is less than the height of the display. Stated differently, the shorter dimension of the display is oriented substantially horizontal in the portrait mode while the longer dimension of the display is oriented substantially vertical. 

 The term "module," as used herein, refers to any known or later developed hardware, software, firmware, artificial intelligence, fuzzy logic, or combination of hardware and software that is capable of performing the functionality associated with that element. 

 The terms "determine," "calculate" and "compute," and variations thereof, as used herein, are used interchangeably and include any type of methodology, process, mathematical operation or technique. 

 The term "touch screen" or "touchscreen" refer to screen that can receive user contact or other tactile input, such as a stylus. The touch screen may sense user contact in a number of different ways, such as by a change in an electrical parameter (e.g., resistance or capacitance), acoustic wave variations, infrared radiation proximity detection, light variation detection, and the like. In a resistive touch screen, for example, normally separated conductive and resistive metallic layers in the screen pass an electrical current. When a user touches the screen, the two layers make contact in the contacted location, whereby a change in electrical field is noted and the coordinates of the contacted location calculated. In a capacitive touch screen, a capacitive layer stores electrical charge, which is discharged to the user upon contact with the touch screen, causing a decrease in the charge of the capacitive layer. The decrease is measured, and the contacted location coordinates determined. In a surface acoustic wave touch screen, an acoustic wave is transmitted through the screen, and the acoustic wave is disturbed by user contact. A receiving transducer detects the user contact instance and determines the contacted location coordinates. 

 The term "web television" is original television content produced for broadcast via the World Wide Web. Some major distributors of web television are YouTube, Myspace, Newgrounds, Blip.tv, and Crackle. 

 The terms "instant message" and "instant messaging" refer to a form of real-time text communication between two or more people, typically based on typed text. 

 The term "internet search engine" refers to a web search engine designed to search for information on the World Wide Web and FTP servers. The search results are generally presented in a list of results often referred to as SERPS, or "search engine results pages." The information may consist of web pages, images, information and other types of files. Some search engines also mine data available in databases or open directories. Web search engines work by storing information about many web pages, which they retrieve from the html itself. These pages are retrieved by a Web crawler (sometimes also known as a spider)--an automated Web browser which follows every link on the site. The contents of each page are then analyzed to determine how it should be indexed (for example, words are extracted from the titles, headings, or special fields called meta tags). Data about web pages are stored in an index database for use in later queries. Some search engines, such as Google.TM., store all or part of the source page (referred to as a cache) as well as information about the web pages, whereas others, such as AltaVista.TM., store every word of every page they find. 

 The terms "online community", "e-community", or "virtual community" mean a group of people that primarily interact via a computer network, rather than face to face, for social, professional, educational or other purposes. The interaction can use a variety of media formats, including wikis, blogs, chat rooms, Internet forums, instant messaging, email, and other forms of electronic media. Many media formats are used in social software separately or in combination, including text-based chatrooms and forums that use voice, video text or avatars. 

 The term "remote control" refers to a component of an electronics device, most commonly a television set, DVD player and/or home theater system for operating the device wirelessly, typically from a short line-of-sight distance. Remote control normally uses infrared and/or radio frequency (RF) signaling and can include WiFi, wireless USB, Bluetooth.TM. connectivity, motion sensor enabled capabilities and/or voice control. A touchscreen remote control is a handheld remote control device which uses a touchscreen user interface to replace most of the hard, built-in physical buttons used in normal remote control devices. 

 The term "satellite TV" refers to television programming delivered by the means of communications satellites and received by an outdoor antenna, usually a parabolic reflector generally referred to as a satellite dish, and as far as household usage is concerned, a satellite receiver either in the form of an external set-top box or a satellite tuner module built into a TV set. 

 The term "social network service" is a service provider that builds online communities of people, who share interests and/or activities, or who are interested in exploring the interests and activities of others. Most social network services are web-based and provide a variety of ways for users to interact, such as e-mail and instant messaging services. 

 The term "social network" refers to a web-based social network. 

 The term "gesture" refers to a user action that expresses an intended idea, action, meaning, result, and/or outcome. The user action can include manipulating a device (e.g., opening or closing a device, changing a device orientation, moving a trackball or wheel, etc.), movement of a body part in relation to the device, movement of an implement or tool in relation to the device, audio inputs, etc. A gesture may be made on a device (such as on the screen) or with the device to interact with the device. 

 The term "gesture capture" refers to a sense or otherwise a detection of an instance and/or type of user gesture. The gesture capture can occur in one or more areas of the screen, A gesture region can be on the display, where it may be referred to as a touch sensitive display or off the display where it may be referred to as a gesture capture area. 

 The term "electronic address" refers to any contactable address, including a telephone number, instant message handle, e-mail address, Universal Resource Locator (URL), Universal Resource Identifier (URI), Address of Record (AOR), electronic alias in a database, like addresses, and combinations thereof. 

 It shall be understood that the term "means," as used herein, shall be given its broadest possible interpretation in accordance with 35 U.S.C., Section 112(f). Accordingly, a claim incorporating the term "means" shall cover all structures, materials, or acts set forth herein, and all of the equivalents thereof. Further, the structures, materials or acts and the equivalents thereof shall include all those described in the summary of the invention, brief description of the drawings, detailed description, abstract, and claims themselves. 

 The preceding is a simplified summary of the disclosure to provide an understanding of some aspects of the disclosure. This summary is neither an extensive nor exhaustive overview of the disclosure and its various aspects, embodiments, and/or configurations. It is intended neither to identify key or critical elements of the disclosure nor to delineate the scope of the disclosure but to present selected concepts of the disclosure in a simplified form as an introduction to the more detailed description presented below. As will be appreciated, other aspects, embodiments, and/or configurations of the disclosure are possible utilizing, alone or in combination, one or more of the features set forth above or described in detail below. 

BRIEF DESCRIPTION OF THE DRAWINGS 

 FIG. 1A includes a first view of an embodiment of an environment of an intelligent television; 

 FIG. 1B includes a second view of an embodiment of an environment of an intelligent television; 

 FIG. 2A includes a first view of an embodiment of an intelligent television; 

 FIG. 2B includes a second view of an embodiment of an intelligent television; 

 FIG. 2C includes a third view of an embodiment of an intelligent television; 

 FIG. 2D includes a fourth view of an embodiment of an intelligent television; 

 FIG. 3 is a block diagram of an embodiment of the hardware of an intelligent television; 

 FIG. 4 is a block diagram of an embodiment of the intelligent television software and/or firmware; 

 FIG. 5 is a second block diagram of an embodiment of the intelligent television software and/or firmware; 

 FIG. 6 is a third block diagram of an embodiment of the intelligent television software and/or firmware; 

 FIG. 7 is a plan view of an embodiment of a handheld remote control; 

 FIG. 8 is a side view of an embodiment of a remote control; 

 FIG. 9A is a bottom view of an embodiment of a remote control with a joystick in a neutral position; 

 FIG. 9B is a bottom view of an embodiment of a remote control with the joystick in a lower position; 

 FIG. 9C is a bottom view of an embodiment of a remote control with the joystick in an upper position; 

 FIG. 10 is a plan view of another embodiment of a handheld remote control; 

 FIG. 11A is a front view of an embodiment of an Intelligent TV screen; 

 FIG. 11B is a front view of an embodiment of an Intelligent TV screen; 

 FIG. 11C is a front view of an embodiment of an Intelligent TV screen; 

 FIG. 12 is a block diagram of an embodiment of a handheld remote control of either FIG. 7 or 10; 

 FIG. 13 is a block diagram of an embodiment of a content data service; 

 FIG. 14 is a visual representation of a user interface that is presented to an Intelligent TV when a live TV application is in a first time experience state in accordance with embodiments of the present disclosure; 

 FIG. 15 is a flow diagram depicting a first time experience setup method in accordance with embodiments of the present disclosure; 

 FIG. 16A is a block diagram of a first embodiment of an Intelligent TV dialog presentation; 

 FIG. 16B is a block diagram of a second embodiment of an Intelligent TV dialog presentation; 

 FIG. 16C is a block diagram of a third embodiment of an Intelligent TV dialog presentation; 

 FIG. 16D is a block diagram of a fourth embodiment of an Intelligent TV dialog presentation; 

 FIG. 16E is a block diagram of a dialog presented to the display of an Intelligent TV in accordance with embodiments of the present disclosure; 

 FIG. 17 is a flow diagram depicting a dialog presentation method in accordance with embodiments of the present disclosure; 

 FIG. 18 is a block diagram of a first panel view of an Intelligent TV in accordance with embodiments of the present disclosure; 

 FIG. 19 is a block diagram of a second panel view of an Intelligent TV in accordance with embodiments of the disclosure; 

 FIG. 20 depicts a first embodiment of an information panel presented via an application panel of an Intelligent TV; 

 FIG. 21 depicts a second embodiment of an information panel presented via an application panel of an Intelligent TV; 

 FIG. 22 is a flow diagram depicting an information panel presentation method in accordance with embodiments of the present disclosure; 

 FIG. 23A depicts a first embodiment of an electronic programming guide presented via an application panel of an Intelligent TV; 

 FIG. 23B depicts a second embodiment of an electronic programming guide presented via an application panel of an Intelligent TV; 

 FIG. 24A depicts a first embodiment of an electronic programming guide and preview window presented via an application panel of an Intelligent TV; 

 FIG. 24B depicts a second embodiment of an electronic programming guide and preview window presented via an application panel of an Intelligent TV; 

 FIG. 25 is a flow diagram depicting an electronic program guide presentation method in accordance with embodiments of the present disclosure; 

 FIG. 26 is a flow diagram depicting an electronic program guide and preview window presentation method in accordance with embodiments of the present disclosure; 

 FIG. 27 depicts an embodiment of a compact electronic programming guide presented via an application panel of an Intelligent TV; 

 FIG. 28A depicts a first embodiment of a reminder dialog presentation in accordance with embodiments of the present disclosure; 

 FIG. 28B depicts a second embodiment of a reminder dialog presentation in accordance with embodiments of the present disclosure; 

 FIG. 29A depicts a first embodiment of a reminder dialog notification in accordance with embodiments of the present disclosure; 

 FIG. 29B depicts a second embodiment of a reminder dialog notification in accordance with embodiments of the present disclosure; 

 FIG. 29C depicts a third embodiment of a reminder dialog notification in accordance with embodiments of the present disclosure; 

 FIG. 29D depicts a fourth embodiment of a reminder dialog notification in accordance with embodiments of the present disclosure; 

 FIG. 30 depicts a grouped content panel presented via an application panel of an Intelligent TV; 

 FIG. 31A depicts a first embodiment of a preferred content dialog presentation in accordance with embodiments of the present disclosure; 

 FIG. 31B depicts a second embodiment of a preferred content dialog presentation in accordance with embodiments of the present disclosure; 

 FIG. 32 is a flow diagram depicting a reminder presentation method in accordance with embodiments of the present disclosure; 

 FIG. 33 is a flow diagram depicting a preferred content reminder presentation method in accordance with embodiments of the present disclosure; 

 FIG. 34 is a flow diagram depicting an input-based user tracking method in accordance with embodiments of the present disclosure; 

 FIG. 35 is a fourth block diagram of an embodiment of the intelligent television software and/or firmware; and 

 FIG. 36 is a flow diagram depicting a live TV presentation method in accordance with embodiments of the present disclosure. 

 In the appended figures, similar components and/or features may have the same reference label. Further, various components of the same type may be distinguished by following the reference label by a letter that distinguishes among the similar components. If only the first reference label is used in the specification, the description is applicable to any one of the similar components having the same first reference label irrespective of the second reference label. 

DETAILED DESCRIPTION 

 Presented herein are embodiments of a device. The device can be a network-enabled telecommunications device, such as a television, an electronic visual display device, or other smart device. The device can include one or more screens, or sections of a screen, that are configured to receive and present information from a number of sources. Further, the device can receive user input in unique ways. The overall design and functionality of the device provides for an enhanced user experience making the device more useful and more efficient. 

 Intelligent Television (TV) Environment: 

 Referring to FIGS. 1A and 1B, an Intelligent TV, or device, 100 is shown. It is anticipated that the Intelligent TV 100 may be used for entertainment, business applications, social interaction, content creation and/or consumption, and to organize and control one or more other devices that are in communication with the Intelligent TV 100. As can be appreciated, the Intelligent TV 100 can be used to enhance the user interactive experience whether at home or at work. 

 In some embodiments, the Intelligent TV 100 may be configured to receive and understand a variety of user and/or device inputs. For example, a user may interface with the Intelligent TV 100 via one or more physical or electrical controls, such as buttons, switches, touch sensitive screens/regions (e.g., capacitive touch, resistive touch, etc.), and/or other controls associated with the Intelligent TV 100. In some cases, the Intelligent TV 100 may include the one or more interactive controls. Additionally or alternatively, the one or more controls may be associated with a remote control. The remote control may communicate with the Intelligent TV 100 via wired and/or wireless signals. As can be appreciated, the remote control may operate via radio frequency (RF), infrared (IR), and/or a specific wireless communications protocol (e.g., Bluetooth.TM., Wi-Fi, etc.). In some cases, the controls, whether physical or electrical, may be configured (e.g., programmed) to suit a user's preferences. 

 Additionally or alternatively, smart phones, tablets, computers, laptops, netbooks, and other smart devices may be used to control the Intelligent TV 100. For example, control of the Intelligent TV 100 may be achieved via an application running on a smart device. The application may be configured to present a user with various Intelligent TV 100 controls in an intuitive user interface (UI) on a screen associated with the device 100. The screen may be a touch sensitive, or touch screen, display. Selections input by a user via the UI may be configured to control the Intelligent TV 100 by the application accessing one or more communication features associated with the smart device. 

 It is anticipated that the Intelligent TV 100 can receive input via various input devices including, but in no way limited to, video, audio, radio, light, tactile, and combinations thereof. Among other things, these input devices may be configured to allow the Intelligent TV 100 to see, recognize, and react to user gestures. For instance, a user may talk to the Intelligent TV 100 in a conversational manner. The Intelligent TV 100 may hear and understand voice commands in a manner similar to a smart device's intelligent personal assistant and voice-controlled navigator application (e.g., Apple's Siri, Android's Skyvi, Robin, Iris, and other applications). 

 The Intelligent TV 100 may also be a communications device which can establish network connections 104 through many alternate means, including wired 108 or wireless 112 means, over cellular networks 116 to connect via cellular base antenna 142 to telephone networks operated by telephone company 146, and by using a telephone line 120 to connect to telephone networks operated by telephone company 146. These connections 104 enable the Intelligent TV 100 to access one or more communication networks 132. The communication networks 132 may comprise any type of known communication medium or collection of communication media and may use any type of protocols to transport messages or signals between endpoints. The communication networks may include wired and/or wireless communication technologies. The Internet is an example of a communication network 132 that constitutes an Internet Protocol (IP) network consisting of many computers, computing networks, and other communication devices located all over the world, which are connected through many telephone systems and other means. 

 Other examples of the communication network 132 include, without limitation, a standard Plain Old Telephone System (POTS), an Integrated Services Digital Network (ISDN), the Public Switched Telephone Network (PSTN), a Local Area Network (LAN), a Wide Area Network (WAN), a cellular network, and any other type of packet-switched or circuit-switched network known in the art. In addition, it can be appreciated that the communication network 132 need not be limited to any one network type, and instead may be comprised of a number of different networks and/or network types. 

 In some embodiments, the Intelligent TV 100 may be equipped with multiple communication means. The multiple communication means may allow the Intelligent TV 100 to communicate across Local Area Networks (LANs) 124, wireless local area networks (WLANs) 128, and other networks 132. The networks 132 may be connected in a redundant manner to ensure network access. In other words, if one connection is interrupted, the Intelligent TV 100 can use an alternate communications path to reestablish and/or maintain the network connection 104. Among other things, the Intelligent TV 100 may use these network connections 104 to send and receive information, interact with an electronic program guide (EPG) 136, receive software updates 140, contact customer service 144 (e.g., to receive help or service, etc.), and/or access remotely stored digital media libraries 148. In addition, these connections can allow the Intelligent TV 100 to make phone calls, send and/or receive email messages, send and/or receive text messages (such as email and instant messages), surf the Internet using an internet search engine, post blogs by a blogging service, and connect/interact with social media sites and/or an online community (e.g., Facebook.TM., Twitter.TM., LinkedIn.TM., Pinterest.TM., Google+.TM., MySpace.TM., and the like) maintained by a social network service. In combination with other components of the Intelligent TV 100 described in more detail below, these network connections 104 also enable the Intelligent TV 100 to conduct video teleconferences, electronic meetings, and other communications. The Intelligent TV 100 may capture and store images and sound, using associated cameras, microphones, and other sensors. Additionally or alternatively, the Intelligent TV 100 may create and save screen shots of media, images, and data displayed on a screen associated with the Intelligent TV 100. 

 Further, as shown in FIG. 1B, the Intelligent TV 100 can interact with other electronic devices 168 by either by the wired 108 and/or wireless 112 connections. As described herein, components of the Intelligent TV 100 allow the device 100 to be connected to devices 168 including, but not limited to, DVD players 168a, BluRay players 168b, portable digital media devices 168c, smart phones 168d, tablet devices 168e, personal computers 168f, external cable boxes 168g, keyboards 168h, pointing devices 168i, printers 168j, game controllers and/or game pads 168k, satellite dishes 168l, external display devices 168m, and other universal serial bus (USB), local area network (LAN), Bluetooth.TM., or high-definition multimedia interface (HDMI) compliant devices, and/or wireless devices. When connected to an external cable box 168g or satellite dish 168l, the Intelligent TV 100 can access additional media content. Also, as further described below, the Intelligent TV 100 is capable of receiving digital and/or analog signals broadcast by TV stations. The Intelligent TV 100 can be configured as one or more of a standard-definition television, enhanced television, and high-definition television. It may operate as one or more of cable, Internet, Internet Protocol, satellite, web, and/or smart television. The Intelligent TV 100 may also be used to control the operation of, and may interface with, other smart components such as security systems 172, door/gate controllers 176, remote video cameras 180, lighting systems 184, thermostats 188, refrigerators 192, and other appliances. 

 Intelligent TV: 

 FIGS. 2A-2D illustrate components of the Intelligent TV 100. In general, as shown by FIG. 2A, the Intelligent TV 100 can be supported by a removable base or stand 204 that is attached to a frame 208. The frame 208 surrounds edges of a display screen 212, leaving a front surface of the display screen 212 uncovered. The display screen 212 may comprise a Liquid Crystal Display (LCD) screen, a plasma screen, Light Emitting Diode (LED) screen, or other screen types. In embodiments, the entire front surface of the screen 212 may be touch sensitive and capable of receiving input by the user touching the front surface of the screen 212. 

 The Intelligent TV 100 may include integrated speakers 216 and at least one microphone 220. A first area of the frame 208 may comprise a horizontal gesture capture region 224 and second areas comprise vertical gesture capture regions 228. The gesture capture regions 224, 228 may comprise areas or regions that are capable of receiving input by recognizing gestures made by the user, and in some examples, without the need for the user to actually touch the screen 212 surface of the Intelligent TV 100. However, the gesture capture regions 224, 228 may not include pixels that can perform a display function or capability. 

 One or more image capture devices 232, such as a camera, can be included for capturing still and/or video images. The image capture device 232 can include or be associated with additional elements, such as a flash or other light source 236 and a range finding device 240 to assist focusing of the image capture device. In addition, the microphone 220, gesture capture regions 224, 228, image capture devices 232, and the range finding device 240 may be used by the Intelligent TV 100 to recognize individual users. Additionally or alternatively, the Intelligent TV 100 may learn and remember preferences associated with the individual users. In some embodiments, the learning and remembering (i.e., identifying and recalling stored information) may be associated with the recognition of a user. 

 An IR transmitter and receiver 244 may also be provided to connect the Intelligent TV 100 with a remote control device (not shown) or other IR devices. Additionally or alternatively, the remote control device may transmit wireless signals via RF, light, and/or a means other than IR. Also shown in FIG. 2A is an audio jack 248, which may be hidden behind a panel that is hinged or removable. The audio jack 248 accommodates a tip, ring, sleeve (TRS) connector, for example, to allow the user to utilize headphones, a headset, or other external audio equipment. 

 The Intelligent TV 100 can also include a number of buttons 252. For example, FIG. 2A illustrates the buttons 252 on the top of the Intelligent TV 100, although the buttons could be placed at other locations. As shown, the Intelligent TV 100 includes six buttons 252a-f, which can be configured for specific inputs. For example, the first button 252a may be configured as an on/off button used to control overall system power to the Intelligent TV 100. The buttons 252 may be configured to, in combination or alone, control a number of aspects of the Intelligent TV 100. Some non-limiting examples include, but are not limited to, overall system volume, brightness, the image capture device, the microphone, and initiation/termination of a video conference. Instead of separate buttons, two of the buttons may be combined into a rocker button. This rocker button arrangement may be useful in situations where the buttons are configured to control features such as volume or brightness. In some embodiments, one or more of the buttons 252 are capable of supporting different user commands. By way of example, a normal press has a duration commonly of less than about 1 second and resembles a quick input. A medium press has a duration commonly of 1 second or more but less than about 12 seconds. A long press has a duration commonly of about 12 seconds or more. The function of the buttons is normally specific to the application that is active on the Intelligent TV 100. In the video conference application for instance and depending on the particular button, a normal, medium, or long press can mean end the video conference, increase or decrease the volume, increase a rate speed associated with a response to an input, and toggle microphone mute. Depending on the particular button, a normal, medium, or long press can also control the image capture device 232 to increase zoom, decrease zoom, take a photograph, or record video. 

 In support of communications functions or capabilities, the Intelligent TV 100 can include one or more shared or dedicated antennae 256 and wired broadband connections 260 as shown in FIG. 2B. The antennae 256 also enable the Intelligent TV 100 to receive digital and/or analog broadcast TV channels. The wired broadband connections 260 are, for example, a Digital Subscriber Line (DSL), an optical line, an Ethernet port, an IEEE 1394 interface, or other interfaces. The Intelligent TV 100 also has a telephone line jack 262 to further provide communications capability. 

 In addition to the removable base 204, the Intelligent TV 100 may include hardware and mounting points 264 on a rear surface to facilitate mounting the Intelligent TV 100 to a surface, such as a wall. In one example, the Intelligent TV 100 may incorporate at least one Video Equipment Standards Association (VESA) mounting interface for attaching the device 100 to the surface. 

 As shown in FIG. 2C, the Intelligent TV 100 may include docking interfaces or ports 268. The docking ports 268 may include proprietary or universal ports to support the interconnection of the Intelligent TV 100 to other devices or components, which may or may not include additional or different capabilities from those integral to the Intelligent TV 100. In addition to supporting an exchange of communication signals between the Intelligent TV 100 and a connected device or component, the docking ports 268 can support the supply of power to the connected device or component. The docking ports 268 can also comprise an intelligent element that comprises a docking module for controlling communications or other interactions between the Intelligent TV 100 and the connected device or component. 

 The Intelligent TV 100 also includes a number of card slots 272 and network or peripheral interface ports 276. The card slots 272 may accommodate different types of cards including subscriber identity modules (SIM), secure digital (SD) cards, MiniSD cards, flash memory cards, and other cards. Ports 276 in embodiments may include input/output (I/O) ports, such as universal serial bus (USB) ports, parallel ports, game ports, and high-definition multimedia interface (HDMI) connectors. 

 An audio/video (A/V) I/O module 280 can be included to provide audio to an interconnected speaker or other device, and to receive audio input from a connected microphone or other device. As an example, the audio input/output interface 280 may comprise an associated amplifier and analog-to-digital converter. 

 Hardware Features: 

 FIG. 3 illustrates components of an Intelligent TV 100 in accordance with embodiments of the present disclosure. In general, the Intelligent TV 100 includes a primary screen 304. Screen 304 can be a touch sensitive screen and can include different operative areas. 

 For example, a first operative area, within the screen 304, may comprise a display 310. In some embodiments, the display 310 may be touch sensitive. In general, the display 310 may comprise a full color, display. 

 A second area within the screen 304 may comprise a gesture capture region 320. The gesture capture region 320 may comprise an area or region that is outside of the display 310 area, and that is capable of receiving input, for example in the form of gestures provided by a user. However, the gesture capture region 320 does not include pixels that can perform a display function or capability. 

 A third region of the screen 304 may comprise a configurable area 312. The configurable area 312 is capable of receiving input and has display or limited display capabilities. In embodiments, the configurable area 312 may present different input options to the user. For example, the configurable area 312 may display buttons or other relatable items. Moreover, the identity of displayed buttons, or whether any buttons are displayed at all within the configurable area 312 of a screen 304, may be determined from the context in which the Intelligent TV 100 is used and/or operated. 

 In an exemplary touch sensitive screen 304 embodiment, the touch sensitive screen 304 comprises a liquid crystal display extending across at least those regions of the touch sensitive screen 304 that are capable of providing visual output to a user, and a capacitive input matrix over those regions of the touch sensitive screen 304 that are capable of receiving input from the user. 

 One or more display controllers 316 may be provided for controlling the operation of the screen 304. The display controller 316 may control the operation of the touch sensitive screen 304, including input (touch sensing) and output (display) functions. The display controller 316 may also control the operation of the screen 304 and may interface with other inputs, such as infrared and/or radio input signals (e.g., door/gate controllers, alarm system components, etc.). In accordance with still other embodiments, the functions of a display controller 316 may be incorporated into other components, such as a processor 364. 

 The processor 364 may comprise a general purpose programmable processor or controller for executing application programming or instructions. In accordance with at least some embodiments, the processor 364 may include multiple processor cores, and/or implement multiple virtual processors. In accordance with still other embodiments, the processor 364 may include multiple physical processors. As a particular example, the processor 364 may comprise a specially configured application specific integrated circuit (ASIC) or other integrated circuit, a digital signal processor, a controller, a hardwired electronic or logic circuit, a programmable logic device or gate array, a special purpose computer, or the like. The processor 364 generally functions to run programming code or instructions implementing various functions of the Intelligent TV 100. 

 In support of connectivity functions or capabilities, the Intelligent TV 100 can include a module for encoding/decoding and/or compression/decompression 366 for receiving and managing digital television information. Encoding/decoding compression/decompression module 366 enables decompression and/or decoding of analog and/or digital information dispatched by a public television chain or in a private television network and received across antenna 324, I/O module 348, wireless connectivity module 328, and/or other wireless communications module 332. The television information may be sent to screen 304 and/or attached speakers receiving analog or digital reception signals. Any encoding/decoding and compression/decompression is performable on the basis of various formats (e.g., audio, video, and data). Encrypting module 368 is in communication with encoding/decoding compression/decompression module 366 and enables the confidentiality of all the data received or transmitted by the user or supplier. 

 In support of communications functions or capabilities, the Intelligent TV 100 can include a wireless connectivity module 328. As examples, the wireless connectivity module 328 can comprise a GSM, CDMA, FDMA and/or analog cellular telephony transceiver capable of supporting voice, multimedia and/or data transfers over a cellular network. Alternatively or in addition, the Intelligent TV 100 can include an additional or other wireless communications module 332. As examples, the other wireless communications module 332 can comprise a Wi-Fi, Blutooth.TM., WiMax, infrared, or other wireless communications link. The wireless connectivity module 328 and the other wireless communications module 332 can each be associated with a shared or a dedicated antenna 324 and a shared or dedicated I/O module 348. 

 An input/output module 348 and associated ports may be included to support communications over wired networks or links, for example with other communication devices, server devices, and/or peripheral devices. Examples of an input/output module 348 include an Ethernet port, a Universal Serial Bus (USB) port, Thunderbolt.TM. or Light Peak interface, Institute of Electrical and Electronics Engineers (IEEE) 1394 port, or other interface. 

 An audio input/output interface/device(s) 344 can be included to provide analog audio to an interconnected speaker or other device, and to receive analog audio input from a connected microphone or other device. As an example, the audio input/output interface/device(s) 344 may comprise an associated amplifier and analog-to-digital converter. Alternatively or in addition, the Intelligent TV 100 can include an integrated audio input/output device 356 and/or an audio jack for interconnecting an external speaker or microphone. For example, an integrated speaker and an integrated microphone can be provided, to support near talk or speaker phone operations. 

 A port interface 352 may be included. The port interface 352 may include proprietary or universal ports to support the interconnection of the device 100 to other devices or components, such as a dock, which may or may not include additional or different capabilities from those integral to the device 100. In addition to supporting an exchange of communication signals between the device 100 and another device or component, the docking port 136 and/or port interface 352 can support the supply of power to or from the device 100. The port interface 352 also comprises an intelligent element that comprises a docking module for controlling communications or other interactions between the Intelligent TV 100 and a connected device or component. The docking module may interface with software applications that allow for the remote control of other devices or components (e.g., media centers, media players, and computer systems). 

 An Intelligent TV 100 may also include memory 308 for use in connection with the execution of application programming or instructions by the processor 364, and for the temporary or long term storage of program instructions and/or data. As examples, the memory 308 may comprise RAM, DRAM, SDRAM, or other solid state memory. Alternatively or in addition, data storage 314 may be provided. Like the memory 308, the data storage 314 may comprise a solid state memory device or devices. Alternatively or in addition, the data storage 314 may comprise a hard disk drive or other random access memory. 

 Hardware buttons 358 can be included for example for use in connection with certain control operations. One or more image capture interfaces/devices 340, such as a camera, can be included for capturing still and/or video images. Alternatively or in addition, an image capture interface/device 340 can include a scanner, code reader, or motion sensor. An image capture interface/device 340 can include or be associated with additional elements, such as a flash or other light source. The image capture interfaces/devices 340 may interface with a user ID module 350 that assists in identifying users of the Intelligent TV 100. 

 The Intelligent TV 100 can also include a global positioning system (GPS) receiver 336. In accordance with embodiments of the present invention, the GPS receiver 336 may further comprise a GPS module that is capable of providing absolute location information to other components of the Intelligent TV 100. As will be appreciated, other satellite-positioning system receivers can be used in lieu of or in addition to GPS. 

 Power can be supplied to the components of the Intelligent TV 100 from a power source and/or power control module 360. The power control module 360 can, for example, include a battery, an AC-to-DC converter, power control logic, and/or ports for interconnecting the Intelligent TV 100 to an external source of power. 

 Communication between components of the Intelligent TV 100 is provided by bus 322. Bus 322 may comprise one or more physical buses for control, addressing, and/or data transmission. Bus 322 may be parallel, serial, a hybrid thereof, or other technology. 

 Firmware and Software: 

 An embodiment of the software system components and modules 400 is shown in FIG. 4. The software system 400 may comprise one or more layers including, but not limited to, an operating system kernel 404, one or more libraries 408, an application framework 412, and one or more applications 416. The one or more layers 404-416 can communicate with each other to perform functions for the Intelligent TV 100. 

 An operating system (OS) kernel 404 contains the primary functions that allow the software to interact with hardware associated with the Intelligent TV 100. Kernel 404 can include a collection of software that manages the computer hardware resources and provides services for other computer programs or software code. The operating system kernel 404 is the main component of the operating system and acts as an intermediary between the applications and data processing done with the hardware components. Part of the operating system kernel 404 can include one or more device drivers 420. A device driver 420 can be any code within the operating system that helps operate or control a device or hardware attached to or associated with the Intelligent TV. The driver 420 can include code for operating video, audio, and/or other multimedia components of the Intelligent TV 100. Examples of drivers include display, camera, flash, binder (IPC), keypad, WiFi, and audio drivers. 

 Library 408 can contain code or other components that may be accessed and implemented during the operation of the software system 400. The library 408 may contain one or more of, but is not limited to, an operating system runtime library 424, a TV services hardware abstraction layer (HAL) library 428, and/or a data service library 432. The OS runtime library 424 may contain the code required by the operating system kernel 404 or other operating system functions to be executed during the runtime of the software system 400. The library can include the code that is initiated during the running of the software system 400. 

 The TV services hardware abstraction layer library 428 can include code required by TV services either executed in the application framework 412 or an application 416. The TV services HAL library 428 is specific to the Intelligent TV 100 operations that control different functions of the Intelligent TV. The TV service HAL library 428 can also be formed from other types of application languages or embodiments of different types of code or formats for code beyond the hardware abstraction layer. 

 The data services library 432 can include the one or more components or codes to implement components for the data services function. The data services function can be implemented in the application framework 412 and/or applications layer 416. An embodiment of a function of the data services and the type of components that may be included is shown in FIG. 6. 

 The application framework 412 can include a general abstraction for providing functionality that can be selected by one or more applications 416 to provide specific application functions or software for those applications. Thus, the framework 412 can include one or more different services, or other applications, that can be accessed by the applications 416 to provide general functions across two or more applications. Such functions include, for example, management of one or more of windows or panels, surfaces, activities, content, and resources, The application framework 412 can include one or more, but is not limited to, TV services 434, TV services framework 440, TV resources 444, and user interface components 448. 

 The TV services framework 440 can provide an additional abstraction for different TV services. TV services framework 440 allows for the general access and function of services that are associated with the TV functionality. The TV services 436 are general services provided within the TV services framework 440 that can be accessed by applications in the applications layer 416. The TV resources 444 provide code for accessing TV resources 444 including any types of storage, video, audio, or other functionality provided with the Intelligent TV 100. The TV resources 444, TV services 436, and TV services framework 440 provide for the different implementations of TV functionality that may occur with the Intelligent TV 100. 

 One or more user interface components 448 can provide general components for display of the Intelligent TV 100. The user interface components 448 might be general components that may be accessed by different applications provided in the application framework 412. The user interface components 448 may be accessed to provide for panels and silos as described in conjunction with FIG. 5. 

 The applications layer 416 can both contain and execute applications associated with the Intelligent TV 100. Applications layer 416 may include one or more of, but is not limited to, a live TV application 452, a video on demand application 456, a media center application 460, an application center application 464, and a user interface application 468. The live TV application 452 can provide live TV over different signal sources. For example, the live TV application 452 can provide TV from input from cable television, over air broadcasts, from satellite services, or other types of live TV services. Live TV application 452 may then present the multimedia presentation or video and audio presentation of the live television signal over the display of the Intelligent TV 100. 

 The video on demand application 456 can provide for video from different storage sources. Unlike Live TV application 452, video on demand 456 provides for display of videos that are accessed from some memory source. The sources of the video on demand can be associated with users or with the Intelligent TV or some other type of service. For example, the video on demand 456 may be provided from an iTunes library stored in a cloud, from a local disc storage that contains stored video programs, or from some other source. 

 The media center application 460 can provide applications for different types of media presentation. For example, the media center 460 can provide for displaying pictures or audio that is different from, but still accessible by the user and different from live TV or video on demand. The media center 460 allows for the access of different sources to obtain the media in the display of such media on the Intelligent TV 100. 

 The application center 464 allows for the provision, storage and use of applications. An application can be a game, a productivity application, or some other application generally associated with computer systems or other devices, but may be operated within the Intelligent TV. An application center 464 may obtain these applications from different sources, store them locally and then execute those types of applications for the user on the Intelligent TV 100. 

 User interface application 468 provides for the specific user interfaces associated with the Intelligent TV 100. These user interfaces can include the silos and panels that are described in FIG. 5. An embodiment of the user interface software 500 is shown in FIG. 5. Here the application framework 412 contains one or more code components which help control the user interface events while one or more applications in the applications layer 416 affects the user interface use for the Intelligent TV 100. The application framework 412 can include a silo transition controller 504 and/or an input event dispatcher 508. There may be more or fewer code components in the application framework 412 than those shown in FIG. 5. The silo transition controller 504 contains the code and language that manages the transitions between one or more silos. A silo can be a vertical user interface feature on the Intelligent TV that contains information for user. The transition controller 504 can manage the changes between two silos when an event occurs in the user interface. The input event dispatcher 508 can receive user interface events that may be received from the operating system and provided to the input event dispatcher 508. These events can include selections of buttons on a remote control or on the TV or other types of user interface inputs. The input event dispatcher 508 may then send these events to a silo manager 532 or panel manager 536 depending on the type of the event. The silo transition controller 504 can interface with the silo manager 532 to affect changes in the silos. 

 The applications layer 416 can include a user interface application 468 and/or a silo application 512. The applications layer 416 can include more or fewer user interface applications as necessary to control the user interface of the Intelligent TV 100 than those shown in FIG. 5. The user interface application 468 can include a silo manager 532, a panel manager 536, and one or more types of panels 516-528. The silo manager 532 manages the display and/or features of silos. The silo manager 532 can receive or send information from the silo transition controller 504 or the input event dispatcher 508 to change the silos displayed and/or to determine types of input received in the silos. 

 A panel manager 536 is operable to display panels in the user interface to manage transitions between those panels or to affect user interface inputs received in the panel. The panel manager 536 may thus be in communication with different user interface panels such as a global panel 516, a volume panel 520, a settings panel 524, and/or a notification panel 528. The panel manager 536 can display these types of panels depending on the inputs received from the input event dispatcher 508. The global panel 516 may include information that is associated with the home screen or top level hierarchal information for the user. A volume panel 520 may display information about an audio volume control or other settings for volume. A settings panel 524 can include information displayed about the settings of the audio or video, or other settable characteristics of the Intelligent TV 100. A notification panel 528 can provide information about notifications to a user. These notifications can be associated with information, such as, video on demand displays, favorites, currently provided programs, or other information. Notifications can be associated with the media or with some type of setting, or operation or the Intelligent TV 100. The panel manager 536 may be in communication with the panel controller 552 of the silo application 512. 

 The panel controller 552 may operate to control portions of the panels of the types described previously. Thus, the panel controller 552 may be in communication with a top panel application 540, an application panel 544, and/or bottom panel 548. These types of panels may be differently displayed in the user interface of the Intelligent TV 100. The panel control thus may be based on the configuration of the system or the type of display being used currently, put the types of panels 516-528 into a certain display orientation governed by the top panel application 540, application panel 544, or bottom panel application 548. 

 An embodiment of the data service 432 and the operation of the data management is shown in FIG. 6. The data management 600 can include one or more code components that are associated with different types of data. For example, there may be code components within the data service 432 that execute and are associated with video on demand, the electronic program guide, or media data. There may be more or fewer types of data service 432 components than those shown in FIG. 6. Each of the different types of data may include a data model 604-612. The data models govern what information is to be stored and how that information will be stored by the data service. Thus, the data model can govern regardless of where the data comes from, how the data will be received or managed within the Intelligent TV system. Thus, the data model 604, 608, and/or 612, can provide a translation ability or affect the ability to translate data from one form to another to be used by the Intelligent TV 100. 

 The different types of data services (video on demand, electronic programming guide, media) each have a data subservice 620, 624, and/or 628 that is in communication with one or more internal and/or external content providers 616. The data subservices 620, 624, and 628 that communicate with the content providers 616 to obtain data that may then be stored in databases 632, 636, and 640. The subservices 620, 624, and 628 may communicate with and initiate or enable one or more source plug-ins 644, 648, and 652 to communicate with the content provider. For each content provider 616, there may be a different source plug-in 644, 648, and 652. Thus, if there is more than one source of content for the data, each of the data subservices 620, 624, and 628 may determine and then enable or initiate a different source plug-in 644, 648, and/or 652. The content providers 616 may also provide information to a resource arbitrator 656 and/or thumbnail cache manager 660. The resource arbitrator 656 may operate to communicate with resources 664 that are external to the data service 432. Thus, the resource arbitrator 656 may communicate with cloud based storage, network based storage, or other types of external storage in the resources 664. This information may then be provided through the content provider module 616 to the data subservices 620, 624, 628. Likewise, a thumbnail cache manager 660 may obtain thumbnail information from one of the data subservices 620, 624, 628 and store that information in the thumbnails database 668. Further the thumbnail cache manager 660 may extract or retrieve that information from the thumbnails database 668 to provide to one of the data subservices 620, 624, 628. 

 An exemplary content aggregation architecture 1300 is shown in FIG. 13. The architecture can include a user interface layer 1304 and a content aggregation layer 1308. The user interface layer 1304 may include a TV application 1312, media player 1316, and application(s) 1320. The TV application 1312 enables the viewer to view channels received via an appropriate transmission medium, such as cable, satellite, and/or the Internet. The media player 1316 views other types of media received via an appropriate transmission medium, such as the Internet. The application(s) 1320 include other TV-related (pre-installed) applications, such as content viewing, content searching, device viewing, and setup algorithms, and coordinates with the media player 1316 to provide information to the viewer. 

 The content source layer 1308 includes, as data services, a content source service 1328, a content aggregation service 1332 and a content presentation service 1336. The content source service 1328 can manage content source investigators, including local and/or network file system(s), digital network device manager (which discovers handheld and non-handheld devices (e.g., digital media servers, players, renderers, controllers, printers, uploaders, downloaders, network connectivity functions, and interoperability units) by known techniques, such as a multicast universal plug and play or UPnP discovery techniques, and, for each discovered device, retrieves, parses, and encodes device descriptors, notifies the content source service of the newly discovered device, and provides information, such as an index, on previously discovered devices), Internet Protocol Television or IPTV, digital television or DTV (including high definition and enhanced TV), third party services (such as those referenced above), and applications (such as Android applications). 

 Content source investigators can track content sources and are typically configured as binaries. The content source service 1328 starts content source investigators and maintains open and persistent channels for communications. The communications include query or command and response pairs. The content aggregation service 1332 can manage content metadata fetchers, such as for video, audio, and/or picture metadata. The content presentation service 1336 may provide interfaces to the content index 1340, such as an Android application interface and digital device interfaces. 

 The content source service 1328 can send and receive communications 1344 to and from the content aggregation service 1332. The communications can include notifications regarding new and removed digital devices and/or content and search queries and results. The content aggregation service 1332 can send and receive communications 1348 to and from the content presentation service 1336 including device and/or content lookup notifications, content-of-interest advisories and notifications, and search queries and results. 

 When a search is performed, particularly when the user is searching or browsing content, a user request may be received from the user interface layer 1300, by the content presentation service 1336, which responsively opens a socket and sends the request to the content aggregation service 1332. The content aggregation service 1332 first returns results from the local database 1340. The local database 1340 includes an index or data model and indexed metadata. The content source service 1328 further issues search and browse requests for all content source investigators and other data management systems. The results are forwarded to the content aggregation service 1332, which updates the database 1340 to reflect the further search results and provides the original content aggregation database search results and the data updates, reflecting the additional content source service search results, over the previously opened socket to the content presentation service 1336. The content presentation service 1336 then provides the results to one or more components in the user interface layer 1300 for presentation to the viewer. When the search session is over (e.g., the search session is terminated by the user or by an action associated with user), the user interface layer 1300 disconnects the socket. As shown, media can be provided directly by the content aggregation service 1332 to the media player 1316 for presentation to the user. 

 Remote Control: 

 A handheld remote control can be provided to enable user interaction with the Intelligent TV 100. An exemplary handheld remote control is shown in FIGS. 7-9. The remote control 700 can include one or more of, but is not limited to, top, side and bottom housings 704, 708, and 712, an (on/off) power button 716, an input source button 720 (to select input source such as Live TV, video on demand, media center, application center, high definition multimedia interface or HDMI, component or COMP, audio/Video or A/V, digital or analog television or DTV/ATV, and video graphics array (VGA)), a (volume) mute button 724, a Live TV button 728 (to activate or select the Live TV silo), a video on demand (VOD) button 732 (to activate or select the video on demand silo), a media center button 736 (to activate or select the media center application or silo, which access various types of media such as music, TV programming, videos, and the like), an application center button 740 (to activate or select the application center application or silo), a global panel button 744, an application panel button 748, a back button 752 (to select a prior user operation or Intelligent TV state and/or navigate up a hierarchy of any displayed image or object(s) (in which case the back button 752 does not navigate within application panels or across application silos), a play button 756 (to play or pause media), a D-pad 760 (which includes north, east, west, and south directional arrows to navigate among displayed images and/or move between levels of an application's or object's hierarchy such as application view navigation, panel navigation, and collection navigation), an OK (or select) button 764 (to select a highlighted displayed image (such as displayed speed control, rewind, forward, play, and pause objects and/or objects on menu bar or in a menu box) and/or navigate down a hierarchy of any displayed image or object(s)), a rocker-type volume-up and volume-down button 768 (to adjust the volume), a menu/guide button 772 (to select for display a menu or guide of programming), a 0-9 (number) button 776 (to display a number pad on the TV screen), a settings button 780 (which launches an application to access current and change TV settings (such as channel settings and settings used to adjust picture and sound effects (e.g., image mode (e.g., standard, playground, game, cinema, concert, and studio), brightness, contrast, saturation, color temperature, energy savings, 3D noise reduction, hue, sharpness, zoom mode (e.g., full screen, standard, smart zoom, and dot-to-dot), picture position, 3D mode, for picture, and sound retrieval system or SRS TruSurround, sound mode (e.g., standard, live 1, live 2, theatre, music, speech, user equalizer mode, Left/Right speaker balance, auto volume control, Sony/Philips Interconnect Format or S/PDIF (off, auto, pulse code modulation or PCM) for sound) and system settings (such as system (e.g., selected language for graphical user interface, user geographical and/or geopolitical location information, input method, area settings, and sleep time), network (e.g., WiFi, WiFi hotspot, WiFi direct, Point-to-Point Protocol over Ethernet or PPPoE (asymmetric digital subscriber line or ADSL), Ethernet) settings (e.g., enabled and disabled and selected and non-selected) and information (e.g., network information (e.g., electronic address such as Internet Protocol or IP address, subnet mask, gateway, domain name server information, domain name, Media Access Control or MAC address, service set identification or SSID, security information, and password information) and inline status), manage applications (e.g., currently installed applications, currently executing applications, and internal and external computer readable medium usage), and view user information regarding the Intelligent TV 100)), a rocker-type channel-up and channel-down button 784 (to increment or decrement the selected channel), and first, second, third and fourth hotkeys 788, 792, 794, and 796, and/or a moveable joystick 900 on a bottom of the remote control 700. The first, second, third, and fourth hotkeys are generally assigned different colors, which color indexing is depicted as visual indicia on a selected panel to show the currently assigned function, if any, for each hotkey. As can be seen, the actuator layout can provide a highly efficient, satisfactory, and easily usable experience to the end user. 

 Unlike the functional associations and functions of many of the actuators, those of some of the actuators are not readily apparent. A number of examples will now be discussed by way of illustration. 

 The media center button 736, when selected, can provide information regarding music, videos, photographs, collections or groupings of music, videos, and/or photographs, and internal and external computational devices (such as personal computers, laptops, tablet computers, wireless phones, removable computer readable media, and the like), which can be grouped in a selected manner (such as favorites, most recently viewed, most watched or viewed, and most recently added). The information can includes previews (which can include selected portions of the media content, duration, file size, date created, date last watched, times watched or viewed, and audio and/or video format information). 

 The application center button 740, when selected, may provide information regarding pre-installed and downloaded applications. Unlike downloaded applications, pre-installed applications cannot be removed by the user or manually updated. Exemplary pre-installed applications include web browser, settings control, and content search algorithms. By way of illustration, the application center button 740 can provide a scrollable graphical grid of icons (each icon being associated with an application) currently available in the application center. 

 The global panel button 744, when selected, can provide the user, via one or more panels or windows, with access to one or more of, but not limited to, silos, notifications, a web browser, system settings, and/or information associated therewith. For example, the global panel button 744 can enable the user to determine what external devices are currently connected to and/or disconnected from the Intelligent TV 100, determine what inputs (e.g., HDMI ports) are currently available for connecting to external devices, determine a connection and/or operational status of a selected external device and/or network (e.g., WiFi connected, Ethernet connected, and offline), assign a custom (or user selected) name to each input source, determine what content is currently being offered on Live TV, on demand, the media center, and/or the application center, access vendor messages and notifications to the user (e.g., system and/or application updates are available), activate the Internet browser, and/or access shortcuts on a displayed shortcut bar to more frequently used and desired applications. Common shortcuts are Internet browser (e.g., Internet search engine), system settings, and notifications. The common types of panels are for information (which is typically information related to a currently displayed image and/or content (e.g., title, date/time, audio/visual indicator, rating, and genre), browse requests, and/or search requests (such as search term field)). Each of the panel types may include a panel navigation bar, detailed information or relevant content to the panel function, operation and/or purpose, and a hotkey bar (defining currently enabled functional associations of hotkeys). 

 The application panel button 748, when selected, can display an application window or panel. One application panel may be an information panel regarding a selected (pre-installed or previously downloaded) application icon. The information panel can one or more of identify the selected application, provide a description of the functionality (including application developer and/or vendor, version, release, and/or last update date and a category or type of application based on the application's functionality) and user ratings and/or degree of other user downloading of the application (e.g., a star rating assigned based on one or more of the foregoing inputs), provide the option to launch, remove, update, and add to favorites the identified application, and provide a listing of selectable links of other (not yet downloaded) recommended applications that provide similar functionality to the identified application. The latter listing can, in turn, provide a description of the functionality (including application developer and/or vendor, version, release, and/or last update date and a category or type of application based on the application's functionality) and user ratings and/or degree of other user downloading of the application (e.g., a star rating assigned based on one or more of the foregoing inputs). 

 The functions of the first, second, third, and fourth hotkeys 788, 792, 794, and 796 can change depending on system state, context, and/or, within a selected screen and/or panel, based on a content or currently selected portion of (or relative cursor position on) the screen. Commonly, a currently assigned function of any of the first, second, third, and fourth hotkeys 788, 792, 794, and 796 depends on a currently accessed silo and/or panel (with which the user is currently interacting within the silo). In other words, a first function of one of the first, second, third, and fourth hotkeys 788, 792, 794, and 796 is activated by the respective hotkey in a first system state while a different second function is activated by the respective hotkey in a different second system state. In another example, a third function of one of the first, second, third, and fourth hotkeys 788, 792, 794, and 796 is activated by the respective hotkey when a user focus (or currently selected cursor position or screen portion) is at a first screen position while a different fourth function is activated by the respective hotkey when a user focus (or currently selected cursor position or screen portion) is at a different second screen position. The first screen position can, for instance, be within an icon while the second screen position is outside of the icon. Hotkey functionality that could be enabled when in the first screen position may be "configure" and "remove" and disabled is "add", and, when in the second position hotkey functionality enabled can be "add" and disabled is "configure" and "remove". Generally, the states of hotkeys can include normal (for enabled actions or functions), disabled (when an action or function is temporarily disabled), pressed (when selected by a user to command an action or function to be performed), and unavailable (when no association between the hotkey and an action or function is currently available). While examples of hotkey functions are discussed below, it is to be understood that these are not intended to be exhaustive or limiting examples. 

 The first hotkey 788, when selected in a first system state, can enable the user to assign, change, or edit a name of an input source. It is typically enabled only when the input source of HDMI, Comp/YPbPr (e.g., component video cables), video output, and VGA is in focus. When selected in a second system state, the first hotkey 788 can return the user to a top of a scrollable collection of objects, such as application icons. 

 The second hotkey 792 may show all or less. In other words, the hotkey 792 can allow the user to show all inputs, including the unconnected/undetected ones and to hide the unconnected/undetected inputs, e.g., to expand and collapse the silo/input list. Each input source can have one of two states, namely connected/detected and unconnected/undetected. Some input sources, including Live TV, video on demand, media center, and application center are always connected/detected. 

 The moveable joystick 900 on the bottom of the remote control 700, when manipulated, can cause a displayed image on the Intelligent TV 100 screen to be displaced a proportional amount. In other words, the displayed image is displaced substantially simultaneously with displacement of the joystick 900 within the joystick aperture 904 in the bottom housing 712 of the remote control. As shown in FIGS. 9B-C, the joystick 900 moves or slides between forward and reverse positions. Releasing the joystick 900 causes the joystick 900 to return to the center position of FIG. 9A, and the window to move or slide upwardly (when the joystick is released from the joystick position of FIG. 9B) or downwardly (when the joystick is released from the joystick position of FIG. 9C) until it disappears from view as shown in FIG. 11A. The effect on the screen of the Intelligent TV 100 is shown in FIGS. 11A-C. In FIG. 11A, video content, such as TV programming, a video, movie, and the like, is being displayed by front surface of the screen 212. In FIG. 11B, the joystick 900 is moved or slid to the upper position of FIG. 9B, and a drop down window or panel 1100 moves or slides down (at the substantially the same rate of joystick 900 movement) at the top of the screen 212. In FIG. 11C, the joystick 900 is moved or slid to the lower position of FIG. 9C, and a drop up window or panel 1100 moves or slides up (at the substantially the same rate of joystick 900 movement) at the bottom of the screen 212. The window 1100 partially covers the video content appearing on the remainder of the screen 212 and/or causes a portion of the screen 212 displaying video content to move and/or compress up or down the height of the window 1100. 

 The window 1100 can include one or more of information (which is typically information related to a currently displayed image and/or content (e.g., panel navigation bar, detailed information (e.g., title, date/time, audio/visual indicator, rating, and genre), and hotkey bar (defining current functional associations of hotkeys)), browse requests, and/or search requests. Commonly, the window 1100 includes suitable information about the content (such as name, duration, and/or remaining viewing duration of content), settings information, TV or system control information, application (activation) icons (such as for pre-installed and/or downloaded applications such as application center, media center and Web browser), and/or information about input source(s), When the joystick 900 is in either the forward or reverse position, the user can select an actuator on the front of the remote control, such as the OK button 764, and be taken, by displayed images on the screen 212, to another location in the user interface, such as a desktop. This process can be done in a nonintrusive manner and without affecting the flow of content that is pushed up or down. The joystick 900 could be moved, additionally or differently, from side-to-side to cause the window to appear at the left or right edge of the screen 212. 

 An alternative actuator configuration is shown in FIG. 10. The actuators are substantially the same as those of FIGS. 7-9 except that the social network button 1000, when selected, can automatically select content and publish, via a social network service or other social media, the content to a social network or online community. User or viewer comments and/or other messages can be included in the outbound message. For example, all or one or frames or portions of media content (such as a video, music, a photograph, a picture, or text) can be provided automatically to a predetermined or selected group of people via Linked-In.TM., Myspace.TM., Twitter.TM., YouTube.TM., DailyMotion.TM., Facebook.TM., Google+.TM., or Second Life.TM. The user, upon activating the button 1000 could, in response, select a social forum or media upon which the selected content (which is the content displayed to the user when the social network button 1000 is activated) is to be posted and/or a predetermined group within that social media to which the content is to be posted. Alternatively, these selections could be preconfigured or preselected by the user. 

 The social network button can also be used to "turn up" or "turn down" a social volume visualization. The Intelligent TV 100 can create dynamically a visualization of aggregated connections (and inbound and/or outbound messages) from a variety of social networks. The aggregation (and inbound and outbound messages) can be depicted graphically on the screen as a volume of connections to influence the viewer user. With a social volume visualization, selected contents of each linked social network profile of a social contact (and inbound and/or outbound messages from or to the linked social network contact and/or current activity of the social contact (such as watching the same programming or content the viewer is currently watching) can be presented in a separate tile (or visually displayed object). The size of the tile can be related to any number of criteria, including a relationship of the linked social contact (e.g., a relative degree of importance or type of relationship can determine the relative size of the tile, a degree of influence of the linked social contact to the current viewer, a geographic proximity of the linked social contact to the current viewer, a degree to which the currently provided media content is of interest to both the viewer and linked social contact (e.g., both parties enjoy war movies, murder mysteries, musicals, comedies, and the like), an assigned ranking of the linked viewer by the viewer, a type of social network type linking the viewer with the linked social contact, a current activity of the social network contact (e.g., currently watching the same content that the viewer is currently watching), a current online or offline status of the linked social contact, and a social network grouping type or category to which both the viewer and linked social contact belong (e.g., work contact, best friend, family member, etc.). 

 The viewer can designate a portion of the screen to depict the social network aggregation. By turning the social volume up (+) or down (-), the viewer can increase the size and/or numbers of linked contact tiles provided to the viewer. In other words, by increasing the social volume the viewer can view, access, and/or push more social content from those of his or her social networks associated with him or her in a memory of the Intelligent TV. By decreasing the social volume, the viewer can view, access, and/or push less social content from his or her associated social networks. By selecting the mute button 724, the viewer can stop or pause any interactivity with his or her associated social networks (e.g., inbound or outbound messages). Social volume and/or mute can be separated into two (or more) volume settings for outbound and inbound social network activity. By way of illustration, a first volume setting, control, and/or button can control the volume for outbound social network activity (e.g., outbound social messages) while a second (different) volume setting, control, and/or button can control the volume for inbound social network activity (e.g., inbound social messages). By way of further illustration, a first mute setting, control, and/or button can stop or pause outbound social network activity (e.g., outbound social messages) while a second (different) mute setting, control, and/or button can stop or pause inbound social network activity (e.g., inbound social messages). 

 A functional block diagram of the remote control is shown in FIG. 12. The remote control 700 includes a controller 1208 to control and supervise remote control operations, optional wireless (RF) transceiver 1224 and antenna 1244 to send and receive wireless signals to and from the Intelligent TV 100 and other external components, optional infrared emitter 1228 to emit infrared signals to the Intelligent TV 100, optional light emitting diode or LED driver 1232 to control LED operation to provide video-enabled feedback to the user, actuators 1220 (including the various buttons and other actuators discussed above in connection with FIGS. 7 and 10), and joystick 900, all interconnected via a bus 1248. An on board power source 1200 and power management module 1204 provide power to each of these components via power circuitry 1240. The infrared emitter 1228 and receiver (not shown) on the Intelligent TV system 100 can be used to determine a displayed object illuminated by the infrared signal and therefore adjust the displayed image, for example to indicate a focus of the user (e.g., illuminate a displayed object or show cursor position relative to displayed objects on the screen) and to determine and activate a desired command of the user. This can be done by tracking a position of the remote control in relation to infrared tracking reference points (e.g., a sensor bar or infrared LED's) positioned on or adjacent to the screen of the Intelligent TV 100. Motion tracking can further be augmented using position information received from a multi-axis gyroscope and/or accelerometer on board the remote control (not shown). 

 Live TV and Interface: 

 FIG. 14 depicts a first-time experience user interface 1408 for the live TV application of an Intelligent TV 100. Before the functionality associated with the live TV application may be enabled, one or more channel sets may need to be scanned. As such, if the live TV application is started and no channel sets have been scanned, the user may be prompted to scan for channels. Channel sets may be associated with at least one signal source. For instance, one signal source may correspond to analog television channels while another may correspond to digital television channels. In some embodiments, the at least one signal source may include one or more of an over-the-air broadcast medium, a digital TV channel source, an analog TV channel source, a cable provider, a satellite provider, the Internet, a multiple-system operator (MSO), and combinations thereof. In this example, two buttons 1412 and 1416 are presented to the user. The button 1412, when selected by the user, requires the TV 100 to scan digital TV signals to determine which channels or content sources are available for the live TV application. Similarly, if the user selects button 1416, the television 100 scans analog TV signals to determine the channels that may be available for the live TV application. The buttons 1412, 1416 may be selected via a remote control or other input device. 

 In some embodiments, a scan may have been previously conducted for either the analog or the digital TV signals or channel sets. In this case, a user may be presented with a "switch to" button in lieu of a "scan for" button as one of the options displayed to the intelligent television 100. The "switch to" button, if selected, may allow a user to access an available channel set and even the functionality associated with the live TV application. For example, if a user has previously conducted a scan of analog channels (ATV), but has not scanned for digital channels (DTV), button 1412 may read "Scan DTV" while button 1416 may read "Switch to ATV." As can be appreciated, the same may apply for a previously conducted scan of digital channels where analog channels have not been previously scanned. The option to switch to a previously scanned channel set may be provided in the event that at least one channel has been found in a previous scan. However, when both channel sets have been scanned, the functionality associated with live TV may be enabled. 

 FIG. 15 is a flow diagram depicting a first time experience setup method 1500 in accordance with embodiments of the present disclosure. The method 1500 begins at step 1504 when a user attempts to access the live TV application of the Intelligent TV 100. Next, the method 1500 may determine whether the live TV application is accessed for the first time (step 1508). In some cases, this determination may be made by the Intelligent TV 100 recognizing that the live TV application has not been previously configured. 

 If it is determined that the Intelligent TV 100 should present a first-time experience to a user, the method 1500 may continue by presenting one or more channel set scan options via the Intelligent TV 100. In some embodiments, the channel sets may be grouped by various signal sources. For example, the scan options may include analog television, digital television, combinations thereof, and the like as provided herein. It is anticipated that the scan options may be presented as interactive dialog boxes displayed to the Intelligent TV 100. 

 In response to the presented scan options, a user may provide a scan input or a cancel input (step 1516). As can be appreciated, the scan or cancel input may be provided via a remote control or other input device. In one embodiment, one of the scan options may be highlighted by default. As such, a user may only need to provide an enter input rather than provide a navigation selection and an enter input. 

 In the event that a user provides a scan input, the method 1500 continues by automatically scanning the selected channel set (step 1520). Next, the method 1500 continues by determining whether any channels are found as part of the automatic scan (step 1524). If no channels are found the method 1500 may return to step 1512. However, if one or more channels are found as part of the automatic scan the method 1500 may continue by enabling live TV application functionality (step 1528). In one embodiment, if one or more channels are found on a first channel set the method 1500 may return to step 1512 to provide the user with the option to scan a second channel set. Once the live TV application functionality has been enabled, the method 1500 ends at step 1532. 

 If it is determined at step 1508 that a first-time experience will not be presented to a user, the method 1500 may continue by determining whether one or more channel sets have been previously scanned (step 1536). When it is determined that no channel sets have been scanned, the method 1500 may continue at step 1512. However, if it is determined that at least one channel set has been previously scanned, the method 1500 may proceed to step 1540. 

 In some embodiments, the Intelligent TV 100 may require that a particular channel set be scanned to enable live TV application functionality. In other words, a user may be prevented from accessing certain functionality associated with the live TV application if a particular channel set is not scanned. The method 1500 may optionally continue by determining whether a required channel set has been scanned (step 1540). If the required channel set has been scanned, the method 1500 may proceed to enable live TV application functionality (step 1528). On the other hand, if the required channel set has not been scanned, or if there is no requirement to scan a particular channel set, the method 1500 may continue at step 1544. 

 At step 1544, a user may be presented with an option via an interactive dialog box to scan a particular channel set and to switch to another particular channel set. As provided above, a user may have conducted a previous channel scan. This previous channel scan may allow the user to switch to the previously scanned channel set and enable live TV functionality via the interactive dialog box presented to the Intelligent TV 100 (step 1548). The user may provide a switch input via a remote control or other input device. If no switch input is received, method 1500 may continue by detecting a scan input or a cancel input (step 1516). 

 FIGS. 16A-16E depict various dialog, or notification, presentations in accordance with embodiments of the present disclosure. In some instances, it may be necessary for one or more components of the Intelligent TV 100 to communicate to a user via a dialog box. These dialog boxes may include interactive features and/or informational content that may be viewed by a user. Among other things, the dialog box may allow a user to review information and/or select content while watching the live TV application. As such, the dialog box may be configured to be discreet and un-obstructive. For example, the dialog box may be one or more of, transparent, justified to a particular section of the Intelligent TV 100 display, constructed from a single color, utilize a clear font type (e.g., sans serif, regular font style, etc.), include minimal features, and even be configured to disappear after a certain time. It is an aspect of the present disclosure, that the dialog boxes may incorporate standard operating system dialogs that are used to convey information to, and/or require input from, a user. 

 A dialog box presented to a user via the Intelligent TV 100 may be configured to disappear after a given period of time. Alternatively, and in some cases, a dialog box may be configured to remain displayed to the Intelligent TV 100 depending on the content associated with the dialog box. In some cases, a dialog box may incorporate a default selection or action. In this instance, if a user fails to provide a selection, the selection may be made automatically in response to a passage of time. 

 FIG. 16A is a block diagram of a first embodiment of an Intelligent TV 100 dialog presentation. The dialog box 1616 depicted in FIG. 16A may comprise a header 1604, a body 1608, and a footer 1612 section. Although these separate sections 1604, 1608, 1612, may be combined to form a dialog box 1616, it should be appreciated that any one of the sections 1604, 1608, 1612, individually, may comprise the dialog box. In some embodiments, the various sections 1604, 1608, 1612, may include one more features. These features may further comprise informational portions and/or interactive portions. For example, the header 1604 may include the title of a channel or notification. The body 1608 may include content associated with the dialog box, such as, a description of a program or reminder, a selectable option, a timeout feature, or the like. The footer 1612 may include similar content as the header 1604 or the body 1608. It should be appreciated, that any of the sections 1604, 1608, 1612, described herein and in FIGS. 16A-E, can include graphics, dividers, markers, delineations, text, checkboxes, radio buttons, selectable content, hyperlinks, and/or the like. 

 FIG. 16B is a block diagram of a second embodiment of an Intelligent TV 100 dialog presentation. Specifically, a compact dialog box 1620 is shown comprising a header 1604 and a body 1608. As described herein, the header 1604 may contain titles, prompts, information, and the like. In some embodiments, the header 1604 may be separated from the body 1608 by a visual and/or content divider. For example, the header 1604 may include a question, or prompt, asking the user for input via a selection mechanism contained in the body 1608. Such prompts may correspond to programming information, personal preferences, Intelligent TV 100 settings, application settings, and the like. In some cases, the body 1608 may include a yes/no, on/off, or option list, from which a user may select. 

 FIG. 16C is a block diagram of a third embodiment of an Intelligent TV 100 dialog presentation. In particular, FIG. 16C shows a variation of a dialog box 1624 that includes a body 1608 and a footer 1612. The footer 1612, like the header 1604 and the body 1608, may include a timing feature associated with the presentation of the dialog box 1616, 1624. The timing feature may be configured to show a visual progress of the elapsed time associated with dialog box 1616, 1624. In some cases, the timing feature may be configured to show a time remaining with the presentation of the dialog box 1616, 1624. For example, the time remaining may be expressed as one or more numbers, progress bars, countdown timers, reverse progress bars, etc. Once the timer has expired, whether counting up or counting down, the dialog box 1608, 1616, 1620, 1624, may disappear from the display of the Intelligent TV 100. 

 FIG. 16D is a block diagram of a fourth embodiment of an Intelligent TV 100 dialog presentation. In an exemplary embodiment, the dialog box may comprise the body 1608 only. Although the body 1608 may contain timing features, titles, selectable options, descriptions, and other content, is anticipated that the dialog box will remain at a reduced size in comparison to the size of the display of the Intelligent TV 100. For instance, the dialog box 1608 may be presented to a section of the Intelligent TV 100 display, such that, it only takes up a small portion of the viewing content area. A dialog box configured as a body 1608 may be used as a simple reminder, or notification, of content associated with the live TV application. 

 FIG. 16E is a block diagram of a dialog presented to the display of an Intelligent TV 100 in accordance with embodiments of the present disclosure. As shown, the dialog box 1620 includes a header 1604 and a body 1608. The header 1604 displays the title of the program that is available via the live TV application. In FIG. 16E, the title of the program shown via the dialog box 1620 is "CXNX News." The body 1608 can include prompts 1608A, 1608B, 1608C, along with one or more selectable inputs 1628, such that a user may select an input that is associated with the prompts 1608A, 1608B, 1608C. In the present example, the first prompt 1608A is associated with a reminder setting, the second prompt 1608B is associated with a program favorite setting, and the third prompt 1608C is associated with a channel favorite setting. As can be appreciated, a user may navigate among these prompts 1608A, 1608B, 1608C, to select a corresponding action that may be performed by the live TV application. In the present example, the reminder setting prompt 1608A is highlighted by default. A user may move the position of the highlight via a remote control or other input device. 

 Referring to FIG. 17 a flow diagram depicting a dialog presentation method 1700 is shown in accordance with embodiments of the present disclosure. The method 1700 begins at step 1704 and continues when the live TV application receives an input to initiate a dialog presentation (step 1708). The initiation input may be provided by one or more of, a user, the live TV application, other applications associated with the Intelligent TV 100, and/or one or more components of the Intelligent TV 100. For instance, a reminder may have been set, or programmed, for a specific program or show that is scheduled to play on live TV. The reminder may be associated with an initiation condition, including but not limited to, a timer, an input from an electronic programming guide, in response to another condition, some other input, or combinations thereof. Continuing the example, when the initiation condition is satisfied for the reminder, the reminder may display to the Intelligent TV 100. In some cases, the reminder may be displayed within a specific timeframe of a scheduled program or show. 

 The method 1700 continues by selecting a dialog presentation based at least partially on the received input (step 1712). Selection of the dialog presentation may include determining whether the presentation should include a header 1604, a body 1608, a footer 1612, and/or combinations thereof. Additionally or alternatively, selection of the dialog presentation may include determining content and/or features contained within a dialog. For instance, a typical informative dialog presentation may include a body 1608 only. However, a dialog presentation that includes a title and descriptive information coupled with selectable inputs and even a timeout feature may require a header 1604, a body 1608, and a footer 1612. By way of example, a reminder dialog presentation may include the title of the reminder in a header 1604 and at least one selectable option in the body 1608 that allows a user to change channels to the program associated with the reminder. 

 Next, the method 1700 may determine whether or not the dialog presentation is time informative (step 1716). In some embodiments, the dialog presentation may provide a visual representation of a time associated with certain dialog content. As can be appreciated, a user may be provided with a countdown timer, a progress bar, or other time feature associated with the dialog box. The time feature may be informative of a program start time, a current time, and/or a time associated with the dialog box presentation. Determining whether or not a dialog is time informative may include referring to a memory having stored preferences, or rules, associated with one or more of TV content, dialog boxes, time informative features, etc. For example, a reminder presented to a user via a dialog box may inform the user of a start time of a TV show. Because the start time of the TV show is time sensitive, the reminder dialog box may provide at least one of, a start time of the show, a time until the start time, a countdown time until the start time, and a time feature relating to the presentation of the dialog box. Among other things, the time feature disclosed in this example can allow a user to make a selection decision while a dialog box is presented via the Intelligent TV 100. If the dialog is not determined to be time informative, the method 1700 continues at step 1724. 

 If the dialog is determined to be time informative, the method 1700 continues by including at least one time information feature as part of the dialog presentation (step 1720). In one example, a time feature may include a progress bar displayed as part of the dialog box. The progress bar may represent an amount of time associated with the presentation of the dialog box. For instance, a progress bar may show how long a dialog has been presented to the display of an Intelligent TV 100. As such, the progress bar may include a time start point and a time endpoint. In another example, a reverse progress bar may be configured to countdown, and/or display a graphical change, representing a time remaining for the presentation of the dialog. Upon an expiration of the time shown via the reverse progress bar, the dialog may be configured to disappear. The progress bar, reverse progress bar, or other time feature, may relate to live TV content or the presentation of a dialog. 

 As previously stated, the dialog box may incorporate a default selection, or action, that may be automatically selected in response to a passage of time. Among other things, providing a user with a visual representation of time associated with the dialog box can allow a user to make a selection other than the default selection associated with the dialog box. 

 The method 1700 continues by presenting the dialog via the live TV application and the Intelligent TV 100 (step 1724). Presentation of the dialog may include, but is not limited to, a display justification point (e.g., left-justified, right-justified, center-justified, bottom-justified, top-justified, and combinations thereof), a transparency level, a font type or style, an overall size, an action, a size in relation to the display of the Intelligent TV 100, and more. 

 When the dialog is presented to the display of the Intelligent TV 100, a timer may be initiated that defines the amount of time the dialog will be presented (step 1728). As can be appreciated, the timer may be a "count-up" timer or a "countdown" timer. The live TV application may be configured to provide an action upon the expiration of the dialog presentation timer. One example of an action associated with the expiration of the timer may include causing the dialog to disappear from the display of the Intelligent TV 100. Another example of an action associated with the expiration of the timer may include an automatic selection of an available option via the Intelligent TV 100. 

 Next, the method 1700 receives an input from a user, or the expiration of the timer, to remove the dialog presentation (step 1732). A user input may correspond to a selection associated with the dialog presentation, a cancellation, or some other input associated with the Intelligent TV 100. For example, a user may select an option associated with the dialog box, in which case the dialog box may disappear. In some embodiments, a user may not enter an input and an automatic selection may be made by the expiration of the timer. In any event, when the timer has reached the end of its scheduled time the dialog box may be configured to disappear from display. In an alternative embodiment, the dialog box may be configured to fade out, move to the application (or other) panel, minimize, or otherwise dismiss from the content view area of the Intelligent TV 100. The method ends at step 1736. 

 Referring now to FIG. 18, a panel configuration in accordance with embodiments of the present disclosure is illustrated. As previously discussed, the panel manager 536 is operable to display panels in the user interface to manage transitions between those panels or to effect user interface inputs received in the panel. The panel manager 536 may thus be in communication with different user interface panels such as a global panel 516, a volume panel 520, a settings panel 524, and application panel 544, and/or a notification panel 528. The panel manager 536 can display these types of panels depending on the inputs received from the input event dispatcher 508. The panel system is designed to provide a quick access to extended functionality while still maintaining visibility into the main content view. 

 As illustrated in FIG. 18, the Intelligent TV 100 may display a global panel 1804, an active content view area 1808, and an application panel 1812. The global panel 1804 may be the same or similar to global panel 516. The global panel 1804 may include information that is associated with the home screen or top level hierarchical information for the user. For instance, global panel 1804 may be used to contain and access functionality that exists at a system level; this functionality may be completely independent of the currently viewed content. The global panel 1804 may be displayed in such a manner as to not disrupt the content view area 1808; that is, the global panel 1804 may be displayed in such a manner as to provide a user the ability to view content displayed in the content view area 1808 over or adjacent to live TV content. For example, the global panel 1804 may be translucent in nature such that the content displayed in the content view area 1808 is displayed (i.e., still viewable to a user), behind the global panel 1804. The global panel 1804 may provide a consistent access to high-level actions across all applications, an anchor for all views, a unified experience, and further may follow the same pattern as the application panel 1812. Moreover, and as previously discussed, global panel 1804 may be displayed by the Intelligent TV 100 such that the active content in the content view area 1808 is always in view. In some embodiments, the global panel 1804 and the contents of the global panel 1804 may depend on the user; that is, the global panel 1804 may be specific to one or more users. Therefore, the global panel 1804 may also be thought of as a home panel. 

 As further illustrated in FIG. 18, the Intelligent TV 100 may display an application panel 1812. The application panel 1812 may be the same or similar as application panel 544. The application panel 1812 may provide access to contextually relevant functionality based on the currently viewing/recently viewed material. Similar to the global panel 1804, the application panel 1812 may provide such access without disrupting the content view area 1808. That is, the application panel 1812 may be displayed in such a manner as to provide a user the ability to view content displayed in the content view area 1808 over or adjacent to live TV content. For example, the application panel 1812 may be translucent in nature such that the content displayed in the content view area 1808 is displayed (i.e., still viewable to a user), behind the application panel 1812. The application panel 1812 may provide quick access to core functionality of the Intelligent TV 100 such that the active content in the content view area 1808 is always in view. Moreover, the application panel 1812 may provide a consistent user experience across all applications and may include focused contextual content. 

 The Intelligent TV 100 may include an application panel 1812 as shown in FIG. 19. The content displayed in the application panel 1812 depends on the content displayed in the content view area 1808. Stated another way, the application panel 1812 is contextually dependent upon the source of content and the content itself in the content view area 1808. This is significantly different from the global panel 1804, in which the content displayed in the global panel 1804 contains functionality that exists at a system level and is completely independent of the currently viewed content in the content view area 1808. The application panel 1812 also provides customized information for each application. The application panel 1812 may comprise application panel elements comprising an application panel navigation bar 1904, a content area 1908, and a hotkey legend 1912. The application panel navigation bar 1904 is presented such that the navigation pattern and content remain consistent across all applications. That is, the navigation bar 1904 may include the same or similar elements such that an easy navigation is maintained no matter which application and/or sources are selected and displayed. For example, the navigation panel bar 1904 may include fixed regions 1920A-1920E corresponding to live TV navigable menus and further comprising Info, EPG, Categories, Favorites, and Search. Although, Info, EPG, Categories, Favorites, and Search are illustrated in FIG. 19, additional or fewer tab regions may be displayed. 

 The content area in 1908 is panel view specific. For example, depending on the panel view focus, the content area 1908 may update, as further described below. Moreover, the application panel 1812 may include a hotkey legend 1912 corresponding to one or more hotkeys. The hotkey legend 1912 is positioned at the bottom of the panel 1812 across all applications. The function of the hotkeys is context sensitive and may vary depending on the application selected and/or displayed in the content view area 1808. However, generally speaking, some hotkeys are generally navigation based while others may be action based. For example, the hotkeys may correspond to shortcuts such as marking a series, program, show, or channel as a favorite. In another example, at least one of the hotkeys may correspond to a reminder such that a series, program, or show can be marked for a reminder. 

 FIG. 20 depicts a first embodiment of an information (Info) panel presented via an application panel of an Intelligent TV. The sample live TV application panel 1812 shown in FIG. 20 includes an application panel navigation bar 1904, a content area 1908, and a hotkey legend 1912. In this example, Info tab 1920A is highlighted to display live TV informational content via the application panel 1812. In particular, FIG. 20 depicts an example where the Info fixed region 1920A has a focus in accordance with some embodiments of the present disclosure. When the Info fixed tab region 1920A has a focus, or is highlighted, an Info panel type, such as panel type 1812 may be presented. Panel type 1812 may be presented when the content displayed in the active content area 1808 is associated with content having series information. 

 The application panel 1812 may include a section that identifies a program type. Program types may include, but are not limited to, TV episodes, TV specials, movies, sports events, radio stations, and undefined or general programs. TV episodes can include, but are in no way limited to, drama series, situation comedies (sitcoms), animated series, reality shows, mini-series, talk shows, game shows, newscasts, combinations thereof and the like. Sports events may include, but are not limited to, baseball season, hockey playoffs, boxing matches, Superbowl, football championships, etc. Specials may include holiday or seasonal specials, election coverage, special news reports, and more. In the event that a program type is not recognized, or does not have program information, the application panel 1812 may display undefined content in the content area 1908. An unrecognized program type may include any program playing on live TV that does not include metadata. In one embodiment, a program may not be classified into one of the program types disclosed above in which case, the application panel 1812 may provide general informational content. In one example, live TV informational content may be determined by referring to rules stored in a memory. Continuing this example, informational content fields may be mapped to a particular live TV broadcast content, or program, types. For instance, an event program type may include similar informational content to a TV series program type. The event may be configured to include fields such as, a thumbnail graphic, a description, and a channel identifier. The TV series may also be configured to include fields such as, a thumbnail graphic, a description, and a channel identifier. In some embodiments, the program type of a particular program (e.g., one presented to the active content area 1808, etc.) may be compared to one or more mapped content fields stored in rules. Once the informational content field, or fields, have been determined, the Intelligent TV 100 may include the content fields in the presentation layout of the informational content. When retrieved, the informational content may use the fields to populate the informational content presented to an application panel 1812. 

 As part of the program identification, the application panel 1812 may include a program name, season, episode number, description, and the like, in a program identification section 2004A. Additionally or alternatively, a program may be identified by a series or episode number in a second program identification section 2004B. A third program identification section 2008C may include program format, ratings, preferences, and/or other settings. The program identification section in the contact content area 1908 may include a thumbnail graphic 2008. The thumbnail graphic 2008 may be used to identify a program visually, and may even include a channel identification number or symbol. In some embodiments, the content area 1908 may include preference information such as a favorites button 2016. A favorites button 2016 may be used to add a program, or channel, to a favorites list. Additionally or alternatively, the favorites button 2016 may be used to remove a program, or channel, from a favorites list. The favorites list may be stored in a memory as disclosed herein. 

 As previously stated, the application panel 1812 and the panel type may dynamically change depending on the information associated with the live TV content playing in the content view area 1808. For instance, in the event that a TV series is playing in the active content area 1808, the application panel 1812 may display TV series information in the content area 1908. In some embodiments, the live TV broadcast content playing in the content view area 1808 can continue to play even while an application panel 1812, EPG, information content, and more are displayed in an overlapped condition over at least a portion of the content view area 1808. In one embodiment, the application panel 1812 and content in the application panel 1812 are at least partially transparent. As such, live TV content is visible beneath an overlapped application panel 1812, whether the application panel is showing an EPG, information, favorites, or other content. TV series information may include one or more of a channel number, thumbnail graphic, season, episode, description, start time, and time, and other TV series-specific information. 

 A thumbnail graphic 2008 may be displayed for a program, movie, show, episode, special, sports event, as a default, or for some other undefined content. It is anticipated, that the thumbnail graphic 2008 be related to the content associated with the program. As such, thumbnail graphic 2008 content may be retrieved from a memory, or an electronic programming guide, for display in the application panel 1812. In some embodiments, a thumbnail graphic 2008 may be provided by the metadata that accompanies a broadcast channel signal. In some cases, however, a thumbnail image, or graphic, may not be available for a particular program. In this instance, the live TV application may retrieve a thumbnail image from a memory associated with the Intelligent TV 100. Default images may be used to define specific program types, or undefined program types. For instance, a radio station program may not be associated with a particular thumbnail image or graphic and as such a default image of a radio station can be provided via the thumbnail graphic 2008. 

 In some embodiments, a content area 1908 of the application panel 1812 may provide an "On Next" information 2020 section. The "On Next" information 2020 may comprise information relating to one or more programs, shows, specials, events, movies that are playing on live TV after the program shown in the content area 1908 has finished playing. As such, the "On Next" information 2020 may include a thumbnail graphic 2008 of the next program and/or additional information related to the program (e.g., a description, etc.). In one embodiment, the "On next" information 2020 may include a start time, and an identification of the program. In another embodiment, the "On Next" information 2020 may provide "recommended" viewing content, subsequent episodes playing on different channels, and even "favorite" viewing content. "On Next" information 2020 sections may be associated with one or more info panels displaying movies, TV specials, sports events, and/or TV series episodes. 

 As can be appreciated, various information panels may include more or less information depending on the content associated with the live TV broadcast. For example, an unrecognized or undefined program may not include "On Next" information 2020. In another example, a movie program may not include episode information. In yet another example, a radio station channel, or music channel, may not include episode information, "On Next" information 2020, or season information. In many cases, however, the various programs may include a description of what is playing on live TV. Additionally, the various programs may include a channel identifier in the application panel 1812. 

 In accordance with some embodiments of the present disclosure, and as previously described, a user may select a fixed tab region 2140 corresponding to Info, as illustrated in FIG. 21. An indicator, such as indicator 2140 may display which fixed tab region is selected or has the current select-focus. Application panel 1812 may then display context specific information corresponding to the active content area 1808. For example, the application panel 1812 may include information specific to live TV. For instance, channel 801 may correspond to the network "CXNX." Additionally, a thumbnail graphic 2104 corresponding to the channel 801, or program 2112 playing on the channel, may be displayed in the application panel 1812. Moreover, the application panel 1812 may utilize one or more panel content types discussed herein. For example, a mini-electronic program guide, or "On Next" information 2020 section displaying program scheduling pertaining to the active content area 1808 may be displayed in the application panel 1812. Moreover, additional information pertaining to the active content area 1808 may be presented to a user. Information such as the title of the program 2112, the scheduling of the program 2116, a description of the program 2120, and characteristics of the program (e.g., visual quality, High Definition (HD), signal quality, sound quality, Dolby.RTM., category, genre, etc.) 2124 may also be displayed. Moreover, upon the display of the application panel 1812, other linked areas or functions may also be displayed. 

 FIG. 22 shows a flow diagram depicting an information panel presentation method 2200 in accordance with embodiments of the present disclosure. The method 2200 begins at step 2204 and proceeds by recognizing a select-focus and/or selected content via the application panel 1812 (step 2208). In some embodiments, the select-focus may correspond to a position of a user's cursor, or indicator 2140, on the application panel 1812. A select-focus may include a default focus associated with one or more of the fixed tab regions 1904. The select-focus may be moved via a user input from a remote control or other input device. One example of moving or shifting the select-focus may include providing a directional input via a remote control. Selected content may be recognized via an input provided in association with a selection-focus. Additionally or alternatively, selected content may be recognized by detecting an input that is independent of a selection-focus. For example, although an indicator 2140 may be associated with a portion of the application panel 1812, a user may provide an input corresponding to a different portion of the application panel 1812. In this example, a user may select a program hotkey, provide a directional input (e.g., up, down, left, right, angles, and combinations thereof), a swipe input, and/or a hold input to select content. 

 If the select-focus is associated with an Info tab region 1920A, the method 2200 continues by receiving an input to initiate the information presentation via the application panel 1812 (step 2212). The input may be provided by a user via a remote control or other input device. In some embodiments, the user-provided input may be a selection input based on a corresponding position of a select-focus associated with the navigation bar 1904. In other embodiments, an informational input may be provided via an information button associated with a remote control or other input device. In this case, a select-focus may not be required to display informational content via the live TV application panel 1812. Additionally or alternatively, the input may be provided via the Intelligent TV 100 in response to a condition. For example, a timer may be configured to change live TV channels on the Intelligent TV 100 at a given time. Once the channel is changed, the Info tab 1920A may be automatically selected and information may be shown via the application panel 1812. This automatic selection and presentation may be provided by one or more of the components associated with the Intelligent TV 100. As can be appreciated, rules and/or preferences may be used to determine the automatic selection and/or presentation of information via the Info tab 1920A and the application panel 1812. 

 Upon receiving an input to initiate the information presentation via the application panel 1812, the method 2200 continues by determining the presentation of information based at least partially on the selection (step 2216). The presentation of information may include, but is not limited to, a layout, a graphical representation, selected fields, descriptions, and the like. As such, certain presentations of information may be governed by the content related to the selection input. In one example, a selection input may be provided to show information relating to broadcast content playing via live TV in the active content area 1808. Continuing this example, if a movie is playing in the active content area 1808, the information presentation selected for the application panel 1812 may include a movie name, a description, a cast list, a movie rating, a start and end time, and more. On the other hand, if a radio station program is playing in the active content area 1808, the information presentation selected for display in the application panel 1812 may include the radio station program channel number, a default image, a description of any music playing etc. In some embodiments, a size of the active content area 1808 may include the total viewable area of the Intelligent TV 100 display. 

 The method 2200 continues by retrieving the information presentation content from at least one source (step 2220). For instance, if the information presentation content includes a description of the content playing on live TV, the Intelligent TV 100 may retrieve this information from at least one broadcast signal. Typically, such programming information may be included in the data accompanying a broadcast signal. Additionally or alternatively, if the information presentation content includes "recommended" or "favorite" content, the Intelligent TV 100 may refer to a memory where such content may be stored. In one embodiment, the memory may be associated with the hardware of the Intelligent TV 100. In some cases, this content may be stored in a memory remote from the Intelligent TV 100, in which case, the Intelligent TV 100 and its various components may be caused to communicate across a network to retrieve the content. Among other things, the content retrieved across the network may include, but is in no way limited to, programming information, thumbnail graphics, EPGs, etc. One example of the network may include, but is not limited to, the Internet. 

 Next, the Intelligent TV 100 may present the information presentation content via the live TV application and panel 1812 (step 2224). As disclosed herein, the presentation may include a visual, audible, and/or combination presentation via the live TV application. In some embodiments, the presentation of information may be associated within the application panel 1812 alone. The presentation of information may include, but is not limited to, a layout, a graphical representation, selected fields, descriptions, and the like. In any event, the presentation layout is displayed to the Intelligent TV 100 as determined in step 2216. This presentation of information may include any of the layouts shown in the application panels 1812 of the appended figures. Additionally or alternatively, the presentation of information, and even the application panel 1812, may be at least partially transparent. In some embodiments, the content presented to the active content area may be at least partially visible beneath, or through, the live TV application panel 1812 and even the information presentation content that is presented via the application panel 1812. In one embodiment, the size of the active content area is maintained upon presenting the information presentation content via the application panel 1812. For example, the application panel 1812 in some instances does not affect the size of the displayed active content. The method 2200 ends at step 2228. 

 FIG. 23A shows a first embodiment of an EPG 2304 presented via an application panel 1812 of an Intelligent TV 100. As shown, the application panel 1812 can overlap or move at least a portion of the active content area 1808. The EPG region 1920B of the panel navigation bar 1904 is shown as selected. The selection may be provided via a user input and/or automatically via the Intelligent TV 100 (e.g., in response to condition or other selection made). In some cases the selection of the EPG region 1920B may be indicated via a select-focus in the form of a highlight, an underline, a specific font style, an action (e.g., movement of the EPG region indicator 1920B, brightness adjustment, etc.), combinations thereof, and the like. This select-focus indication may be associated with the EPG region 1920B. The application panel 1812 may also include a hotkey legend 1912 similar to other application panels 1812 displayed via the Intelligent TV 100. As previously discussed, the hotkeys provided in the hotkey legend 1912 may be customized to facilitate shortcut navigation and/or special features associated with the Intelligent TV 100 and/or the application panel 1812. For instance, the hotkeys may be context sensitive to a particular application panel 1812 displayed. As shown in FIG. 23A, the hotkey legend 1912 may include Page Up, Page Down, Remind, Favorite, and other features. 

 In some embodiments, the EPG 2304 may be displayed via an application panel 1812 in a particular layout or format that presents scheduled programming to a viewer of the Intelligent TV 100. This particular layout or format may be customized and/or changed by a user via at least one input provided via a remote control or other input device. For example, a first format of the EPG 2304 may present the scheduled programming in a table, or list, in a channel number order. As can be appreciated, the channels may be selected from one or more particular groups of channels (e.g., favorites, available channels, premium channels, etc.) and ordered from low-to-high channel number or from high-to-low channel number. Each channel may include program information that can include start, end, duration, and other times associated with the channel's programming. 

 Additionally or alternatively, the application panel 1812 may include a program preview pane 2308 that may include a program thumbnail graphic 2008, an identifier, description, times, and other information that is associated with the channel and/or the program. The program preview pane 2308 may change to display new information as time passes or as a user navigates through selected channels. In some embodiments, the Intelligent TV 100 may select a particular channel to display information via the program preview pane 2308. This selection may be based on stored rules. In some cases, the program preview pane 2308 may be configured to display information associated with the first channel on the EPG 2304 list, as a default. 

 The EPG 2304 may be configured to present one or more programs for each channel in a list, or tabular, format that is accompanied by an EPG time scale 2312. For instance, and as shown in FIG. 23A, the first channel in the list has a first program that runs until 9:00 PM and a second program that begins at 9:00 PM. The program may include a text, graphic, and/or combination thereof identifier. The identifier may be used to identify the program to a user of the Intelligent TV 100. Although shown with a finite number of channels displayed via the list of the EPG 2304, it is anticipated that other channels may be caused to display to the EPG 2304 list given a user provided input. For instance, a user may scroll to another line, or page, on the list, by using the Page Down hotkey of a remote control or other input device as designated by the hotkey legend 1912. As another example, a user may navigate through channels in the EPG 2304 by providing a directional input (e.g., via arrow keys, channel up/down buttons, etc.) from a remote control or other input device. 

 In some embodiments, the EPG time scale 2312 may include a current time indicator. The current time indicator may be represented by a graphic that is associated with the EPG time scale 2312 and that is capable of moving relative to the EPG time scale 2312. FIG. 23A shows a small arrow, or caret symbol, positioned between the 8:30 PM and 9:00 PM on the EPG time scale 2312 that acts as a current time indicator. The position of the caret symbol along the scale in the present example indicates that the time is approximately 8:40 PM. Although shown as a caret symbol, it is anticipated that any graphic may be used to provide an indication of the current time to a user or viewer of the Intelligent TV 100. Moreover, while a moveable time indicator is disclosed above, it is anticipated that some embodiments may employ a fixed current time indicator while the EPG time scale 2312 itself moves relative to the fixed current time indicator. 

 Referring now to FIG. 23B, a second embodiment of an EPG 2304' presented via an application panel 1812 of an Intelligent TV 100 is shown. In some embodiments, the EPG 2304' may present programming information by time. In other words, the list of programs contained in the EPG 2304' can be ordered by a time associated with the program. The time may indicate a time that a program is scheduled to start. Additionally or alternatively, the program list may be compiled in the EPG 2304' via the Intelligent TV 100 from one or more groups of channels (e.g., favorites, available channels, premium channels, etc.). The times associated with each program can be ordered from earliest-to-latest start time or latest-to-earliest start time. Each program in the list may include program information, a description, start, end, duration, and other times associated with the programming and the like. In some cases, each program identifier may be accompanied by an alert feature. For example, the first three programs shown in the EPG 2304' of FIG. 23B indicate via an alert feature that the program is "ON NOW." In this example, the alert feature may be used to indicate that select programs are playing now on a channel associated with the program information displayed in the EPG 2304'. Additionally or alternatively, the alert features may be configured to indicate that a show is new, a favorite, recommended, scheduled for a reminder, scheduled for recording, and more. 

 As previously stated, the application panel 1812 may include a program preview pane 2308 that may include a program thumbnail graphic 2008, an identifier, description, times, and other information that is associated with the channel and/or the program. The program preview pane 2308 may change to display new information as time passes or as a user navigates through selected channels, programs, or start times. In some embodiments, the Intelligent TV 100 may select a particular start time, channel, or program, to display information via the program preview pane 2308. This selection may be based on stored rules. In some cases, the program preview pane 2308 may be configured to display information associated with the first channel on the EPG 2304' list, as a default. 

 In any of the EPG embodiments disclosed herein, a user may select an item (e.g., program, channel, etc.) from the EPG list and the Intelligent TV 100 may change the currently tuned channel to the program and/or channel selected. In some embodiments, the selection of one of the items in the EPG list may result in the live TV application closing and the live feed being changed to the selected channel. Among other things, the user selection may be provided by an input according to any manner of input disclosed herein. 

 FIG. 24A depicts a first embodiment of an EPG 2304 and EPG preview window 2408 presented via an application panel 1812 of an Intelligent TV 100. The EPG 2304 shown includes scheduled programming listed by channel number (e.g., from channel number 1 to channel number 12). The application panel 1812 also shows the application panel navigation bar, an EPG time scale, and a hotkey legend, in accordance with embodiments of the present disclosure. In some embodiments, select content from the EPG 2304 may provide an EPG preview window 2408 via the Intelligent TV 100. The EPG preview window 2408 may include a thumbnail graphic, a title, description, time, channel identifier, combinations thereof, and the like. Among other things, the EPG preview window 2408 may include expanded information of program information that is displayed in the EPG 2304. 

 In some embodiments, an EPG preview window 2408 may be visually associated with a particular channel and/or program. For instance, the EPG preview window 2408 may include a preview indicator 2412. Among other things, the preview indicator 2412 may point to a particular row (e.g., program, channel, time segment, etc.) in the EPG 2304. 

 The EPG preview window 2408 may be displayed by navigating to a particular row, program, or time slot, within the EPG 2304. In one embodiment, the EPG preview window 2408 may display after a given period of time has passed since a row, program, or slot is selected (whether the selection is provided by a user input or in response to a default condition of the Intelligent TV 100). In another embodiment, a user may select to display the EPG preview window 2408 by providing an input via a remote control or other input device. For example, a selection of the first row, or Channel 1 in FIG. 24A, may cause an EPG preview window 2408 to appear within at least a portion of the active content area 1808. The EPG preview window 2408 may be translucent or at least partially transparent to allow content playing in the active content area 1808 to show through the EPG preview window 2408. In essence, this translucent appearance of the EPG preview window 2408 can allow information to be displayed to a viewer, or user, without totally obstructing content that is playing on the Intelligent TV 100. Continuing the example above, the EPG preview window 2408 is presenting expanded information associated with the program "Newsroom." 

 FIG. 24B shows an EPG preview window 2408' associated with programming content playing on Channel 12. In this example, a user may have provided an input to navigate to the first program in the Channel 12 row on the EPG 2304. For example, a user may have provided a navigational input (e.g., up, down, left, right, etc.) via a remote control or other input device associated with the Intelligent TV 100. As such, the EPG preview window 2408 may move closer to the selected channel and the preview indicator 2412' may shift to point to the row associated with the selected channel. In this example, the EPG preview window 2408' is now presenting expanded information associated with the program "Home." In any embodiment, the behavior of the EPG preview window 2408 and the preview indicator 2412 may depend on rules stored in memory. Such rules may govern when the EPG preview window 2408 moves relative to the EPG 2304. Additionally or alternatively, the rules stored in memory may govern how the preview indicator 2412 moves relative to the EPG preview window 2408 and/or the EPG 2304. 

 FIG. 25 shows a flow diagram depicting an EPG presentation method 2500 in accordance with embodiments of the present disclosure. The method 2500 begins at step 2504 and proceeds when the Intelligent TV 100 receives input to initiate the EPG presentation (step 2508). In some embodiments, the EPG may be initiated by a user providing an input via a remote control or other input device. In one example, a user may activate the application panel 1812 by providing an input via the remote control or other device. Once the application panel is presented to the Intelligent TV 100, the user may navigate along the application panel navigation bar 1904 and shift the select-focus to the EPG region 1920B. In another example, a user can provide an input via a hotkey, or other button, associated with a remote control or other device that may cause the application panel 1812 to display the EPG directly. In other words, the user would not be required to navigate through regions on the application panel navigation bar 1904 to display the EPG. In yet another example, the EPG may be automatically displayed by the Intelligent TV 100 in response to detecting a condition stored in rules. 

 Next, the EPG presentation layout is determined by the Intelligent TV 100 (step 2512). This determination may be based at least partially on the input that initiated the EPG presentation. For example, if an input is provided to display a channel-based EPG, the Intelligent TV 100 would determine a channel-based EPG to present via the application panel 1812. On the other hand, if an input is provided to display a time-based EPG, the Intelligent TV 100 would determine to present a time-based EPG via the application panel 1812. Rules stored in a memory associated with the Intelligent TV 100 may dictate the presentation layout. In some embodiments, the rules stored in a memory may include one or more EPG information layout templates. The one or more EPG information layout templates may correspond to a layout template that arranges content that makes up the EPG information. As can be appreciated, the EPG information layout template may be associated with a specific EPG presentation input and/or live TV content playing in the content view area 1808 as an EPG presentation input is received. In one embodiment, an EPG presentation input may be matched to stored EPG inputs to determine a select EPG information layout template for the presentation of the EPG information. 

 In some embodiments, the EPG presentation layout may include at least one position associated with content that makes up the EPG information. The at least one position may correspond to a position of the content within a live TV application panel 1812. In some embodiments, the EPG presentation layout may include specific content that makes up the EPG information. For example, an EPG presentation layout may be determined to include a thumbnail graphic, a preview window, and a time scale. In another example, the EPG presentation layout may be determined to present the EPG information in a particular arrangement, position, location, space, size, and/or combinations thereof relative to the application panel 1812. 

 The method 2500 continues by retrieving EPG information from at least one source (step 2516). In some cases, the Intelligent TV 100 may retrieve program information from over-the-air channel signals. Typically, the program information provided in such signals is limited to simple text-based descriptions. However, the Intelligent TV 100 may be connected to a network (e.g., the Internet) and as such, may retrieve detailed program information, graphics, additional content, multi-media, and the like. Accordingly, the Intelligent TV 100 may compare, select, and/or aggregate information retrieved from at least one source. 

 At step 2520, the Intelligent TV 100 presents the EPG information retrieved in step 2516 via the live TV application and panel 1812. The EPG information may be presented in the predetermined EPG presentation layout. Additionally or alternatively, the arrangement of the presented EPG information may be altered via user input. The method 2500 ends at step 2524. 

 FIG. 26 shows a flow diagram depicting an EPG and preview window 2408 presentation method 2600 in accordance with embodiments of the present disclosure. Similar to the other methods presented herein, the method 2600 may be performed by at least one processor executing instructions stored in a non-transitory computer readable medium associated with the Intelligent TV 100. The method 2600 begins at step 2604 and proceeds by determining a select-focus associated with displayed EPG content (step 2608). Among other things, displayed EPG content may correspond to a row, a program, a time, or combinations thereof that are associated with an EPG list. As previously described above, the select-focus may correspond to a visual representation of the position of a user's cursor, or indicator, on the application panel 1812. Examples of select-focus visual representations may include, but are not limited to, highlights, underlines, font style emphasis/change, shadows, glows, color change, associated icons, actions, combinations thereof, and the like. The select-focus may indicate that a specific program and/or EPG entry in the displayed EPG information is selected. 

 Once a select-focus that is associated with EPG content is determined, the Intelligent TV 100 may initiate a timer for the determined EPG content (step 2612). The timer may be configured to count up or count down, depending on the configuration. In any event, the timer can include a goal time. Upon reaching the goal time, the method may continue. In some embodiments, the timer may be configured to reset if the select-focus is shifted to other EPG content. Additionally or alternatively, the timer may be preconfigured with an expiration time, a limit, or an overall duration. 

 The method 2600 continues by determining whether the timer has expired or reached its preset limit, or goal time (step 2616). If the timer has not completed its timing function, the method 2600 may proceed to determine whether user input is received by the Intelligent TV 100 (step 2632). Where no user input is received, the method 2600 may return to step 2616 and continue to run the timing function associated with the initiated timer. 

 If the timer has completed its timing function, the method continues by presenting an EPG preview window 2408, or "bubble" preview (step 2620). In some embodiments, the EPG preview window 2408 may be presented adjacent to the application panel 1812 in the active content area 1808 of the Intelligent TV 100. It is anticipated that the EPG preview window 2408 may be separate and apart from the application panel 1812. The EPG preview window 2408 may include a preview indicator 2412. In some cases the preview indicator 2412 may be configured to overlap at least a portion of the application panel 1812. Additionally or alternatively, the preview indicator 2412 may be linked to an EPG entry that is associated with the EPG preview window and the EPG information presented to the display of the Intelligent TV 100. In one embodiment, the link of the preview indicator 2412 to the EPG entry may be indicated by an arrow. For example, the preview indicator 2412 may point to a specific EPG entry in the EPG information presented via the application panel 1812. 

 Next, the method 2600 continues by determining whether user input is received (step 2624). If no user input is received, via a remote control or other input device, the method 2600 ends at step 2628. On the other hand, if user input is received, at step 2624 or at step 2632, the method 2600 continues by determining whether the user input is a navigate-type input (step 2636). In some embodiments, the navigate-type input may be provided by a remote control or other input device. Examples of navigate-type inputs may include, but are not limited to, directional inputs (e.g., via arrow keys, swipes, touch-screens, etc.), channel up inputs, channel down inputs, hotkey inputs associated with navigation, combinations thereof, and the like. As disclosed herein, the navigate-type input may correspond to movement within EPG content that is available via the application panel 1812. In some cases, the EPG content may not be displayed to the application panel 1812, but a navigate-type input may display the EPG content to the application panel 1812. Upon receiving a navigate-type input, the method 2600 may proceed to navigate to the EPG content associated with a direction or destination of the navigate-type input (step 2648). After navigating to the EPG content, based on the provided navigate-type input, the method 2600 may repeat from step 2608. 

 If a user-input is received via the Intelligent TV 100, but it is determined to be an input other than a navigate-type input associated with EPG content, the method 2600 continues by determining a function associated with the input received (step 2640). Next, the method continues by providing the function determined in step 2640 (step 2644). For example, a user may provide an "exit" input via a remote control device. Based on this input, the Intelligent TV 100 determines that the input is not a navigate-type input as disclosed herein. Continuing the example, the method 2600 provides the "exit" input functionality, which in this case may correspond to closing the application panel 1812. In another example, a user may provide an "enter" input while the select-focus is associated with a program in the EPG content. In this case, the "enter" input may be associated with tuning the Intelligent TV 100 to the signal source associated with the program in the select-focus. The Intelligent TV 100 may provide the functionality associated with the "enter" input and tune to the signal source. The method ends at step 2628. 

 FIG. 27 depicts an embodiment of a compact EPG 2708 presented via an application panel 1812 of an Intelligent TV 100. As shown, the select-focus associated with the application panel navigation bar 1904 is set to the Categories tab 1920C. In some cases the selection of the Categories tab 1920C may be indicated via a select-focus in the form of a highlight, an underline, a specific font style, an action (e.g., movement of the Categories tab 1920C indicator, brightness adjustment, etc.), combinations thereof, and the like. This select-focus indication may be associated with the Categories tab 1920C. The application panel 1812 may also include a hotkey legend 1912 similar to other application panels 1812 displayed via the Intelligent TV 100. As previously discussed, the hotkeys provided in the hotkey legend 1912 may be customized to facilitate shortcut navigation and/or special features associated with the Intelligent TV 100 and/or the application panel 1812. For instance, the hotkeys may be context sensitive to a particular application panel 1812 displayed. As shown in FIG. 27, the hotkey legend 1912 may include Remind, Favorite, and other actions associated with one or more hotkeys. The hotkeys may be associated, or mapped, to one or more inputs of a remote control or other input device. 

 The application panel 1812 includes an EPG layout header 2704. The EPG layout header 2704 may be used to alter the format of a displayed compact EPG 2708. For instance, the EPG layout header 2704 shows "Category List" in FIG. 27 with a caret pointing left, while the compact EPG 2708 is presenting the compact, or "mini," EPG in a chosen category format. A user may select the EPG layout header 2704 to change, remove, create, or select categories that the compact EPG 2708 will display. Categories available via the "Category List" may include, but are not limited to, time-based, genre, title, program type (e.g., movie, TV special, sport, radio, undefined, etc.), channel-based, reminders, combinations thereof, and even user-created categories. In this example, the chosen category EPG list is shown by channel number on the left-hand side of the compact EPG 2708. In some embodiments, a user may select the EPG layout header 2704 to modify the presentation of the compact EPG 2708 in the application panel 1812. Upon selecting the EPG layout header 2704, the user may be presented with a number of compact EPG 2708 layout options. One example of such a presentation layout option may include displaying the compact EPG 2708 as any one of the categories disclosed above that can be chosen via a selection from within the Category tab 1920C of application panel 1812. In a "Time-Based" category presentation, the compact EPG 2708 may be arranged by time (as opposed to channel number, as previously discussed above). In another embodiment, a user may select a "Movie" category from the "Category List," in which case the compact EPG 2708 displays a list of movies that are available for viewing via the Intelligent TV 100. Other variations and presentation layouts regarding categories, as disclosed above, may be made to the compact EPG 2708. 

 Additionally or alternatively, the application panel 1812 may include a program preview pane 2308 that may include a program thumbnail graphic 2008, an identifier, description, times, and other information that is associated with the channel and/or the program. The program preview pane 2308 may change to display new information as time passes or as a user navigates through selected channels, programs, or rows in the compact EPG 2708. In some embodiments, the Intelligent TV 100 may select EPG content information to display via the program preview pane 2308. This selection may be based on stored rules. In some cases, the program preview pane 2308 may be configured to display information associated with the first channel on the compact EPG 2708 list, as a default. 

 The compact EPG 2708 may be configured to present one or more programs for each channel in a list format that is accompanied by an EPG time scale 2312. Similar to the EPG 2304 disclosed above, a program in the compact EPG 2708 may include a text, graphic, and/or combination thereof identifier. In some embodiments, the compact EPG 2708 may be configured to display a specific number of lines, rows, programs, and/or information. The identifier may be used to identify the program to a user of the Intelligent TV 100. Although shown with a finite number of rows displayed via the list of the compact EPG 2708, it is anticipated that other channels may be caused to display to the compact EPG 2708 list given a user provided input. For instance, a user may scroll to another line, or page, on the list, by using a remote control or other input device. As another example, a user may navigate through channels in the compact EPG 2708 by providing a directional input (e.g., via arrow keys, channel up/down buttons, etc.) from a remote control or other input device. 

 In some embodiments, the EPG time scale may include a current time indicator. The current time indicator may be represented by a graphic that is associated with the EPG time scale and that is capable of moving relative to the EPG time scale 2312. FIG. 27 shows a small arrow, or caret symbol, positioned between the 8:30 PM and 9:00 PM on the EPG time scale 2312. The position of the caret symbol along the scale in the present example indicates that the current time is approximately 8:40 PM. Although shown as a caret symbol, it is anticipated that any graphic may be used to provide an indication to a user. Moreover, while a moveable time indicator is disclosed above, it is anticipated that some embodiments may employ a fixed current time indicator while the EPG time scale 2312 itself moves relative to the fixed current time indicator. 

 FIG. 28A depicts a first embodiment of a reminder dialog presentation 2800 in accordance with embodiments of the present disclosure. A reminder may be set for a program, show, channel, time, and combinations thereof. The reminder may be associated with an initiation condition, including but not limited to, a timer, an input from an EPG, in response to another condition, some other input, or combinations thereof. Continuing the example, when the initiation condition is satisfied for the reminder, the reminder may display to the Intelligent TV 100. In some cases, the reminder may be displayed within a specific timeframe of a scheduled program or show. The reminder dialog presentation may utilize one or more of the dialog presentations disclosed above. 

 The reminder dialog presentation 2800 includes a reminder header 2804 and a reminder body comprising one or more reminder prompts 2808A-C. The reminder header 2804 may include an identifier associated with a show, channel, series, content, reminder, program, time, etc. For example, the reminder header 2804 may display the title of a program that is available via the live TV application. The reminder body can include prompts 2808A, 2808B, 2808C, along with one or more selectable inputs 2828, such that a user may select an input that is associated with the prompts 2808A, 2808B, 2808C. As can be appreciated, a user may navigate among these prompts 2808A, 2808B, 2808C, to select a corresponding action that may be performed by the live TV application. In the present example, the reminder setting prompt 2808A is highlighted by default. A user may move the position of the highlight via a remote control or other input device. 

 In some embodiments, the reminder dialog presentation 2800 may be initiated in response to a user input. A user may desire to add a reminder for a specific program, show, channel, etc. As such, a user may utilize a "remind" input associated with a remote control or other input device. In one example, a "remind" input may be provided via a hotkey associated with the remote control or other input device. For instance, a user may be viewing an EPG via the application panel 1812 of an Intelligent TV 100 and notice that an interesting program is scheduled to start in an hour. Desiring to be reminded of the program, the user may select the program, activate the reminder input (e.g., via the "remind" hotkey, or other input) to initiate the reminder dialog presentation 2800. Then, the user may select the first prompt 2808A to set a reminder for the program. 

 The second prompt 2808B allows a user to add the live TV content (e.g., show, series, program, etc.) to a "Favorites" compilation, or group. In a similar fashion, the third prompt 2808C listed on the reminder dialog presentation 2800 may be configured to provide an option for a user to add a selected channel to the "Favorites" compilation, or group. As can be appreciated, the "Favorites" group may be arranged at least by channel and content. 

 Referring to FIG. 28B a second embodiment of a reminder dialog presentation 2800' is depicted in accordance with embodiments of the present disclosure. In the event that a reminder is previously set for live TV content, a user may initiate the second reminder dialog presentation 2800' shown in FIG. 28B. Among other things, the user may modify settings associated with the previously set reminder via the second reminder dialog presentation 2800'. The second reminder dialog presentation 2800' can be initiated in a similar manner as the reminder dialog presentation 2800. Additionally or alternatively, the second reminder dialog presentation 2800' may be initiated by a user selecting a previously set reminder, or a program that is associated with a previously set reminder. Upon providing the selection input, the user may view the second reminder dialog presentation 2800'. 

 The second reminder dialog presentation 2800' includes a reminder header 2804 and a reminder body comprising one or more reminder prompts 2808A'-C'. As shown in FIG. 28B, the reminder prompts 2808A'-C' have changed from setting a reminder and adding a channel or content as a favorite to removing a reminder and channel or content from a "Favorites" group. In the event that a user wishes to remove the reminder from particular content, the user may initiate the second reminder dialog presentation 2800' (as disclosed above) and select the "remove reminder" prompt from the appropriate reminder prompt 2808A'. Although FIGS. 28A-B show exemplary reminder dialog presentations 2800, 2800', it should be appreciated that the presentation of user prompts 2808A-C, 2808A'-C' can vary in the number of prompts presented as well as the order in which they are presented. 

 FIGS. 29A-D depict embodiments of reminder dialog notifications in accordance with embodiments of the present disclosure. In particular, FIGS. 29A-D show various reminder dialogs that are presented to the display of the Intelligent TV 100 upon receiving a reminder initiation input. The reminder initiation input may be provided by one or more of, a user, the live TV application, other applications associated with the Intelligent TV 100, and/or one or more components of the Intelligent TV 100. For instance, a reminder may have been set, or programmed, for a specific program or show that is scheduled to play on live TV. 

 In some embodiments, a reminder may be set for a specific program. The reminder may notify a user when the specific program is about to start, regardless of where the user is in the Intelligent TV 100 system (e.g., on another channel, silo, etc.). In one embodiment, a reminder may be set and created for a specific instance of a complete series. For example, if a program is on every Friday night at 8:00 PM on channel 3, then setting a reminder for the program may create a reminder that is provided every Friday at 7:58 PM. Additionally or alternatively, if a program is a single airing event (such as a movie or TV special), then a reminder may only be provided for that singular instance. In some embodiments, if a user changes a channel from a reminder the 

 Reminders may be created for one or more parameters including, but not limited to, program names at program times on a program channel. The reminder may be stored in a memory and whenever a program is on that matches the one or more parameters the reminder may be set. The program logic used to create and/or set reminders does not require consideration of the day of the week associated with the one or more parameters. As such, all of the logical configurations may be covered. For example, reminders may be set for weekdays only (e.g., a soap opera, talk show, etc.), every day (e.g., news), twice a week (e.g., variety shows, competition shows having a competition day and a voting results day, etc.), once a week (e.g., a situation comedy (sitcom), drama show, etc.), and even once only (e.g., movie, TV special, etc.). This configuration may cover scenarios where shows go off the air for some time period between seasons. 

 In any event, a reminder may be associated with an initiation condition, including but not limited to, a timer, an input from an EPG, in response to another condition, some other input, or combinations thereof. Continuing the example, when the initiation condition is satisfied for the reminder, the reminder may display to the Intelligent TV 100 in the form of at least one of the reminder dialog presentations shown in FIGS. 29A-D. In some cases, the reminder may be displayed within a specific timeframe of a scheduled program or show. The notifications may be displayed to the active content area 1808 of the Intelligent TV 100. Additionally or alternatively, the notifications may be translucent, or semi-transparent, to allow content from the active content area 1808 to show through the notifications. 

 The reminder time bar 2912 may be similar in form and function to the timing feature disclosed in reference to FIGS. 16A-E of the detailed description. Among other things, the reminder time bar 2912 may be configured to display an amount of time that is associated with the visual presentation of the reminder dialog notification. In other words, the reminder time bar 2912, may indicate how long a reminder is expected to be displayed before the reminder notification disappears. By way of example, the reminder time bar 2912 may be configured as a progress bar that increases in dimension (e.g., length, width, height, combinations thereof, etc.) until the dimension reaches a specific size, at which point the reminder notification disappears. In another embodiment, the reminder time bar 2912 may be arranged as a timed progress bar that decreases in dimension (e.g., length, width, height, combinations thereof, etc.) until the progress bar disappears with the notification. The reminder time bar 2912 that decreases in size may be called a reverse progress bar. In any event, at the end of a specific period of time set, or upon reaching a time goal, for a reminder notification, the notification may be configured to disappear. 

 A user may interact with a reminder dialog notification. For instance, a reminder dialog notification 2904A-D may be configured with a user interface button 2916. In some cases, the user interface button 2916 may include a text or graphic that indicates an associated function with the button 2916. Additionally or alternatively, it is anticipated that a user may interact with a content identification bar 2908 and even a preview pane 2308. In one example, a user may select the content identification bar 2908 associated with a notification. In some cases, this selection may tune the Intelligent TV 100 to the signal source associated with the bar 2908. Depending on one or more of the style of reminder dialog notification 2904A-D, the content associated with the reminder, user preferences, and Intelligent TV 100 settings, any of the various reminder dialog notifications may be presented to a user via the display of the Intelligent TV 100. 

 The live TV application may be configured to receive multiple reminder notifications at the same time. When multiple reminder notifications are received at the same time, the reminders may be queued. In some embodiments, requests to the user interface of the Intelligent TV 100 are sent one at a time to display the notification to the user. If the user chooses not to change the channel associated with the notification, the live TV application may proceed to process the next reminder notification in queue. 

 FIG. 29A depicts a first reminder dialog notification 2904A configured with a program preview pane 2308, a content identification bar 2908, a reminder time bar 2912, and a user interface button 2916. The reminder dialog notification may be accompanied by one or more of a time and reminder title in the header of the notification 2904A. The content identification bar 2908 may include a channel number, identifier, graphic, description, and the like associated with live TV content. This configuration of reminder dialog notification allows for a great amount of information to be included in the reminder. As can be appreciated, the size of the first reminder dialog notification 2904A may occupy a substantial portion of the viewing area of the active content area 1808. It should be appreciated, however, that the dialog notification may be justified (bottom, left, right, top, middle, combinations thereof, etc.) to occupy a specific portion of the Intelligent TV 100 active content area 1808. In some embodiments, the first reminder dialog notification 2904A may be presented only at a first time to a user, while subsequent reminders for the same content may utilize another dialog notification as disclosed herein. 

 FIG. 29B depicts a compact reminder dialog notification 2904B configured with a content identification bar 2908, a reminder time bar 2912, and a user interface button 2916. Although shown with a combination of features, the compact reminder dialog notification 2904B may include more or less features than shown. For example, an unobtrusive compact reminder dialog notification may only include the content identification bar 2908 and possibly a reminder time bar 2912 to use a limited amount of space on the Intelligent TV 100 display, especially when compared to the first reminder dialog notification 2904A. As such, the compact notification 2904B may be displayed to the active content area 1808 of the Intelligent TV 100 to appear smaller than the first reminder dialog notification 2904A. This compact reminder dialog notification 2904B may be useful in subsequent reminders or in reminders for content already observed/acknowledged by a user. 

 FIG. 29C depicts a multiple reminder dialog notification 2904C configured with a first content identification bar 2908A, a second content identification bar 2908B, a reminder time bar 2912, and a user interface button 2916. Among other things, the multiple reminder dialog notification 2904C can alert a user of multiple reminders that were previously set. From the multiple reminder dialog notification 2904C, a user may navigate between the various interactive features. For example, a user may at least navigate between the first content identification bar 2908A and the second content identification bar 2908B. Continuing this example, a user may select the first content identification bar 2908A associated with the multiple reminder dialog notification 2904C. In some cases, this selection may tune the Intelligent TV 100 to the signal source associated with the bar 2908. Conversely, the user may select the second content identification bar 2908B associated with the multiple reminder dialog notification 2904C. In this case, this selection may tune the Intelligent TV 100 to the signal source associated with the second bar 2908B. 

 It is anticipated that the multiple reminder dialog notification 2904C may be used in instances where two or more reminders are set for live TV content. In one embodiment, the maximum number of displayed reminders, or content identification bars, may be limited to a specific number. For instance, even if thirty reminders are set for live TV content on the Intelligent TV 100, and all are about to initiate a reminder dialog, only two would be presented via the embodiment above. In another embodiment, however, the number of displayed reminders, or content identification bars may not be so limited. As such, the notification 2904C may increase in size to fit the number of reminders set and configured to alert at the same time. 

 FIG. 29D depicts a scrollable multiple reminder dialog notification 2904D configured with a first content identification bar 2908A, a second content identification bar 2908B, a third content notification bar 2908C, a dialog scroll bar 2920, a reminder time bar 2912, and a user interface button 2916. Among other things, the scrollable multiple reminder dialog notification 2904C can alert a user of multiple reminders that have been previously set. From the multiple reminder dialog notification 2904C, a user may navigate between the various interactive features. For example, a user may at least navigate between the first content identification bar 2908A, the second content identification bar 2908B, the third content identification bar 2908C, and more via the dialog scroll bar 2920. Similar to the previous dialog notifications 2904A-C, a user may select any one of the content identification bars 2908A-C, even those not presently visible without movement of the dialog scroll bar 2920, that are associated with the scrollable multiple reminder dialog notification 2904D. 

 FIG. 30 depicts a grouped content panel presented via an application panel 1812 of the Intelligent TV 100. In particular, FIG. 30 shows content that has been marked as a favorite by a user or Intelligent TV 100. In other words, the content grouped in the Favorites tab 1920D is preferred over ungrouped content by at least one user. As shown, the select-focus associated with the application panel navigation bar 1904 is set to the Favorites tab 1920D. In some cases the selection of the Favorites tab 1920D may be indicated via a select-focus in the form of a highlight, an underline, a specific font style, an action (e.g., movement of the Favorites tab 1920D indicator, brightness adjustment, etc.), combinations thereof, and the like. This select-focus indication may be associated with the Favorites tab 1920D. The application panel 1812 may also include a hotkey legend 1912 similar to other application panels 1812 displayed via the Intelligent TV 100. As previously discussed, the hotkeys provided in the hotkey legend 1912 may be customized to facilitate shortcut navigation and/or special features associated with the Intelligent TV 100 and/or the application panel 1812. For instance, the hotkeys may be context sensitive to a particular application panel 1812 displayed. As shown in FIG. 30, the hotkey legend 1912 may include Remind, Favorite, and other actions associated with one or more hotkeys. The hotkeys may be associated, or mapped, to one or more inputs of a remote control or other input device. 

 In some embodiments, the content in favorites may be displayed as an EPG list. For example, an EPG list may display programs that are currently airing on channels marked as favorite. As such each row of the list may correspond to a favorite channel, and show current program that is airing on that channel at the moment the EPG list is displayed. In the event that the EPG list is too large to display to the application panel 1812, a scroll bar 3020 may be included to allow a user to adjust the visibly displayed content. 

 In other embodiments, the content in favorites may comprise an EPG list that identifies programs currently airing that have been identified as preferred, or favorite. The view of the EPG list can be configured as dynamic and based on time. As time progresses, programs currently listed in the application panel 1812 that end may be removed from the EPG list automatically. Additionally or alternatively, favorite programs that begin can be added to the EPG list automatically. In the event that the EPG list is too large to display to the application panel 1812, a scroll bar 3020 may be included to allow a user to adjust the visibly displayed content. In any case a user may select one of the items in the EPG list to close the live TV application and tune the Intelligent TV 100 to the signal source associated with the selected item. 

 When the Favorites tab 1920D is selected, the application panel 1812 may include content that has been determined as a favorite. This determination of whether content is a favorite may be made by a user. For example, a user may be watching content on the Intelligent TV 100 and provide an input via the remote control or other input device to identify the content as a favorite. In some cases, this input may include marking a show as a favorite by toggling a favorite button or identifier. In some embodiments, the determination of favorite content may be made via the Intelligent TV 100. Among other things, the Intelligent TV 100 may store viewing habits and behavior and mark content as favorites based on the stored habits and behavior. Additionally or alternatively, the presentation of favorite content shown in the application panel 1812 may be ordered via the Intelligent TV 100. The order may be associated with a rank that is determined from stored viewing habits and behavior. For example, if a user watches a specific show more often than others, the specific show may be ordered higher in rank than the others. In the application panel 1812 a high rank may correspond to a high position in the list. Accordingly, the highest ranked show may be placed at the top position on the list displayed to the application panel 1812. 

 Among other things, the application panel 1812 shown in FIG. 30 may include a program preview pane 2308A-N, and a favorite identifier 3004, or toggle button for one or more live TV program, show, or content. The favorite identifier 3004 may indicate that a particular program is included in the favorites list. Additionally or alternatively, the favorite identifier 3004 may be configured as a user-interactive feature. For example, the favorite identifier 3004 may be used to remove a program from the favorites list. Continuing the example, a user may select the favorite identifier 3004 via an input from a remote control or other input device. Once selected, the user may be presented with an option to remove the content from the favorite list. The user may then select the appropriate option to remove or keep the content on the favorite list. The favorites list may be stored in a memory as disclosed herein, and may be accessed at least via the Favorites tab 1920D of the application panel navigation bar 1904. In some embodiments, content identified as favorites may be displayed in the application panel 1812 without at least one of a thumbnail graphic, description, time, and other features. 

 FIGS. 31A-B depict preferred reminder dialog presentations 3100A-B in accordance with embodiments of the present disclosure. Similar to other reminders disclosed herein, a reminder may be set for preferred content. When a program is selected as preferred, or as a favorite, and the selected program is playing (or airing) on more than one channel at a time, then the preferred reminder dialog presentation 3100 may be displayed to the Intelligent TV 100. 

 Referring now to FIG. 31A, a first preferred reminder dialog presentation 3100A is shown in accordance with embodiments of the present disclosure. The presentation 3100A includes a first preferred notification dialog 3104A, a program preview pane 2308, a favorite identifier 3004, a first episode selection bar 3108A, a second episode selection bar 3108B, and a selectable input 2828. FIG. 31B shows a compact version of the dialog presentation 3100B without the program preview pane 2308. In either presentation, a user may be presented with selecting from two episodes of the same program playing on different channels. 

 By way of example, a user may identify a program called "Home Involvement" as a favorite. Moreover, the user may have set a reminder for favorite content. Occasionally, the program "Home Involvement" may be playing on two channels at the exact same time. In this case, when the "Home Involvement" reminder appears, it may present the user with a choice of episode to select from via the first and second episode selection bars 3108A, 3108B. The first and second selection bars 3108A, 3108B may highlight differences between the two episodes, if any, via an identifier or description associated with the selection bar. In some cases an episode name and/or number associated with each selection bar 3108A, 3108B may differentiate the episodes. In other embodiments, a season number and/or description may be included to assist a user in selecting an episode of the program. When a user makes a selection between the first and second episodes the selection may tune the Intelligent TV 100 to the signal source associated with the selection. 

 As can be appreciated, if more than two episodes of the same program are playing on different channels at the exact same time, the reminder notification may be altered to accommodate the additional episode(s). Additionally or alternatively, the Intelligent TV 100 may determine that there are no differences between the episodes and present a reminder dialog notification without providing the choice between the two. In another embodiment, the Intelligent TV 100 may determine that the episodes are identical, but the channels airing the episodes are not. In this embodiment, the Intelligent TV 100 may use stored preferences, user behavior, habits and the like to present or select an option for the user. For example, a program may be airing in high definition (HD) on one of the channels, while the same program may be airing in standard definition (SD) on another channel. In this instance, the Intelligent TV 100 may present the choice to the user, or select the preferred viewing quality (e.g., HD or SD) on behalf of the user. 

 FIG. 32 is a flow diagram depicting a reminder presentation method in accordance with embodiments of the present disclosure. The method 3200 begins at step 3204 and continues when input is received to initiate a reminder presentation (step 3208). In some embodiments, the input may be provided by one or more of, a user, the live TV application, other applications associated with the Intelligent TV 100, and/or one or more components associated with the Intelligent TV 100. For instance, a reminder may have been set, or programmed, for a specific program or show that is scheduled to play on live TV. The reminder may be associated with an initiation condition, including but not limited to, a timer, an input from an EPG, in response to another condition, some other input, or combinations thereof. 

 The method 3200 continues by selecting a reminder presentation based at least partially on the initiation input (step 3212). Selection of the reminder presentation may include determining whether the presentation should include a header, a body, one or more selectable prompts, a user interface button, and/or combinations thereof. Additionally or alternatively, selection of the reminder presentation may include determining content and/or features contained within the presentation. For instance, a reminder presentation may include a title and descriptive information coupled with selectable inputs and even a timeout feature. Among other things, the selectable option may allow a user to change channels to a program associated with the reminder presentation. 

 As part of the reminder presentation, the method 3200 may continue by determining whether the reminder is time informative (step 3216). Various embodiments may utilize one or more time informative feature. For example, where a reminder is determined to be associated with a scheduled program, or time-specific event, the reminder may provide the time until the program, or event, will begin. As another example, a reminder notification may be configured to appear for a limited amount of time. In this case, the reminder notification may provide an amount of time associated with the reminder notification availability, in some representation (e.g., visual, countdown, audible, etc.). In other words, the method 3200 may determine to provide a user with a visual representation of time remaining before a reminder notification disappears from view. In some embodiments, the reminder presentation may provide a visual representation of a time associated with the notification. As can be appreciated, a user may be provided with a countdown timer, a progress bar, combinations thereof, or other time feature associated with the notification. Determining whether or not a dialog is time informative may include referring to a memory having stored preferences, or rules, associated with one or more of TV content, dialog boxes, time informative features, etc. 

 If the reminder presentation is determined to be time informative, the method 3200 continues by including at least one time information feature as part of the reminder notification presentation (step 3220). In one example, a time feature may include a progress bar displayed as part of the notification. The progress bar may represent an amount of time associated with the visual presentation of the notification. For instance, a progress bar may show how long a reminder dialog notification has been presented to the display of an Intelligent TV 100. As such, the progress bar may include a time start point and a time endpoint. In another example, a reverse progress bar may be configured to countdown, and/or display a graphical change, representing a time remaining for the presentation of the reminder notification. The progress bar, reverse progress bar, or other time feature, may relate to live TV content or the presentation of a notification. The reminder notification may incorporate a default selection, or action, that may be automatically selected in response to a passage of time. Among other things, providing a user with a visual representation of time associated with the notification can allow a user to make a selection other than the default selection associated with the notification. In some embodiments, the default action of the notification may cause the notification to disappear from view. 

 The method 3200 continues by presenting the reminder notification via the live TV application and the Intelligent TV 100 (step 3224). Presentation of the reminder may include, but is not limited to, a display justification point (e.g., left-justified, right-justified, center-justified, bottom-justified, top-justified, and combinations thereof), a transparency level, a font type or style, an overall size, a size in relation to the display of the Intelligent TV, an animation, and more. 

 When the reminder is presented to the display of the Intelligent TV 100, a timer may be initiated that defines the amount of time the reminder dialog notification will be presented (step 3228). As can be appreciated, the timer may be a "count-up" timer or a "countdown" timer. The live TV application may be configured to provide an action upon the expiration of the dialog presentation timer. As previously state, one action may cause the reminder notification to disappear from the display of the Intelligent TV 100. 

 Next, the method 3200 receives an input from a user, or the expiration of the timer, to remove the reminder notification presentation (step 3232). A user input may correspond to a selection associated with the reminder notification presentation, a cancellation, a user-interface button, or some other input associated with the Intelligent TV 100. For example, a user may select an option associated with the reminder notification presentation, in which case the reminder notification presentation may disappear. In some embodiments, a user may not enter an input and an automatic selection, or action, may be made by the expiration of the timer. In any event, when the timer has reached the end of its scheduled time the reminder notification presentation may be configured to disappear from display. In an alternative embodiment, the reminder notification presentation may be configured to fade out, move to the application (or other) panel, minimize, or otherwise dismiss from the active content view area 1808 of the Intelligent TV 100. The method ends at step 3236. 

 FIG. 33 is a flow diagram depicting a preferred content reminder presentation method 3300 in accordance with embodiments of the present disclosure. The method 3300 begins at step 3304 and continues when the Intelligent TV 100 receives input to initiate a reminder presentation (step 3308). In some embodiments, the input may be provided by one or more of, a user, the live TV application, other applications associated with the Intelligent TV 100, and/or one or more components associated with the Intelligent TV 100. For instance, a reminder may have been set, or programmed, for a specific program or show that is scheduled to play on live TV. The reminder may be associated with an initiation condition, including but not limited to, a timer, an input from an EPG, in response to another condition, some other input, or combinations thereof. 

 Next, the method 3300 continues by determining whether the reminder is associated with preferred, or favorite, content (step 3312). As previously stated, a user may indicate specific content, such as one or more programs, events, channels, signal sources, combinations thereof, and the like, as preferred over other available content. In some embodiments, a user may mark content as preferred by adding the content to a preferred, or favorites, group. Content may be added to the favorites group by a user input provided via a remote control or other input device. For example, a user may select (or highlight) a program and provide a "favorite" input via a button on a remote control. 

 In some embodiments, the Intelligent TV 100 may determine to add content to a favorites list, or group. For instance, the Intelligent TV 100, via one or more applications, may determine at least partially based on viewing habits and recorded data that a user frequently watches a particular program or channel. Referring to rules and/or preferences, the Intelligent TV 100 may add the frequently watched program or channel to the favorites group. As disclosed herein, the favorites group, and its associated content, may be viewed in an application panel 1812 of the Intelligent TV 100. In some cases, the content comprising the favorites group may be displayed in an EPG, a list, grouped lists, tiles, genres, and the like for viewing by one or more users of the Intelligent TV 100. 

 Determining that a reminder is associated with favorite content may include the Intelligent TV 100 using at least one application (e.g., the live TV application, etc.) to refer to stored favorite data in memory. In one example, the favorite data may be stored in a data table in the memory. Among other things, the data table may include a content identification field and a favorite data field that can map favorites with specific content. In one embodiment, available content including, but not limited to, programs, events, channels, signal sources, genres, groups, and the like, may include a data field relating to favorite marking. For instance, a data structure associated with a program may include at least one binary digit that identifies whether the program is preferred (i.e., favorite) or not preferred. Continuing this example, a "preferred" bit of the program data structure may be marked with a "1" if the program is a favorite or a "0" if the program is not identified as a favorite. It is anticipated that this bit may be toggled via a user providing a favorite input. In any event, the Intelligent TV 100 may at least review the data structure and/or the data table associated with content to determine whether the reminder is associated with favorite content. By way of example, the Intelligent TV 100 may receive input to initiate a reminder presentation with a specific program. The Intelligent TV 100 can then refer to the data structure and/or the data table that is associated with the specific program and determine whether the specific program includes at least one favorite-identifying bit. In the event that a favorite-identifying bit is found, the reminder would be determined to be associated with favorite content. 

 The method 3300 continues by determining whether the reminder applies to duplicate favorite content (step 3316). Duplicate favorite content may correspond to content that is marked as favorite and is playing on at least two different channels, or signal sources, at the same time. In one embodiment, the signal sources may be differentiated by signal quality, signal definition, costs, and the like. As disclosed above, content may be associated with favorites. In some cases, content may play on at least two different channels at the same time. By way of example, a user, or Intelligent TV 100, may identify a program, such as "Home Involvement," as a favorite. Continuing the example, a user may initiate a reminder for the program so that the user is alerted via a reminder notification presentation when the program is next scheduled to play via the live TV application. In this example, the program "Home Involvement" may be playing on two different channels at the same time, or within a threshold of time as disclosed below. As such, the Intelligent TV 100 may determine that program is a favorite playing on two different channels and provide the user with selectable options and/or default selections. The selectable options may include, but are not limited to, allowing the user to select which episode of the program, quality of the program, or channel, to view. 

 In some embodiments, the determination of duplicate favorite content may include comparing a scheduled time that is associated for each favorite content. As such, thresholds may be set for making a positive or negative determination of duplicate favorite content. For instance, where a first program is playing on a first channel at a first time, and a duplicate program is playing on a second channel at a second time, a threshold may be set between the first and second time to make such a duplicate favorite content determination. In this example, a threshold may be set for 15 minutes, where any duplicate favorite content is determined for duplicate favorite content playing on at least two different channels within the threshold (e.g., equal to or less than the 15 minute threshold set). 

 If no duplicate favorite content is found, the method may continue by displaying a reminder presentation dialog (step 3336). The reminder presentation dialog displayed to the Intelligent TV 100 may resemble any one or more of the dialogs, notifications, reminder notifications, and other dialog presentations disclosed herein. Upon presenting the reminder presentation dialog, the method 3300 continues at step 3324. 

 In the event that duplicate favorite content is determined to apply to the reminder, the method 3300 continues by presenting the duplicate content for user review and/or selection (step 3320). The display of duplicate favorite content to an Intelligent TV may resemble the display of a multiple reminder dialog notification as disclosed along with FIGS. 29C-D. Among other things, the presentation may be displayed to an active content area 1808 of an Intelligent TV 100. Additionally or alternatively, the presentation may include identification bars associated with the duplicate content. For example, a first content identification bar may be associated with a first episode of a favorite program, while a second content identification bar may be associated with a second episode of the favorite program. A user may make a selection from at least these two options via an input provided at a remote control or other input device. 

 The method may continue by determining whether any user input is received by the Intelligent TV 100 (step 3324). If no user input is received by the Intelligent TV 100, the method 3300 may continue by timing out or making a default selection based at least partially on stored rules and/or preferences (step 3340). In one embodiment, the presented reminder may disappear after a preset amount of time. In another embodiment, the Intelligent TV 100 may make a default selection from at least one of the available selections provided by the reminder presentation dialog. In any event, the method 3300 ends at step 3332. 

 In some embodiments, the method 3300 may determine that user input is received at step 3324, in which case the method 3300 may continue by performing at least one function associated with the received input (step 3328). User input may include, but is not limited to, a selection input that can be configured to select from one or more options provided by the reminder presentation dialog, a cancellation input that may be configured to cause the reminder notification presentation dialog to disappear, an ignore input configured to delay a reminder for another time, navigational input configured to navigate to another signal source or selection, and more. Once the corresponding function is performed via the Intelligent TV 100, the method 3300 ends at step 3332. 

 FIG. 34 is a flow diagram depicting an input-based user tracking method 3400 in accordance with embodiments of the present disclosure. The method 3400 begins at step 3404 and continues by detecting a channel, input, or other signal source change (step 3408). In some embodiments, a user may change channels of the Intelligent TV 100 via a remote control or other input device. The user inputs to change a signal source may include, but are not limited to, active selections provided directly by a user, responses to one or more notifications, default selections based on stored preferences and/or rules, and the like. 

 Upon detecting a change in the signal source of the Intelligent TV 100, the method 3400 continues by sending a notification to the live TV application of the Intelligent TV 100 (step 3412). The notification may be sent by one or more managers associated with DTV, analog television (ATV), input, and other sources associated with the Intelligent TV 100. In some embodiments, the one or more managers may be configured to identify a user input that changes a signal source of the Intelligent TV 100. One example of this identification may be provided by the one or more managers "listening" for a signal source change. In other words, a listener for the one or more managers may be configured to register with a source to listen for a particular event, which in this case may be a change of signal source provided by a user. The listeners may be set automatically via the live TV application. Additionally or alternatively, the listeners disclosed herein may behave in a similar manner to Java.RTM.-style program event listeners that may register to be notified of one or more events. As can be appreciated, the listeners disclosed herein may be configured to listen for events associated with one or more event source objects. 

 The live TV application may collect the notifications received from the one or more managers and store data relating to the change notifications in a memory (step 3416). Such data may include, but is not limited to, media consumption, channel viewing time, signal source tuning time, event viewing time, content viewing time, user identification, time of notification, content playing prior to change, new source content, and more. In some embodiments, the data may be stored in a memory location associated with a particular user or group of users. Additionally or alternatively, the data may be stored according to signal source change time. In one embodiment, the stored data may be associated with at least one time stamp. The time stamp may be useful in comparing data stored at various times that relates to user signal source changes over time. 

 Next, the method 3400 continues by analyzing the stored data for user behavior patterns (step 3420). Among other things, the live TV application may refer to the stored data to determine any commonalities between stored data at different times. In other words, the live TV application may review whether any commonalities exist between the user's signal source changes that are made over time. For example, the stored data from a first time may reflect that a user changed signal sources at 9:01 PM on a Tuesday, and the stored data from a second time may reflect that a user changed signal sources at 9:03 PM on the following Tuesday. The live TV application may determine that these signal source changes having occurred within two minutes but a week apart may correspond to a user behavior. In some embodiments, more data points may be obtained before a behavior is determined. As another example, a user may watch a first program every morning for a given period of time and then change signal sources to view another program for another given period of time. This behavior may be analyzed and used by the Intelligent TV 100 to configure prompts, reminders, notifications, and even anticipated signal source changes for a user. In one example, the Intelligent TV 100 may automatically change a signal source for a user based on the analyzed tracked behavior of the user. The Intelligent TV 100 may refer to rules in determining whether to automatically change a signal source. Among other things, these rules may include, but are in no way limited to, identifying a user, referring to user preferences, referring to at least one EPG, referring to a clock or timer, and the like. 

 It is anticipated that the stored data may be sent across a network to at least one other device associated with the Intelligent TV 100 for user behavior analysis. Additionally or alternatively, analyzed data may be sent across a network to at least one other device for use in tracking user behavior. For instance, the stored data or analyzed data may be sent to a multiple-system operator (MSO) in tracking user behavior. It is anticipated that based on the tracked user behavior, an MSO may alter its programming, offerings, presentation, or even interact with a user. In one embodiment, an MSO may interact with a user by querying why the user made the changes to the signal source or if there is anything the MSO could do to make viewing content more enjoyable. The method 3400 ends at step 3424. 

 Referring to FIG. 35, a block diagram of the software and/or firmware of the Intelligent TV 100 is shown in accordance with embodiments of the present disclosure. Among other things, embodiments of the present disclosure anticipate using the live TV application 3504 to present views 3516 and dialogs 3520 to a display of the Intelligent TV 100. Views 3516 may include the presentation of information via one or more of a global panel 1804, an active content area 1808, an application panel 1812, combinations thereof and the like. Examples of views 3516 can include, but are not limited to, full screen EPGs, live TV header bars, on-screen channel changer, smart surfing, etc. Dialogs 3520 may include one or more of reminders, notifications, option dialogs, EPG preview windows, EPGs, and other presented information as disclosed herein. In one embodiment, the dialogs 3520 may provide one or more features to mark (e.g., add/remove favorite tagging for a channel and/or program, add/remove reminder tagging for a program, etc.) and select content (e.g., episodes, channels, etc.). Dialogs are disclosed in more detail above. Additionally or alternatively, the dialogs may be substantially similar, or equivalent, to the dialog notifications disclosed above. 

 In some embodiments, the live TV application 3504 may be configured to communicate with a system UI application 3508. The system UI application 3508 may provide a framework, upon which, one or more applications are built and subsequently accessed via the live TV application. In one embodiment, the system UI application 3508 may provide specific interface rules used by the live TV application 3504 in the display of content to the Intelligent TV 100. For instance, areas, regions, panels, windows, and other informational content may be set by the interface rules and the system UI application 3508. In one example, the system UI application 3508 may automatically format one or more applications for use, or display, by the live TV application 3504. Among other things, this formatting may include arranging a presentation of content that makes up the one or more applications. 

 The live TV application 3504 may communicate with the operating system framework 3512 and one or more of its components. In some embodiments, the operating system framework may include an ATV manager 3524, a DTV manager 3528, a source manager 3532, an EPG provider 3536, and a thumbnail cache manager 3540 to name a few. One or more of the ATV manager 3524, the DTV manager 3528, and the source manager 3532 may be configured to provide notifications, dialogs, and the like, that are disclosed in conjunction with the first time setup method 1500 and the tracking method 3400 previously disclosed. In one embodiment, the EPG provider 3536 may be substantially similar, or equivalent, to the EPG subservice 624, database 636, and content providers 616 disclosed above in conjunction with FIG. 6. Similarly, it is an aspect of the present disclosure that the thumbnail cache manager 3540 may be substantially similar, or equivalent, to the thumbnail cache manager 660 previously described in conjunction with FIG. 6. 

 As provided herein, the live TV application 3504 may be configured to support a user experience for one or more of changing channels, viewing channel information, viewing program information, setting up channel sets, and setting and/or clearing reminders and favorites. The live TV application 3504 may be displayed via the Intelligent TV 100 on top of any live feed. For example, a user may utilize the live TV application 3504 to change a currently displayed ATV and/or DTV channel that is supplied on a live feed. In another example, the live TV application 3504 may be used to retrieve thumbnails from thumbnail cache manager 3540. In yet another example, the live TV application 3504 may query the EPG provider 3536 for EPG listing data to be displayed via the Intelligent TV 100. As can be appreciated, the EPG listing may use thumbnails associated with live TV content that are retrieved via the live TV application 3504. Additionally or alternatively, the live TV application 3504 may receive broadcast intents to request a change of channel. 

 FIG. 36 shows a flow diagram of a live TV presentation method 3600 in accordance with embodiments of the present disclosure. The method 3600 begins at step 3604 and proceeds by running a live TV application via the Intelligent TV 100 (step 3608). While the live TV application is running (e.g., via a processor associated with the Intelligent TV 100), the Intelligent TV 100 may simultaneously present live TV broadcast content (step 3612). In one embodiment, the live TV application 3504 may be configured to run on top of live TV content. For instance, the Intelligent TV 100 may be displaying live TV content via a display of the Intelligent TV 100. The live TV content may be displayed, or presented, to a first portion of the Intelligent TV 100. In some embodiments, the first portion of the Intelligent TV 100 may be equivalent to an area of the display of the Intelligent TV 100 that is greater than 50% of the total area of the display. 

 Next, the method 3600 continues by receiving an input that initiates a feature of the live TV application 3504 (step 3616). This live TV application input may be provided by at least one of, a user, an input device, automatically in response to a condition, combinations thereof and the like. In some cases, the input may be provided via a user operating the input device associated with the Intelligent TV 100. A typical input device associated with the Intelligent TV 100 may include a remote control. The remote control may be a dedicated device, a tablet, a smart phone, or other device configured to run a remote control application that is capable of communicating with the Intelligent TV 100. 

 A live TV application feature may then be determined based at least partially on the received input (step 3620). In some embodiments, the live TV application feature may be determined based on the input and rules stored in a memory associated with the Intelligent TV 100. Once the live TV application feature is determined, the feature may be presented to the display of the Intelligent TV 100 (step 3624). In one embodiment, the presentation of the live TV application feature may include displaying, or presenting, the feature to a second portion of the display of the Intelligent TV 100. The second portion of the display may be configured to overlap at least a portion of the first portion of the display. Additionally or alternatively, the second portion may include at least a partial transparency or translucency. This partial transparency may allow content from the first portion to be visible through the second portion. For example, while live TV content continues to display to the Intelligent TV, the live TV application may run simultaneously with the displayed live TV content. Among other things, the simultaneous playing of live TV content and live TV application functionality can allow a user access to interactive live TV application functions without interrupting live TV content displayed by the Intelligent TV 100. In some cases the live TV application feature and any associated content may include, but is not limited to, a presentation that is at least partially transparent, at least partially opaque, and combinations thereof. The method 3600 ends at step 3628. 

 The exemplary systems and methods of this disclosure have been described in relation to televisions and associated devices. However, to avoid unnecessarily obscuring the present disclosure, the preceding description omits a number of known structures and devices. This omission is not to be construed as a limitation of the scopes of the claims. Specific details are set forth to provide an understanding of the present disclosure. It should however be appreciated that the present disclosure may be practiced in a variety of ways beyond the specific detail set forth herein. 

 Furthermore, while the exemplary aspects, embodiments, and/or configurations illustrated herein show the various components of the system collocated, certain components of the system can be located remotely, at distant portions of a distributed network, such as a LAN and/or the Internet, or within a dedicated system. Thus, it should be appreciated, that the components of the system can be combined in to one or more devices, such as a television, or collocated on a particular node of a distributed network, such as an analog and/or digital telecommunications network, a packet-switch network, or a circuit-switched network. It will be appreciated from the preceding description, and for reasons of computational efficiency, that the components of the system can be arranged at any location within a distributed network of components without affecting the operation of the system. For example, the various components can be located in a switch such as a PBX and media server, gateway, in one or more communications devices, at one or more users' premises, or some combination thereof. Similarly, one or more functional portions of the system could be distributed between a telecommunications device(s) and an associated computing device. 

 Furthermore, it should be appreciated that the various links connecting the elements can be wired or wireless links, or any combination thereof, or any other known or later developed element(s) that is capable of supplying and/or communicating data to and from the connected elements. These wired or wireless links can also be secure links and may be capable of communicating encrypted information. Transmission media used as links, for example, can be any suitable carrier for electrical signals, including coaxial cables, copper wire and fiber optics, and may take the form of acoustic or light waves, such as those generated during radio-wave and infra-red data communications. 

 Also, while the flowcharts have been discussed and illustrated in relation to a particular sequence of events, it should be appreciated that changes, additions, and omissions to this sequence can occur without materially affecting the operation of the disclosed embodiments, configuration, and aspects. 

 A number of variations and modifications of the disclosure can be used. It would be possible to provide for some features of the disclosure without providing others. 

 In yet another embodiment, the systems and methods of this disclosure can be implemented in conjunction with a special purpose computer, a programmed microprocessor or microcontroller and peripheral integrated circuit element(s), an ASIC or other integrated circuit, a digital signal processor, a hard-wired electronic or logic circuit such as discrete element circuit, a programmable logic device or gate array such as PLD, PLA, FPGA, PAL, special purpose computer, any comparable means, or the like. In general, any device(s) or means capable of implementing the methodology illustrated herein can be used to implement the various aspects of this disclosure. Exemplary hardware that can be used for the disclosed embodiments, configurations and aspects includes computers, handheld devices, telephones (e.g., cellular, Internet enabled, digital, analog, hybrids, and others), and other hardware known in the art. Some of these devices include processors (e.g., a single or multiple microprocessors), memory, nonvolatile storage, input devices, and output devices. Furthermore, alternative software implementations including, but not limited to, distributed processing or component/object distributed processing, parallel processing, or virtual machine processing can also be constructed to implement the methods described herein. 

 In yet another embodiment, the disclosed methods may be readily implemented in conjunction with software using object or object-oriented software development environments that provide portable source code that can be used on a variety of computer or workstation platforms. Alternatively, the disclosed system may be implemented partially or fully in hardware using standard logic circuits or VLSI design. Whether software or hardware is used to implement the systems in accordance with this disclosure is dependent on the speed and/or efficiency requirements of the system, the particular function, and the particular software or hardware systems or microprocessor or microcomputer systems being utilized. 

 In yet another embodiment, the disclosed methods may be partially implemented in software that can be stored on a storage medium, executed on programmed general-purpose computer with the cooperation of a controller and memory, a special purpose computer, a microprocessor, or the like. In these instances, the systems and methods of this disclosure can be implemented as program embedded on personal computer such as an applet, JAVA.RTM. or CGI script, as a resource residing on a server or computer workstation, as a routine embedded in a dedicated measurement system, system component, or the like. The system can also be implemented by physically incorporating the system and/or method into a software and/or hardware system. 

 Although the present disclosure describes components and functions implemented in the aspects, embodiments, and/or configurations with reference to particular standards and protocols, the aspects, embodiments, and/or configurations are not limited to such standards and protocols. Other similar standards and protocols not mentioned herein are in existence and are considered to be included in the present disclosure. Moreover, the standards and protocols mentioned herein and other similar standards and protocols not mentioned herein are periodically superseded by faster or more effective equivalents having essentially the same functions. Such replacement standards and protocols having the same functions are considered equivalents included in the present disclosure. 

 The present disclosure, in various aspects, embodiments, and/or configurations, includes components, methods, processes, systems and/or apparatus substantially as depicted and described herein, including various aspects, embodiments, configurations embodiments, subcombinations, and/or subsets thereof. Those of skill in the art will understand how to make and use the disclosed aspects, embodiments, and/or configurations after understanding the present disclosure. The present disclosure, in various aspects, embodiments, and/or configurations, includes providing devices and processes in the absence of items not depicted and/or described herein or in various aspects, embodiments, and/or configurations hereof, including in the absence of such items as may have been used in previous devices or processes, e.g., for improving performance, achieving ease and\or reducing cost of implementation. 

 The foregoing discussion has been presented for purposes of illustration and description. The foregoing is not intended to limit the disclosure to the form or forms disclosed herein. In the foregoing Detailed Description for example, various features of the disclosure are grouped together in one or more aspects, embodiments, and/or configurations for the purpose of streamlining the disclosure. The features of the aspects, embodiments, and/or configurations of the disclosure may be combined in alternate aspects, embodiments, and/or configurations other than those discussed above. This method of disclosure is not to be interpreted as reflecting an intention that the claims require more features than are expressly recited in each claim. Rather, as the following claims reflect, inventive aspects lie in less than all features of a single foregoing disclosed aspect, embodiment, and/or configuration. Thus, the following claims are hereby incorporated into this Detailed Description, with each claim standing on its own as a separate preferred embodiment of the disclosure. 

 Moreover, though the description has included description of one or more aspects, embodiments, and/or configurations and certain variations and modifications, other variations, combinations, and modifications are within the scope of the disclosure, e.g., as may be within the skill and knowledge of those in the art, after understanding the present disclosure. It is intended to obtain rights which include alternative aspects, embodiments, and/or configurations to the extent permitted, including alternate, interchangeable and/or equivalent structures, functions, ranges or steps to those claimed, whether or not such alternate, interchangeable and/or equivalent structures, functions, ranges or steps are disclosed herein, and without intending to publicly dedicate any patentable subject matter. 


* * * * *

 

Previous Patent US 9,055,254 | Next Patent US 9,055,256 
 



File A Patent Application
 


Vai su Google più velocemente. Aggiorna il tuo motore di ricerca predefinito.OKNo, grazie

×




























Accedi
























Gli utenti che utilizzano screen reader possono fare clic su questo link per attivare la modalità di accessibilità. Questa modalità presenta le stesse funzioni principali, ma risulta maggiormente compatibile con il reader.





Vai alla home page di Google Libri 




 

 
 

 
 



 Brevetti



Richiesta

Concessione

Francese

Inglese



Trova arte nota

Discussioni su questa applicazione




 

Brevetto EP1410364A2 - Vehicle tracking, communication and fleet management system







Numero di pubblicazione EP1410364 A2 
Tipo di pubblicazione Richiesta 
Numero domanda EP20000993539 
numero PCT PCT/US2000/033272 
Data di pubblicazione 21 apr 2004 
Data di registrazione 18 dic 2000 
Data di priorità 19 dic 1999 
Pubblicato anche come DE60036650D1, Altri 16 » 
  
Inventori Robert F. Allen, Altri 9 » 
Candidato Trimble Navigation, Ltd 
Esporta citazione BiBTeX, EndNote, RefMan 
Citazioni di brevetti (3), Citazioni diverse da brevetti (1), Classificazioni (38), Eventi legali (45)  
 

Link esterni:  Espacenet,  Registro dei brevetti europei 


Vehicle tracking, communication and fleet management system 
EP 1410364 A2 (testo da WO2001046710A2) 


 Estratto    disponibile in Inglese



 Descrizione  disponibile in Inglese


 Rivendicazioni    disponibile in Inglese



Citazioni di brevetti


Brevetto citato

Data di registrazione

Data di pubblicazione

Candidato

Titolo


US5068654 * 3 lug 1989 26 nov 1991 Hazard Detection Systems Collision avoidance system 
US5826195 * 5 ago 1996 20 ott 1998 Highwaymaster Communications, Inc. Data messaging in a communications network 
US5983161 * 24 set 1996 9 nov 1999 Lemelson; Jerome H. GPS vehicle collision avoidance warning and control system and method 

* Citato da un esaminatore


Citazioni diverse da brevetti


Riferimento


1  * See also references of WO0146710A2 

* Citato da un esaminatore


Classificazioni







Classificazione internazionale G08G1/123, H04L12/56, H04L12/28, G07C5/00, H04W72/04, H04W84/00, H04W16/14, H04W28/22, H04W56/00, H04W8/24, H04W74/04, H04W64/00, B60P3/03 
Classificazione cooperativa B28C7/028, B28C9/00, B28C5/422, H04W64/00, H04W72/10, H04W74/04, B60P3/03, G08G1/20, H04W28/22, H04W56/0085, B28C7/02, H04W16/14, H04W84/00, H04W8/245, G07C5/008, G01M17/00 
Classificazione Europea G08G1/20, G01M17/00, B60P3/03, G07C5/00T, B28C7/02D, B28C7/02, B28C9/00, B28C5/42A1C, H04W56/00M4B2D 



Eventi legali


Data

Codice

Evento

Descrizione


27 feb 2015 PGFP Postgrant: annual fees paid to national office 
Ref country code: FR

Payment date: 20141208

Year of fee payment: 15 

30 gen 2015 PGFP Postgrant: annual fees paid to national office 
Ref country code: DE

Payment date: 20141209

Year of fee payment: 15

Ref country code: GB

Payment date: 20141217

Year of fee payment: 15 

29 mar 2013 PGFP Postgrant: annual fees paid to national office 
Ref country code: FR

Payment date: 20130107

Year of fee payment: 13 

28 feb 2013 PGFP Postgrant: annual fees paid to national office 
Ref country code: GB

Payment date: 20121212

Year of fee payment: 13 

31 gen 2013 PGFP Postgrant: annual fees paid to national office 
Ref country code: DE

Payment date: 20121213

Year of fee payment: 13 

31 gen 2012 PGFP Postgrant: annual fees paid to national office 
Ref country code: FR

Payment date: 20111219

Year of fee payment: 12 

31 mag 2011 PGFP Postgrant: annual fees paid to national office 
Ref country code: DE

Payment date: 20101215

Year of fee payment: 11 

31 mar 2011 PGFP Postgrant: annual fees paid to national office 
Ref country code: GB

Payment date: 20101215

Year of fee payment: 11 

28 feb 2011 PG25 Lapsed in a contracting state announced via postgrant inform. from nat. office to epo 
Ref country code: IT

Free format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEES

Effective date: 20071231 

31 gen 2011 PGFP Postgrant: annual fees paid to national office 
Ref country code: FR

Payment date: 20101224

Year of fee payment: 11 

30 giu 2010 PGFP Postgrant: annual fees paid to national office 
Ref country code: DE

Payment date: 20091222

Year of fee payment: 10 

30 apr 2010 PGFP Postgrant: annual fees paid to national office 
Ref country code: FR

Payment date: 20091221

Year of fee payment: 10

Ref country code: GB

Payment date: 20091216

Year of fee payment: 10 

30 ott 2009 PGFP Postgrant: annual fees paid to national office 
Ref country code: FR

Payment date: 20081217

Year of fee payment: 09 

30 set 2009 PG25 Lapsed in a contracting state announced via postgrant inform. from nat. office to epo 
Ref country code: TR

Free format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMIT

Effective date: 20071003 

31 ago 2009 PG25 Lapsed in a contracting state announced via postgrant inform. from nat. office to epo 
Ref country code: LU

Free format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEES

Effective date: 20071218 

31 lug 2009 PG25 Lapsed in a contracting state announced via postgrant inform. from nat. office to epo 
Ref country code: CY

Free format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMIT

Effective date: 20071003 

30 giu 2009 PGFP Postgrant: annual fees paid to national office 
Ref country code: GB

Payment date: 20081229

Year of fee payment: 09 

29 mag 2009 PGFP Postgrant: annual fees paid to national office 
Ref country code: DE

Payment date: 20090202

Year of fee payment: 09 

31 mar 2009 PG25 Lapsed in a contracting state announced via postgrant inform. from nat. office to epo 
Ref country code: FI

Free format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMIT

Effective date: 20071003 

27 feb 2009 PG25 Lapsed in a contracting state announced via postgrant inform. from nat. office to epo 
Ref country code: FI

Free format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMIT

Effective date: 20071003

Ref country code: GR

Free format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMIT

Effective date: 20080104 

30 gen 2009 PG25 Lapsed in a contracting state announced via postgrant inform. from nat. office to epo 
Ref country code: GR

Free format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMIT

Effective date: 20080104 

31 ott 2008 PG25 Lapsed in a contracting state announced via postgrant inform. from nat. office to epo 
Ref country code: IE

Free format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEES

Effective date: 20071218 

30 set 2008 PG25 Lapsed in a contracting state announced via postgrant inform. from nat. office to epo 
Ref country code: BE

Free format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMIT

Effective date: 20071003 

10 set 2008 26N No opposition filed 
Effective date: 20080704 

29 ago 2008 PG25 Lapsed in a contracting state announced via postgrant inform. from nat. office to epo 
Ref country code: BE

Free format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMIT

Effective date: 20071003 

31 lug 2008 PGFP Postgrant: annual fees paid to national office 
Ref country code: FR

Payment date: 20071217

Year of fee payment: 08 

31 lug 2008 PG25 Lapsed in a contracting state announced via postgrant inform. from nat. office to epo 
Ref country code: DK

Free format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMIT

Effective date: 20071003

Ref country code: MC

Free format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEES

Effective date: 20071231 

4 lug 2008 ET Fr: translation filed  
30 giu 2008 PG25 Lapsed in a contracting state announced via postgrant inform. from nat. office to epo 
Ref country code: AT

Free format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMIT

Effective date: 20071003 

30 mag 2008 PG25 Lapsed in a contracting state announced via postgrant inform. from nat. office to epo 
Ref country code: CH

Free format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMIT

Effective date: 20071003

Ref country code: ES

Free format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMIT

Effective date: 20080114

Ref country code: LI

Free format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMIT

Effective date: 20071003

Ref country code: NL

Free format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMIT

Effective date: 20071003

Ref country code: PT

Free format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMIT

Effective date: 20080303

Ref country code: SE

Free format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMIT

Effective date: 20080103 

30 mag 2008 PGFP Postgrant: annual fees paid to national office 
Ref country code: DE

Payment date: 20080131

Year of fee payment: 08 

30 apr 2008 PG25 Lapsed in a contracting state announced via postgrant inform. from nat. office to epo 
Ref country code: CH

Free format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMIT

Effective date: 20071003

Ref country code: ES

Free format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMIT

Effective date: 20080114

Ref country code: LI

Free format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMIT

Effective date: 20071003

Ref country code: NL

Free format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMIT

Effective date: 20071003

Ref country code: SE

Free format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMIT

Effective date: 20080103 

30 apr 2008 PGFP Postgrant: annual fees paid to national office 
Ref country code: GB

Payment date: 20071227

Year of fee payment: 08 

15 apr 2008 REG Reference to a national code 
Ref country code: CH

Ref legal event code: PL 

1 apr 2008 NLV1 Nl: lapsed or annulled due to failure to fulfill the requirements of art. 29p and 29m of the patents act; no legal effect from  
15 nov 2007 REF Corresponds to: 
Ref document number: 60036650

Country of ref document: DE

Date of ref document: 20071115

Kind code of ref document: P 

14 nov 2007 REG Reference to a national code 
Ref country code: IE

Ref legal event code: FG4D 

30 ott 2007 REG Reference to a national code 
Ref country code: CH

Ref legal event code: EP 

3 ott 2007 AK Designated contracting states: 
Kind code of ref document: B1

Designated state(s): AT BE CH CY DE DK ES FI FR GB GR IE IT LI LU MC NL PT SE TR 

3 ott 2007 REG Reference to a national code 
Ref country code: GB

Ref legal event code: FG4D 

2 nov 2006 17Q First examination report 
Effective date: 20060720 

23 ago 2006 17Q First examination report 
Effective date: 20060720 

21 apr 2004 AK Designated contracting states: 
Kind code of ref document: A2

Designated state(s): AT BE CH CY DE DK ES FI FR GB GR IE IT LI LU MC NL PT SE TR 

21 apr 2004 A4 Supplementary search report 
Effective date: 20040303 

21 apr 2004 17P Request for examination filed 
Effective date: 20030317 



Vai su Google più velocemente. Aggiorna il tuo motore di ricerca predefinito.OKNo, grazie

×




























Accedi
























Gli utenti che utilizzano screen reader possono fare clic su questo link per attivare la modalità di accessibilità. Questa modalità presenta le stesse funzioni principali, ma risulta maggiormente compatibile con il reader.





Vai alla home page di Google Libri 




 

 
 

 
 



 Brevetti



Richiesta

Concessione

Francese

Inglese



Trova arte nota

Discussioni su questa applicazione




 

Brevetto EP1410364A2 - Vehicle tracking, communication and fleet management system







Numero di pubblicazione EP1410364 A2 
Tipo di pubblicazione Richiesta 
Numero domanda EP20000993539 
numero PCT PCT/US2000/033272 
Data di pubblicazione 21 apr 2004 
Data di registrazione 18 dic 2000 
Data di priorità 19 dic 1999 
Pubblicato anche come DE60036650D1, Altri 16 » 
  
Inventori Robert F. Allen, Altri 9 » 
Candidato Trimble Navigation, Ltd 
Esporta citazione BiBTeX, EndNote, RefMan 
Citazioni di brevetti (3), Citazioni diverse da brevetti (1), Classificazioni (38), Eventi legali (45)  
 

Link esterni:  Espacenet,  Registro dei brevetti europei 


Vehicle tracking, communication and fleet management system 
EP 1410364 A2 (testo da WO2001046710A2) 


 Estratto  


A vehicle fleet management information system (10) for identification of location and direction of movement of each vehicle in the fleet in real-time and automatic communication directly with management offices to report its location and heading, and status of predetermined events in which the vehicle may be engaged. Each fleet vehicle is assigned a unique time slot to transmit its reporting information over a communications network (10) without substantially interfering with transmissions from other vehicles in their own respective time slots.
 

 Rivendicazioni  (il testo OCR potrebbe contenere errori)



What is claimed is:

1. A vehicle fleet management information system for fleet asset management by enabling identification of location and direction of movement, if any, of each vehicle in said fleet in real-time and to automatically communicate directly therewith for reporting of vehicle location, direction and status of predetermined events in which the vehicle may become engaged, said system comprising: apparatus for broadcasting information to vehicles in the fleet over a communications network in which each vehicle is a participant, with precise time synchronization ofthe broadcast information according to timing employed in a navigation system for said fleet relative to a stable reference point, apparatus in each vehicle for detecting predetermined events of interest and reporting i foπriation concerning vehicle location and said detected events to a fleet management office over said communications network, and said broadcast apparatus including apparatus for assigning each vehicle in the fleet a unique time slot to transmit its reporting information without substantially interfering with transmissions from other vehicles in their own respective time slots.

2. The fleet management information system of claim 1, wherein said broadcast apparatus includes means for broadcasting via FM radio subcarrier.

3. The fleet management information system of claim 1, wherein said stable navigation reference for position determination is a satellite Global Positioning System (GPS).

4. The fleet management information system of claim 1, wherein at least some of said owners have low update rate requirements, and including means for polling vehicles associated with low update rate owner requests for information, without need for entry ofthe polled vehicle reporting transmissions into specific predetermined time slots of the network. 

5. The fleet management information system of claim 4, wherein said low update rate requests for owners providing emergency response services include means for varying their respective vehicle position update rates in times of emergency.

6. The fleet management information system of claim 1, including a network distribution center including means for providing space diversity processing of said received vehicle data packets for recovery of possibly corrupted data.

7. The fleet management information system of claim 1, including means for dynamically allocating slots to accommodate update rates of information according to different periodic reporting intervals by different vehicles in the network.

8. The fleet management information system of claim 1, including means for dynamically allocating slots to allow higher priority data packets to be transmitted to or from vehicles before lower priority packets that were queued first.

9. The fleet management information system of claim 8, including means for increasing the priority of delayed lower priority packets according to a predetermined maximum time of delay.

10. The fleet management information system of claim 1, including means for providing auxiliary reporting slots for vehicles to accommodate need for prompt reporting of important information independent of slower periodic reporting intervals.

11. The fleet management information system of claim 1, including means for inferring the identity of a reporting vehicle to accommodate need for prompt reporting of important information independent of slower periodic reporting intervals.

12. The fleet management information system of claim 1, wherein said communications network is a time division multiple access (TDMA) wireless network. 

13. The fleet management information system of claim 12, wherein said broadcast apparatus includes means for broadcasting via FM radio subcarrier, said stable navigation reference for position determination is a satellite Global Positioning System (GPS), and said FM radio subcarrier is used to broadcast synchronization data to all TDMA network participants independent of separate delivery of time information from said GPS navigation reference.

14. A management information system for a multiplicity of movable, information communicating assets whether stationary or undergoing movement, to identify the location of each asset in real-time and to communicate therewith, said system comprising: apparatus for transmitting information to each of said assets via a communications network in which each of said assets is a participant, apparatus for receiving information transmitted by each of said assets via said communications network, apparatus for detecting the location of each asset relative to an arbitrary stable reference point in a navigation system, apparatus for precise time synchronization of information transmitted to each of said assets with timing information derived from said navigation system, and apparatus for assigning each of said assets a unique time slot in which to transmit information to said receiving apparatus over said communications network without substantially interfering with information transmissions by others of said assets in their respective time slots.

15. A time division multiple access (TDMA) wireless network for real time reporting of fleet vehicle locations and other information in data packets in respective assigned time slots to a central data processing location on a UHF band, with a minimum of gaps between reporting transmissions, said network comprising means for precise time synchronization of all elements of said TDMA wireless network, including wireless phase lock loop (PLL) timing control loop means for distributing a single, remote global positioning satellite GPS based time reference throughout said network.

16. The TDMA wireless network of claim 15, including FM subcarrier broadcast means having timing data referenced to a GPS based time source for broadcast to the fleet vehicles.

17. The TDMA wireless network of claim 16, including means for providing navigation data for the fleet vehicles by other than GPS.

18. The TDMA wireless network of claim 16, including means on each of said fleet vehicles for receiving data requests and messages from said central station and other information to synchronize said network elements without a GPS receiver.

19. The TDMA wireless network of claim 16, wherein said PLL timing control loop means operates as an algorithm for synchronization ofthe different elements ofthe network to a synchronization pattern, using said algorithm to eliminate variabihty in synchronization.

20. The TDMA wireless network of claim 19, including means for processing difference in time from said GPS time reference and received synchronization data on said FM subcarrier using said PLL algorithm to generate a timing correction.

21. A fleet management system for tracking the locations and paths of vehicles at rest and in transit for management of dispatch and operation of said vehicles, comprising: a radio frequency network, a plurality of geographically disparate network hubs for communication with fleet management offices and said vehicles over said network, a tracking computer on each of said vehicles for developing and transmitting navigation and status messages to at least one of said network hubs for communication to a fleet management office responsible for the respective transmitting vehicle, apparatus for establishing a protocol for entry by said tracking computers into the network in assigned time slots for periodic transmission of messages by the respective tracking computers, and apparatus for providing space diversity ofthe messages received by said network hubs from said tracking computers to avoid corruption of messages received from a single tracking computer at more than one of said network hubs.

22. The fleet management system of claim 21, wherein said network is a time division multiple access (TDMA) network.

23. The fleet management system of claim 21, wherein said protocol estabhshing apparatus provides management of different periodic transmission intervals by different vehicles in the network by dynamically allocating said slots for various update rates.

24. The fleet management system of claim 21, wherein said protocol estabhshing apparatus provides auxiliary reporting slots to allow prompt reporting of important data by the respective tracking computers independent of slower said periodic transmission intervals.

25. The fleet management system of claim 21, including apparatus for supporting both guaranteed and non-guaranteed delivery of message data.

26. The fleet management system of claim 21, wherein said network includes a dual band full-duplex interface with TDMA on one-half of said interface and broadcast on the other half of said interface.

27. The fleet management system of claim 21, wherein said assigned slots are unique to respective ones of said tracking computers, whereby to πiinimize bandwidth usage in said network by enabling identity ofthe vehicle whose tracking computer is transmitting according to the time slot in which the transmission is received.

28. A fleet management system for tracking the locations and paths of vehicles at rest and in transit for management of dispatch and operation of said vehicles, comprising: a wireless network, apparatus for modulating broadcasts transmitted on said network with message data including a synchronization pattern, a plurality of geographically disparate network hubs for communication with fleet management offices and said vehicles over said network, a tracking computer on each of said vehicles for developing and tr-msrnitting navigation and status messages to at least one of said network hubs for commumcation to a fleet management office responsible for the respective transmitting vehicle, and apparatus for synchronizing the timing of said tracking computers with each other and with said network hubs by ahgning respective internal clocks thereof to said synchronization pattern pulses in received broadcasts of data on said network, said synchronizing apparatus including a timing control for correcting drifts in the timing to maintain synchronization between said tracking computers and said network hubs.

29. The fleet management system of claim 28, wherein said timing control comprises a remote phase locked loop (PLL) that includes said apparatus for modulating broadcasts and a network control center that receives broadcasts of data on said network and computes and transmits a time correction to said apparatus for modulating broadcasts, to maintain said synchronization.

30. The fleet management system of claim 29, wherein said network control center includes a receiver for receiving Global Positioning System (GPS) satellite signals including a GPS time reference and means for obtaining the difference between the average time of said received synchronization pattern and the time of said received GPS time reference from which to compute said time correction.

31. The fleet management system of claim 30, wherein said network includes a time division multiple access (TDMA) network, and said timing control PLL includes means for mamtaining said synchronization in said TDMA network to about three microsecond accuracy.

32. The fleet management system of claim 28, wherein said timing control comprises an RF link phase lock loop to maintain clock synchronization to a reference.

33. The fleet management system of claim 30, wherein said network includes a dual band full-duplex interface with TDMA on one-half of said interface and broadcast on the other half of said interface.

34. The fleet management system of claim 33, including a remote reference controlled through a wireless Unk for synchronizing the TDMA portion of said network to GPS time.

35. The fleet management system of claim 33, wherein each of said tracking computers and said network hubs includes a central processing unit comprising a microprocessor with a time processing unit for performing precise clock synchronization within 10 microseconds for the TDMA portion of said network.

36. The fleet management system of claim 28, including means for mamtaining synchronization between said tracking computers and said network hubs and to a synchronization pattern, using the same algorithm to eliminate variabihty in synchronization.

37. An article management system for tracking the locations of articles at rest and in transit for mamtaining a desired flow of said articles, said system providing bandwidth efficient wireless transceiver operation and comprising: a plurality of data transmitters and a plurality of data receivers for communication via a wireless network with respect to location of said articles, means in each of said transmitters for filtering baseband data to reduce the occupied bandwidth ofthe channel on which data is transmitted, including removal of synchronization data to minimize overhead of non-information bearing data, said baseband filter being implemented by a digital microcontroller that replaces an original square wave data stream of said baseband data with deterministic transitions that reduce harmonic content and maintain bit widths, regardless of data input frequency.

38. The article management system of claim 37, mcluding means in each of said receivers for applying processor intensive clock and data recovery algorithms to facilitate said removal of synchronization data by said filter means at said transmitters.

39. The article management system of claim 38, wherein said transmitters and receivers further employ forward error correction coding and space diversity processing to increase the reliability of received data, whereby to further optimize bandwidth reduction by eliminating bandwidth needed for retransmission of corrupted data.

40. The article management system of claim 37, wherein said digital microcontroller comprises a digital filter that uses sine wave segments for transitions.

41. The article management system of claim 37, wherein each of said receivers includes means to facilitate recovery of transmitted data without transmitted synchronization information by locating the start of each transmitted data message within a predetermined scant time window without aid from bit synchronization patterns.

42. The article management system of claim 41, wherein said data recovery means performs said start message start location within said predetermined scant time window by an iterative search that sequentially clocks in the data at greater and greater delays from the nominal message start time until a valid data packet is located. 

43. The article management system of claim 37, wherein each of said transmitters further includes means for performing a bit interleaving pattern on the data to be transmitted to provide a randomization ofthe data bits to ensure that single bit shifts in received data cause errors in all code words.

44. The article management system of claim 43, wherein each of said receivers further includes means for de-interleaving received data according to said bit interleaving pattern introduced by said interleaving means at each of said transmitters.

45. The article management system of claim 37, wherein said wireless network includes a time division multiple access (TDMA) network, and each of said receivers includes means for batch processing of received messages from said transmitters to recover clock and data on a packet by packet basis in said TDMA network.

46. The article management system of claim 45, wherein said means for batch processing of received messages includes means for delay decoding sampled bits ofthe received data, with only predetermined allowable bit patterns present in the delay code, whereby if a bit error causes an invalid pattern, the pattern is decoded to one ofthe possible bits represented by the pattern, and if subsequent error detection processing on the decoded data indicates an error, then, if only one ambiguous data pattern was encountered in that particular code word during the delay decoding process, the other bit value is used and the error detection is repeated, and, if successful, the second bit value is retained.

47. The article management system of claim 46, wherein said delay decoding means retains the original value of said one ofthe possible bits if more than one bit is ambiguous or the second bit also fails to result in valid data, and allows processing to move forward on the premise that the bit error may be correctable at a later stage in the data processing chain. 

48. The article management system of claim 47, wherein each of said receivers further includes means for de-interleaving received data according to a bit interleaving pattern introduced at each of said transmitters in which the transmitted data is jumbled sufficiently that single bit shifts cause all code words to be in error.

49. The article management system of claim 37, including further processing of received data by diversity processing using a combination of error detection and voting.

50. A fleet management system for tracking the locations of vehicles in the fleet and determining the status of events related to the usage or function ofthe vehicles, comprising: navigation apparatus on each vehicle for detecting the location ofthe vehicle relative to a predetermined reference point, a tracking computer on each of said vehicles for receiving inputs indicative ofthe location ofthe vehicle and transmitting navigation and status messages to a fleet management office responsible for the respective transmitting vehicle, at least one non-human sensor on each vehicle for detecting one of said events and supplying an input indicative ofthe detected event to said tracking computer, and said tracking computer including apparatus for automatic reporting ofthe detected events to said fleet management office.

51.. The fleet management system of claim 50, wherein said fleet vehicles and said fleet management office are connected for commumcation by a wireless network.

52. The fleet management system of claim 51, wherein each vehicle has a plurality of sensors for detecting or measuring various ones of said events and supplying inputs indicative thereof to said tracking computer for prompt reporting of event data as it happens over said wireless network.

53. The fleet management system of claim 52, wherein at least some of said pluraUty of sensors are selected from a group consisting of detectors of vehicle ignition, vehicle run time, headhghts on, transmission in forward and reverse directions, wheel speed, passenger or driver door open, four wheel drive engagement, vehicle emergency Ughts or sirens operating, fuel level, coolant temperature, oil pressure, battery voltage, engine warning indications, theft or tamper alarms, cargo door open, cargo temperature, vehicle weight, power takeoff engagement for equipment including pumps, winches, cranes, or augers, engine data bus parameters and tolerance checking, dump box up or hatch open, ready mix drum rotation speed and direction, ready mix wash water usage, ready mix fill water volume, distance traveled between predetermined zones, engine on and off, excessive vehicle speed, driving at improper times, unauthorized stops of vehicle, and arrival/departure times at specified locations.

54. The fleet management system of claim 51, including apparatus at said fleet management office for correlating a detected event to a vehicle location or vehicle speed.

55. The fleet management system of claim 54, wherein said vehicle location correlation apparatus includes means for comparing the vehicle location detected by said navigation apparatus to predetermined geographically mapped zones.

56. The fleet management system of claim 51, including apparatus at said fleet management office for defining map regions constituting zones in areas expected to be traversed by said fleet vehicles, and wherein said apparatus for automatic reporting includes using said navigation apparatus ofthe associated fleet vehicle to report one or more of distance traveled by the vehicle between zones, vehicle engine on and off, vehicle being driven at excessive speed, vehicle being driven at improper times, vehicle making unauthorized stops, and times of arrival and departure at preselected locations.

57. The fleet management system of claim 51, wherein said fleet vehicles are ambulances and said automatic reporting reports trips, caU times, pick up locations, and hospitals to which deUveries are made to said fleet management office.

58. The fleet management system of claim 50, wherein said apparatus for automatic reporting ofthe detected events reports exceptions to routine operations ofthe vehicle to said fleet management office.

59. The fleet management system of claim 52, wherein said fleet vehicles are ready mix concrete or other slurry material mixer trucks, and said plurality of sensors detect or measure at least some ofthe events of truck fully loaded at plant site, truck departure from plant site, truck arrival at job site, truck commencing pour, truck pour ended, truck undergoing wash, truck departure from job site, truck arrival at plant site, and deviations from a routine sequence of said events; and at least some of said events are detected based on truck speed or time interval over which an event takes place.

60. The fleet management system of claim 59, wherein at least some of said mixer trucks of said fleet vehicles are equipped with hall effect sensors that measure both speed and direction of rotation ofthe mixer drum ofthe truck.

61. The fleet management system of claim 50, wherein said fleet vehicles are bulk powdered material transport trucks in which air is pumped through pipes under the bulk hopper ofthe truck for unloading the powdered material therefrom, and each of said transport trucks includes a tachometer sensor for on/off detection of pumping to indicate unloading and cessation of unloading of powdered material from the respective said transport truck to report same to said fleet management office.

62. The fleet management system of claim 50, wherein said fleet vehicles are bulk aggregate material transport trucks each having a dumper for unloading the aggregate material therefrom, and each of said transport trucks includes a sensor for detection of dumper operation to indicate unloading and cessation of unloading of aggregate material from the respective said transport truck to report same to said fleet management office.

63. A fleet management system for a fleet of vehicles, comprising transceivers on said vehicles and in geographicaUy disparate hubs for communication between a fleet management office and said vehicles, a network for said communication, and a central processing unit in each of said transceivers comprising a microprocessor with a time processing unit for performing precise clock synchronization of said transceivers throughout said network.

64. The fleet management system of claim 63, wherein said network is a wireless network.

65. The fleet management system of claim 64, wherein said wireless network is a time division multiple access (TDMA) network. 
 

 Descrizione  (il testo OCR potrebbe contenere errori)



VEHICLE TRACKING, COMMUNICATION AND FLEET MANAGEMENT SYSTEM

Background ofthe Invention

The invention disclosed herein broadly relates to asset management systems, and more particularly to a system for tracking the real-time location and status of vehicles of a fleet, and for communicating between the vehicles and a dispatcher or expediter in the fleet offices.

Operators of fleet vehicle businesses need to know where each vehicle in the fleet is located and what it is doing in order to make decisions on how to use the vehicles most efficiently. In recent years, vehicle locating systems have been developed using Global Positioning System (GPS) satellite information, and, for greater accuracy, differential GPS (DGPS) systems. These systems are highly accurate where line of sight (LOS) conditions exist, that is, where the vehicle (or more accurately, the vehicle's GPS receiver) has a clear LOS to the appropriate number of GPS satellites. But such conditions are typically unavailable or are at least less frequently available for a vehicle operating on city streets, particularly in areas where multi-story buildings are present, owing to the shielding that such buildings effect. In those circumstances an alternative navigation system such as dead reckoning (DR) navigation may be used to provide vehicle position and velocity data in urban canyons (i.e., streets bordered by tall buildings) where GPS measurements are only intermittently available. Or a map matching technique or navigation grid may be used as another or additional alternative. Currently, wireless voice communication between dispatchers and drivers is the primary means of addressing the need ofthe fleet owner or operator to know what each vehicle is doing, i.e., its operations talcing place at any given time, and where the vehicle is located when a particular operation is occurring. In industries where vehicles perform a repetitive sequence of events with each load, such as for ready mix concrete operations, "status boxes" have recently come into use. The status boxes require the driver to press a button at each stage of operation such as "load," leave plant," "arrive job," "begin pour," and so forth.

The primary problem with either wireless voice communication or status box systems is that data are manually provided to the dispatcher from the driver ofthe vehicle. This leads to untimely (late) and, perhaps worse, inaccurate data more than ninety percent of the time, according to analyses performed by the fleet owners/operators. The availability of timely, accurate data is essential if the fleet operator is to operate its business efficiently and economically.

Time Division Multiple Access (TDMA) wireless networks, which are in use for many applications including digital cellular telephones and wireless local area networks, may be used for the communication between dispatchers and drivers. A TDMA network allows multiple users of a single channel or frequency by assigning specific time slots to each user to use exclusively for transmission. For optimal performance of TDMA networks, precise time synchronization between members ofthe network is required. Efficient use of bandwidth in the network requires that the gap times between transmissions of each user, which is wasted time, be miiώnized. An important component to the gap time is uncertainty of time in all the participants in the network. Synchronization of wireless networks is often very coarse, requiring large gaps between transmissions, if specialized hardware is not used. Moreover, synchronization of network elements to a precise reference like GPS based timing information involves having a GPS receiver located on each network element, both mobile and fixed, increasing installation costs and complexity for both fixed network infrastructure and mobile network devices, especially if navigation data provided by GPS is not required.

Precise time synchronization between all ofthe wireless devices in the network can be performed in a number of ways. Typically, a precise, stable time reference, such as one based on the Global Positioning System (GPS) or other time distribution services, is located within each wireless device or within just the fixed infrastructure ofthe network, with synchronization information being transmitted to the mobile units. In these cases, device or infrastructure costs are increased because timing equipment has to be distributed among several locations or devices and installed where space and access for maintenance are limited.

Transmitting as much information as possible in a given amount of bandwidth is an important design goal in any communications network. This is especially true in wireless networks in which available bandwidth is very limited and customer requirements for data throughput are immense. Operation on most wireless bands is subject to occupied bandwidth constraints, requiring the data signal to be contained in a vary narrow region of the electromagnetic spectrum. In TDMA networks, a challenge is to minimize the gap times between transmissions and the overhead associated with each data packet in order to send as much information bearing data over the network as continuously as possible. The present invention addresses these two requirements with digital filtering to control occupied bandwidth and data recovery by the receiving system that requires no synchronization patterns to be transmitted.

Summary ofthe Invention The primary goal ofthe fleet management system ofthe present invention

(sometimes hereinafter called the PROTRAK system or the Galileo system (each of PROTRAK and Galileo, either alone or with various suffixes attached, is a trademark of Fleet Management Services, Inc. of Chandler, Arizona, to which the present patent application is assigned), the fleet management system, or simply the system) is to provide fleet management information to customers (i.e., the owners, operators, subscribers, or users ofthe fleet who seek to avail themselves ofthe advantages of a vehicle tracking, communication and fleet management system) to enable them to manage their assets more profitably. The system provides its customers with several means to accomplish this. First, the PROTRAK system gives the fleet operator the capability to locate vehicles of the fleet in real-time. Second, the system allows the operator to communicate with those vehicles over a very efficient and reliable wireless network — a time division multiple access (TDMA) wireless network. Third, the system enables the operator to receive timely, accurate data regarding what each vehicle ofthe fleet is doing, i.e., what operations) it is perforaiing at any given time. Fourth, the system provides the operator with an ability to correlate the position and messaging information generated by the system with the operator's other management information systems to provide an integrated information source for improved fleet business management.

With respect to the latter, a fleet operator's existing management systems typically consist of accounting, human resources, inventory, and other systems which may not be well integrated. In addition, the operator may not have a reliable way to measure vehicle and driver performance which is critical to the operator's operations. The PROTRAK system provides the required vehicle and driver information together with a database management system that is capable of collecting such information and integrating it with data retrieved from the operator's other information systems in a database management application. This application can be used by the operator to generate reports that are tailored to its business and are based on all ofthe available data.

The PROTRAK system is particularly designed to operate in a market niche between cellular, specialized mobile radio (SMR), and paging services. The system may be used to track virtually any number of vehicles in a fleet across all metropolitan areas covered by the network.

Timely, accurate data can be made available to the fleet operator automatically by combining wireless data network technology, a wireless data computer (also referred to herein as a tracking computer, or simply a tracker), sensors, and dispatch and/or database reporting software and computers at the fleet operator's facilities to receive, display, and process the data provided by the vehicles. The vehicle computer has interfaces to various sensors that indicate operations being performed by the vehicle. Data provided by the sensors are processed by software algorithms in the computer to determine when events of interest occur. The event, relevant parameters, and the time ofthe event are then immediately transmitted through the wireless network to the fleet operator. The network used to enable event driven status reporting is designed to provide frequent small packets of data from vehicles to fleet owners very efficiently. The network architecture is a unique, full duplex design for metropolitan area operations. Data are transmitted to vehicles over a subcarrier on an FM radio station. Vehicles transmit their data using a TDMA protocol on a single UHF channel. Vehicle data are received by Network Hubs, which are receivers placed on commercial towers around the metropolitan area of interest. The received data are sent back to a Network Distribution Center (NDC, occasionally referred to herein as Network Control Center) via telephone lines and are relayed to the fleet owners via the Internet, telephone connection, or other preferably wireless means. Data sent to the vehicles by the owners is first sent to the NDC which sends it to transmitting equipment at the radio station via telephone lines.

The TDMA protocol in the network is controlled by servers in the NDC. The precise timing required by the TDMA network for efficient operation is controlled by a synchronization pattern contained in the subcarrier data broadcast that is received by the vehicles and the network hubs within the PROTRAK system. This enables all vehicles and hubs to have a common time reference that is accurate to about three microseconds. This, in turn, enables a multiplicity of (e.g., 50) vehicle reports in the TDMA network each second. The servers assign reporting intervals and time slots to vehicles so that they can send data and status changes automatically. Typical periodic updates of navigation data or other non-critical information are provided at two to three minute intervals; it is impractical for the vehicle computer (tracker) to wait for a periodic interval of that length to send time critical event data.

A total of 5020-msec long time slots are available for periodic transmissions. Multiple vehicles share slots, the number depending upon the update rate ofthe slot. For example, 60 vehicles can share a one minute update interval slot. Slots not assigned to periodic updates are open for any vehicle to use to request access to the network. If more than one vehicle tries to use the same interval in a particular slot, both may still be heard if each is heard by a separate hub receive site. Otherwise there is a colUsion (interference) of data, and the vehicles involved must retry their requests.

According to an aspect ofthe invention, a method and apparatus are disclosed for automatically determining and reporting events from a vehicle to an owner or dispatcher of the vehicle at a remote location. Events to be reported are changes in status of vehicle operation, location, or measurements of vehicle systems or cargo. A computer (tracking computer, generally referred to herein as the tracker) installed on the vehicle is connected to various sensors which measure parameters of interest to the dispatcher or owner and reports critical changes in parameters over the wireless TDMA network. Computers at a fixed location display these status changes for use by the dispatcher or record the data for later analysis. Software in the tracker in the vehicle together with data supplied by what may be a small number or a wide variety of sensors allows multiple, complicated, and abstract status events that are relevant to specific vehicle or industry applications to be determined and reported by the tracker. Automatically generated reports from the trackers provide more accurate and timely data to the fleet management offices ofthe customer than is available from the drivers ofthe vehicles. The tracking computer has navigation hardware and software for deterniining the location, speed, and direction of travel ofthe vehicle in which it is instaUed. The appUcation software used by operators to receive data from their vehicles also enables them to send "site dispatch" commands to the trackers which indicates a rectangular region to be used to indicate where events such as "load," or "unload," for example, should take place. Location information is then combined with the sensor data in the algorithms to determine event sequencing, provide exception reporting to indicate that the vehicle performed a specific action at the wrong location, performed unauthorized stops on the way to or from a job, or other events specific to a particular business or industry. In an exemplary embodiment of this aspect or feature ofthe invention, three basic components are combined to enable vehicle data to be useful to the fleet operator, namely: (1) sensors on the vehicle to measure parameters to be combined in a computer to automatically determine when events of interest occur, (2) a wireless network that allows prompt, economical transmission of smaU packets of data containing event status to the fleet operator, and (3) software appUcations to store and further process event information for improved asset management by the fleet operator.

The tracker has several inputs and outputs to aUow it to sense and control numerous vehicle functions simultaneously, with configurable interfaces that include serial interfaces, analog inputs, discrete inputs, discrete outputs, and an interface for pulse measurement or clock outputs. The tracker also has dedicated interfaces for measuring battery voltage, ignition, speed, and reverse. These enable measurement of a wide variety of vehicle functions, either directly or through auxiUary sensor modules that provide data to the computer serial interfaces. The outputs allow control of vehicle functions remotely, through the wireless network. Tracker software permits processing and integration of various sensor inputs to enable higher level or abstract status events to be determined and reported. For example, in a "loading" status for a ready mix truck, a loading is determined from a number of inputs by combining truck location at the plant, truck stationary, and truck drum rotating in the charge direction at a speed greater than a predetermined n-iriimum speed for a niinimum time interval. Examples of other status events include "ambulance emergency

Ughts on" or "four wheel drive engaged," which, as with other simpler status events, are simply detected and reported.

The tracker reports events over the wireless network whose architecture and protocols are tailored for prompt reporting of events while concurrently supporting slower, periodic update intervals for less critical data. As noted above, the network uses a TDMA protocol to enable a large number of vehicles to send short data packets frequently on a single wireless channel. Data is sent to the vehicles over a subcarrier on an FM broadcast channel. An important aspect ofthe invention is the provision of precise time synchronization required for the TDMA protocol over the FM Unk to the vehicles and receive sites. In the exemplary embodiment, as many as fifty vehicles per second can report data at a variety of update intervals ranging between five seconds and one hour.

Typical periodic updates of navigation data and other non-critical information are provided at two to three minute intervals. However, it is not practical for the tracker to wait for periodic intervals of that length to send time critical event data. Accordingly, for such events, the network maintains a number of time slots for additional access to the network on request of any vehicle needing to transmit event data. The requesting vehicle is then granted sufficient auxuiary reporting times at twelve second intervals to send its data. The total latency between an event being detected and the transmission of data is kept under thirty seconds.

Owners and dispatchers of fleet vehicles are provided with computer software appUcations that enable connection of their desktop PC's to the TDMA network using the

Internet or other means. Data furnished from the vehicles are routed to these appUcations by the network servers, and are also stored in a local database. One of these software applications allows viewing the vehicle locations as icons on a map displayed on a monitor, showing event changes for each vehicle on the map in real time as they occur, and also enables the dispatcher to send messages or dispatch locations to the vehicles. Automated events may be provided as weU to other dispatch or vehicle management appUcations, as required. Advantageously, these applications integrate vehicle event data with other systems utilized in the fleet operator's business, such as order entry and caU management. Reports on vehicle events may be generated from these appUcations over the Internet from data stored in the network database.

According to another of its aspects, the present invention minimizes infrastructure cost for time references in the TDMA wireless network and locates the time reference in a central network control faculty that is easily maintained and monitored. The time reference uses GPS referenced time, and TDMA network time is held in synchronization to the GPS reference by a wireless phase lock loop (PLL), removing the requirement to locate the time reference within the wireless transceiver devices or infrastructure elements.

This aspect ofthe invention enables precise time synchronization of aU wireless network elements by using special timing hardware and by distributing a single, remote GPS based time reference throughout the network using a wireless PLL. Digital data is remotely synchronized in the TDMA network, a fuU duplex system designed to efficiently transmit short bursts of data from mobile vehicles to their owner on a frequent basis. Vehicles transmit data using a TDMA protocol in the UHF frequency band in precisely controlled time slots at a rate of 50 vehicles per second. Vehicles send location, status, and message data to the fleet owners or dispatchers who are connected to the wireless network through the Internet or other means. Data transmitted to the vehicles is broadcast over a subcarrier of an FM radio station, including network timing and control information as well and messages and information from fleet operators.

Timing ofthe TDMA portion ofthe network is controUed from a central network control faciUty that houses the servers which control vehicle access to the network and manage fleet owner connections to the network. Synchronization ofthe vehicle devices and fixed hub receiver systems that receive vehicle data is maintained through synchronization information contained in the FM subcarrier broadcast. The FM subcarrier timing data is, in turn, referenced to a GPS based time source at the network control center.

A Subcarrier Control Computer (SCC), responsible for providing the data to the subcarrier modulator, is located at the FM radio station transmitter or studio facilities. It clocks the transmit data at precise intervals based on timing commands from a Network Timing Control Computer (NTCC), located at the network control center. The NTCC and SCC are connected through a modem for data and timing control commands sent to the SCC. The NTCC computes timing commands based on the synchronization information from a GPS receiver time reference and that from an FM subcarrier receiver which receives data from the SCC. The difference in time from the GPS time reference and the received synchronization data over the FM subcarrier is processed by the NTCC using a PLL algorithm to generate a timing correction which is sent to the SCC.

This wireless PLL timing control loop enables a single, remotely located time reference to synchronize the TDMA network. In addition, the feedback inherent in the control loop aUows the system to compensate for variations in FM radio station group delay so that the broadcast synchronization data is apphcable at the FM antenna. This is important for large networks based on this technology that require multiple FM stations to cover overlapping geographical areas, because it enables the FM stations to be synchronized. The invention also relates to bandwidth optimizations for the transmission of data over wireless TDMA data networks. The invention minimizes occupied bandwidth in a wireless channel by digitaUy filtering the data to be transmitted before modulation. The filter is implemented in a low-cost microcontroller, which replaces each edge in a digital square wave data stream with transitions that have the shapes of rising or falling sine waves. This has the advantages of reducing higher harmonics in the data signal, especially at the highest data rate, where the square wave is effectively replaced by a sine wave. Another aspect ofthe invention maximizes the efficiency ofthe TDMA network by refraining from sending any special bit synchronization information in addition to the data. In most systems, a large number of bits is devoted to synchronization, framing, or data clock recovery. In one aspect ofthe present invention, the bit clock and data synchronization are performed by the receiver by using forward error correction algorithms, special bit interleaving, and high performance digital signal processing hardware and software. Still another aspect ofthe invention uses space diversity combining between multiple receive sites to improve the reUabiUty of receiving data. More reUable data reception saves bandwidth by reducing the number of retries required to move data through the network.

Brief Description ofthe Drawings

The above and other aims, objects, features, aspects, and attendant advantages of the invention wiU become apparent from the following detailed description ofthe presently contemplated best mode of practicing the invention, with reference to presently preferred exemplary embodiments and methods thereof, in conjunction with the accompanying drawings, in which:

FIG. 1 is a simplified block diagram ofthe overaU PROTRAK system, including the TDMA network, ofthe invention; FIG. 2 is a block diagram ofthe system architecture for customer appUcation interfaces;

FIG. 3 is a detailed schematic diagram ofthe components ofthe wireless network and customer interfaces;

FIG. 4 iUustrates details ofthe NDC in the network of FIG. 3; FIG. 5 is a time-line of data flow in the network;

FIG. 6 is a block diagram ofthe base message feedback loop for bit-sync timing;

FIG. 7 is a diagram ofthe base message broadcast format;

FIG. 8 is a diagram of an exemplary tracker module message transmit frame;

FIG. 9 is a diagram illustrating the repeating interval relationship to slots, frames and frame cycles for tracker message packets;

FIG. 10 iUustrates the relationship between trackers, slots, and repeating intervals;

FIG. 11 is a diagram of a nominal navigation grid used in the system ofthe invention;

FIG. 12 is a diagram of a timing control phase locked loop (PLL) according to an aspect ofthe invention for the TDMA network of FIG. 1;

FIG. 13 is a timing diagram ofthe synchronization pulse sequence transmitted by the SCC on the FM subcarrier at the start of each second's data, for the control loop of FIG. 12;

FIGS. 14A-D are flow charts of timing control loop processing performed in operational modes ofthe NTCC software synchronization ofthe TDMA network to GPS time;

FIG. 15 is a block diagram (mathematical) ofthe timing control loop;

FIG. 16 is a block diagram ofthe transmit TDMA data processing performed by the tracking computer (tracker) installed in a fleet vehicle; FIG. 17 is a table nlustrating the TDMA transmit data interleaving pattern;

FIGS. 18A-C are diagrams comparing an original TDMA data sequence to the delay coded version of that sequence, and also iUustrating premodulation filtering ofthe delay coded sequence;

FIG. 19 is a flow chart ofthe filtering algorithm performed by a speciaUy selected microcontroUer which implements premodulation filtering for the result shown in FIG. 18C;

FIG. 20 is a diagram representing a comparison ofthe approximate relative power spectrums ofthe unencoded, delay coded, and filtered data of FIGS. 18A-C;

FIG. 21 is a block diagram that iUustrates the receive TDMA data processing performed by the Network Hub receiver; FIG. 22 is a flow chart ofthe space diversity algorithm used by the NDC server to combine vehicle data received by the network hubs;

FIG. 23 iUustrates an exemplary placement ofthe tracker, a Mobile Data Terminal (MDT) and antennas on a typical fleet vehicle, the vehicle being further equipped for accommodating various sensors for event reporting; FIG. 24 is a simplified block diagram of a tracker installed in a vehicle of FIG. 23;

FIG. 25 is a block diagram ofthe internal power distribution to the tracker;

FIG. 26 is a block diagram ofthe tracker power distribution summary;

FIG. 27 is a diagram ofthe power mode state transition logic ofthe tracker;

FIG. 28 is a synchronization timing and data clocking diagram for the tracker and Network Hubs;

FIG. 29 is a timing diagram of tracker data transmissions;

FIG. 30 is a simplified block diagram of a Network Hub;

FIG. 31 is a simplified block diagram of a Subcarrier Control Computer (SCC);

FIG. 32 is a diagram ofthe NTCC/SCC data flow; FIG. 33 is a diagram iUustrating various sensors, inputs, outputs and interfaces to the tracker of FIG. 24;

FIG. 34 is an exemplary rectangular zone on a stored map used to determine and display the tracker's location (in particular, that ofthe vehicle in which the tracker is mounted); FIG. 35 is a simplified block diagram of a drum rotation sensor used for a ready- mix concrete track; FIG. 36 is a timing diagram ofthe pulses resulting from the interaction of sensor and magnets on dram rotation, for the sensor embodiment of FIG. 35;

FIG. 37 is a state transition diagram that defines logic used by the tracker to combine sensor and navigation data to automatically derive status of a ready-mix concrete truck; and

FIG. 38 is a flow chart of a preferred diversity algorithm used by the tracker for recovering corrupted data.

Deta ed Description of Exemplary Embodiments and Methods

I. The Overall PROTRAK System It is desirable, first, to provide an overview of the overaU PROTRAK vehicle tracking, communication and fleet management system, a simplified block diagram of which is shown in FIG. 1. In addition to definitions of acronyms and other abbreviated terms presented herein, a glossary of abbreviated terms used throughout this specification is set forth in Appendix A. The "brain" ofthe system is the Network Distribution Center (NDC) 10 which is responsible for interfacing with subscriber (variously also referred to herein as customer, owner, operator, fleet subscriber, or user) fleets via a modem on a public switched telephone network (PSTN) line or Internet or other wide area network, and interfacing with fleet vehicles through a multipUcity of Network Hubs (sometimes referred to herein as Net Hubs, or simply, Hubs) such as 11-1, 11-2, ... 11-i, and one or more FM Radio Stations such as 12.

Information to be passed to vehicles in one or more fleets of interest is generated by a fleet dispatch office terminal or customer command station (CCS) such as 14 for Customer A, 15 for Customer B, ... and 16 for Customer i, for deUvery to the vehicles such as 17-1, 17-2, ... 17-n for Customer A (and so forth for customers B, ... i). The information is initially sent from the respective CCS via modem over the PSTN (e.g., Unes

19, 20, 21) or via the Internet or other means to NDC 10. The NDC prioritizes the information and sends it via a modem over the PSTN (e.g., line 22) or over such other means to FM Radio Station 12, from which the information is broadcast, e.g., on a 67 KHz or 92 KHz FM subcarrier. The information is broadcast with precise timing defined by GPS satellite navigation information.

AU vehicles in the network receive the approximately 4,664 bits per second (bps) binary frequency shift keyed (BFSK) FM subcarrier broadcast from the FM Radio Station (and others, if apphcable) and decode the information contained therein. Each vehicle is assigned a slot in time to broadcast its location and responses to CCS requests. The assigned slots are unique to preclude simultaneous broadcasting by two or more vehicles, and the broadcast timing is precisely controUed through GPS and FM subcarrier synchronization.

When a vehicle's time to broadcast arrives, it sends a 144 bit message at a rate of 7,812.5 bits per second. This information is received by at least one ofthe Network Hubs

11-1, ..., 11-i, which demodulates the message and provides data therefrom via a modem to NDC 10 over the PSTN (e.g., via lines 24, 25, 26). NDC 10 parses aU received data and provides the vehicle location and status information for each specific fleet subscriber to its respective CCS over the PSTN. Real-time tracking of vehicle location and status may be performed by the

PROTRAK system as often as once every five seconds, for example, but more generally is updated at a rate of once every three minutes. Vehicle locations are tracked with an accuracy to about 5 meters through the use of DGPS information provided by the FM subcarrier broadcast. Where GPS is intermittently unavailable because of signal masking when vehicles are located on city streets bordered by taU buUdings or because of other obstructions, the system employs dead reckoning (DR), map-matching and/or other navigation techniques to detect the vehicle location.

The wireless system provides a versatile medium for sending brief messages consisting of short packets of information to or from a vehicle mounted instrument or other wireless communications device. Although the system is aimed at business asset management, wireless service supports a wide range of packet communication needs for fixed as well as mobile assets. Use of GPS in the receiving device is not required, by virtue of GPS synchronization ofthe FM subcarrier broadcasts.

The system capacity is sufficient to accommodate at least 5,000 individual vehicles being tracked in the network at any one time with the bandwidth provided by a single FM radio station subcarrier at 67 KHz or 92 KHz for outbound communications and a single UHF or narrowband personal communication services (PCS) 12.5 KHz bandwidth frequency for inbound vehicle messages. System expansion may be provided, for example, in 5,000 vehicle blocks by the addition of another FM radio station subcarrier and another UHF or narrowband PCS frequency. Where feasible, frequency reuse principles on UHF or narrowband PCS frequencies are appUed before another inbound frequency is added, to maximize channel capacity.

Communications in the PROTRAK system provide greater reUabiUty than ceUular or specialized mobile radio (SMR), and possibly than paging systems, with anticipated reUable reception of messages by vehicles and dispatchers 97% first time. IT information is not received the first time, the system is able to make that determination and witt re-attempt transmission until successful, or until it is found that delivery cannot be made. At least some fleet operators (e.g., ambulance services) require reUable operation despite adverse conditions, such as power outages. The overall system has internal backups to avoid single point faUures. Fleet subscriber vehicles are allowed to "roam" from one network ofthe system to another, such as where a vehicle is in transit from one metropoUtan area to another. The system enables the vehicle to gracefuUy exit the first city network and sirnilarly enter the second city network when in range ofthe second city.

System components are designed to support a wide range of fleet subscribers. Vehicle trackers (i.e., on-board tracker modules) are capable of hosting a number of peripheral functions, such as analog, digital, serial interface, and higher speed data coUection required by some subscribers. Network Hubs are capable of supporting various antenna and receiver configurations to enhance coverage and various power configurations to support remote site operation. UnavailabiUty of telephone Unes does not present a problem, since wireless means are used for indirect or direct interface to the NDC.

II. The Fleet Data Management Application

PROTRAK system architecture and database management appUcations that interact with each subscriber's (customer's) existing information systems include the NDC and CCSs which are used to provide real-time vehicle location and message capabihty for dispatchers. The customer side ofthe PROTRAK system consists of three appUcations, including (1) a database management and CCS server (DMCS) that ties the network and customer information together, (2) the CCSs with their real-time location and messaging services, and (3) report generation that allows customers to access and manipulate the data managed by the DMCS. A block diagram ofthe system architecture with respect to customer appUcation interfaces is shown in FIG. 2. NDC 10 runs two server appUcations, namely, an NDC Server 32 that provides real-time information to connected customers, and a tracking data log server 33 that coUects tracking information from the system in real-time and stores it in a large capacity database, with additional capabihty to respond to queries for historical tracking data. The customer estabUshes a single conventional TCP/IP connection (34, 35) to each of these servers through a single dial-up line directly to the NDC or through the Internet (via an Internet service provider, or ISP).

The connections to the NDC are controUed by DMCS 27 which may be located at the customer's faculty 28 remote from the NDC 10. AU ofthe real-time data avaUable for all ofthe customer's vehicles are provided to this DMCS appUcation. DMCS 27 stores these data and passes them on to the CCS appUcations 30 in filtered format so that CCS operators can observe (e.g., as icons on a monitor display or screen at their respective stations) and communicate with only those vehicles for which they are responsible. Another function of DMCS 27 is to provide interfaces to a customer's other management applications such as accounting 31, human resources 32, inventory control

33, and computer aided dispatching 34 systems. Data are accessed and reports are generated by a database reporting application 36. The interface between DMCS 27 and CCS 30 and database reporting 36 appUcations is conventional TCP/ P. These applications may ran on the same or separate computers using, for example, Windows (trademark of Microsoft Corporation) 95, Windows 98 or Windows NT (or any advance of such software, or any software of other providers which enables the same or similar functions to be performed). The operator's other appUcations interface to DMCS 27 through standard or custom interface protocols.

The DMCS appUcation is responsible for tying together the NDC server appUcations, CCS and database reporting appUcations, and the operator's existing appUcations (e.g., the customer's management information and back office systems) into an integrated system. The DMCS acts as the enterprise connection to NDC 10. It establishes TCP/IP socket connections to the NDC real-time and data log servers 32 and 33 as required, and maintains access to data for aU ofthe fleet operator's vehicles to be tracked by the PROTRAK system. Vehicle location and message data is provided by NDC 10, and DMCS 27 sends real-time messages and commands to the vehicles and may request archived tracking information from the NDC for time periods when the DMCS was not logged-in to the NDC.

The CCS (or each of multiple CCSs) 30 is primarily a real-time vehicle location display and messaging tool to support dispatching functions. DMCS 27 routes commands and messages from CCS 30 to NDC 10, and provides tracking data from the NDC to the

CCS for only those vehicles that the CCS operator is controUing (i.e., dispatching, monitoring, scheduling, etc.). The DMCS supports multiple CCS appUcations operating simultaneously, controUing and viewing different groups of vehicles in an overaU fleet. DMCS 27 also supports database queries from multiple CCS 30 and database reporting 36 applications. Each CCS 30 requires real-time information from the database regarding vehicle drivers, dispatching, scheduUng, and cargo. The database reporting appUcation requires historical tracking data and information from other systems as necessary to produce reports pertaining to the customer's business.

HI. T/ie Network Distribution Center The NDC 10 architecture will be briefly described with reference to the exemplary

NDC software and hardware system in the simplified block diagram of FIG. 3, which emphasizes communication protocols used by the TSTDC software appUcations. As noted above, the NDC 10 controls information flow between vehicles (e.g., 17) and their fleet subscriber command station (e.g., CCSs 14 and 15 at customer site 13) logged into the system. The RF network is managed by the NDC by controUing network timing, and deteπmning the nature ofthe data transmitted to the vehicles. AU data received by Network Hubs (e.g., 11-1, 11-2) are collected by NDC 10 for processing, distribution to customers, and data archiving, and the NDC aUows customers to log in via the Internet, TCP/IP network, or other suitable connection 40. An interface to a PROTRAK Data Center (PDC, not shown) supports roaming between cities and overaU tracker-fleet subscriber identification.

An NDC Server 42 in NDC 10 communicates with the CCSs 14, 15, etc., as weU as with NDC command stations (not shown) within the NDC, and Network Hubs 11-1, ... 11-i, through respective sockets and related net connections including a router and a modem, and also with a Network Tuning and Control Computer (NTCC) 47 through a serial interface 49. The NDC Server has only one interface — a messaging protocol which wiU be described presently. NDC adrninistrators use NDC Command Stations (which are similar to CCSs, but within the NDC) for display, control, analysis and maintenance ofthe NDC Server. NDC Server 42 is assigned a registered domain name and an IP address on the Internet to aUow fleet subscribers and/or NDC command stations to connect to the

Server through the Internet rather than using a system modem bank. By way of illustrative example and not Umitation, three different connectivity options are shown in the NDC hardware block diagram of FIG. 4.

As noted above, DMCS 27 interfaces with the customer's critical business appUcations 31, etc. including accounting, inventory control, human resources, etc., as weU as with CCSs 14, 15, etc., and NDC 10. NDC Server 42 controls all data sent to and received from vehicles and command stations, and also controls the configuration ofthe TDMA vehicle transmission UHF radio network by assigning vehicles to specific time slots for transmission and controlling which vehicles are allowed to operate. Data from vehicles 17 received from the Network Hubs 11-1, etc. are combined and decoded, and then provided to fleet subscriber CCSs for use in maintaining control of he radio network. Data from CCSs are sent to vehicles as required, and are also used to schedule the appropriate level of update service, with the data being transmitted to the vehicles over a serial interface to each NTCC computer at the NDC. The network control function is the most critical task of NDC server 42, performed in real-time based on prompts from NTCC 47. System requirements for substantial TCP/IP support, Internet, and maintenance and support workstations require use of a platform such as Windows NT, which aUows the system to make use of third party hardware and software. Running this task periodicaUy, once per second, is accompUshed, first, by providing the network control function with sufficient priority to complete its required tasks within the one second period aUowed; and, second, by polling the NTCC serial interface at a high rate to detect the reception of timing data indicating that the server should start the network control task.

NTCC 47 controls the real-time portion ofthe PROTRAK system, including the SCC 48 transmit timing through a feedback loop (to be discussed presently in connection with FIG. 6) using an FM receiver in a roof module. OneNTCC roofmodule 55 (FIG. 4) exists for each FM radio station 12 supported by NDC 10. The NTCC 47 is also responsible for introducing frame ID data and differential correction data into the transmitted data stream. Data packets generated by server 42 are sent to NTCC 47 for inclusion in the output data stream. By having NTCC 47 communicate with SCC 48 via a dedicated modem 51 and telephone line or other line that is not part ofthe modem rack used for the Network Hubs and the CCSs, the time-critical interface for timing and corrections is separated from any unpredictable activities ofthe modem rack or ethernet interface.

NTCC 47 monitors the FM station 12 broadcast for timing and content. If the broadcast was received skewed with respect to the GPS integer second, then timing correction commands are sent to SCC 48. The NTCC also compares the received broadcast data to the data block that was transmitted, to ensure the data was correct. FM received signal strength is also monitored to detect changes in FM broadcast power. Broadcast and SCC status are provided to the server 42 so that it can determine what action to take in the event of a failure.

A number of Windows NT workstations constitute the NDC command stations (e.g., 43, 45, FIG. 4), which are connected to NDC server 42 via 100 Mbps ethernet or other suitable path such as a local area network (LAN). These stations provide the capabuity to perform several functions, including displays of different areas ofthe navigation grid, network and modem monitoring, data log analysis, user account maintenance, and software development.

The NDC server 42 may communicate with the Network Hubs and CCSs via a TCP/ P, or by way of other connectivity options such as those shown in FIG. 4. A US Robotics Total Control modem rack, for example, may be used to provide TCP/TP connectivity to the server. Each rack is implemented to support 48 modems via 2 conventional TI lines, and several racks can be stacked to support a larger number of modems. The server may, for example, have two independent ethernet networks, and the modem rack is on a separate network from the NDC command stations so that NDC command station network activity wiU not introduce any latency in the modem data. User connections do not have any real-time requirements, but data transferred between the server 42 and the Network Hubs (e.g., 41-1, ..., 41-1) must occur regularly at one second intervals.

A time-line ofthe network data flow is shown in FIG. 5. Data transmitted by the vehicles on frame 1 is available to the NDC server 42 (FIG.3) at the beginning of frame 3. On the detection ofthe start of frame status from the NTCC 47, that data and user data received over frame 2 are processed. Data packets to be transmitted to vehicles are also sent to the NTCC. In the last part of frame 3, the NTCC formulates a data block which is sent to SCC 48 during frame 4. The SCC finaUy broadcasts the data block on frame 5.

The network control function comprises radio network management, vehicle and user input data processing, and base output data processing. Based on the time-line shown in FIG. 5, these tasks combined must begin promptly with the detection ofthe start of a frame (based on serial data received from the NTCC) and complete within roughly one-half second.

NDC 10 controls the assignment of network transmit slots to the vehicles and manages the exit and entry of vehicles into and out ofthe network. It also coordinates the broadcast of network control, vehicle control, message, and system identification packets to the vehicles. Network management in the system must run at one second intervals and complete within about one-half second. The system maintains data stractures for all active vehicles and fleet subscriber command stations, and has a capability to cross-reference vehicles to fleets and to assigned broadcast slots. Data required includes: • vehicle position for transmission to fleet subscribers, and for data logging; position data may also be used for UHF frequency reuse or FM channel assignment; the transmit slot(s) occupied by the vehicle; the vehicle's tracker ID, local control ID, owner, and group; message and control acknowledges, retries, and time-outs; • roaming information; and service type, including nominal update rates, real-time service or track history requirements.

The NDC server requires efficient and logical algorithms to assign vehicles to the transmit slots. The various vehicle update rates, as weU as reserving space for network entry and polled response vehicle transmissions must be taken into account. Periodic transmit slot defragmentation may also be required. In practice as the system runs, vehicles enter and exit the network continuously, and slots must be reassigned for use by subsequent vehicles.

Data transmitted by the vehicles such as 17 (FIG. 3) is received at NDC 10 from the Network Hubs (e.g., 11-1, 11-2) via a modem bank in which the modems connected to the Hubs have the highest priority with respect to data transfer between Hubs and NDC server 42. NDC 10 processes the network data in one second intervals, and therefore, the vehicle data from each Hub must be avaUable for processing by the NDC server during the one second interval after that frame's data was received by the Hubs.

The server 42 performs space diversity processing, error control decoding and error correction, and decryption on the received vehicle data packets. Data received in time slots assigned to vehicles may be avaUable from multiple Hubs. Since only one vehicle 17 has been transmitting, the received data at each Hub should be the same.

Multi-path signal loss and other factors can cause errors in the received data, but those errors are likely to be different for each Hub. NDC 10 can then blend the data from all Hubs to produce a most likely solution.

After diversity processing is completed, error detection/correction processing is performed. The vehicle data packets are coded to aUow numerous bit errors to be corrected through interleaving ofthe data bits and forward error correction coding. The data packets are then decrypted.

The received data packets are parsed and the information is used to update the NDC network control data structures. State and status data are logged for off-line analysis. Vehicle state data and fleet subscriber data are provided to the logged in fleet subscribers as it is received. The logged state data may be used to provide fleet subscribers with vehicle tracking history rather than real-time tracking data.

In the case of data received from customers (fleet subscribers, owners, or lessees, for example) 13, the data is processed as foUows. Commands and data requests from logged-in fleet subscribers wiU be combined with vehicle information to generate vehicle control, network control, and messaging packets to be transmitted to the respective vehicles 17. Events such as customers logging in or out may control whether or not vehicles are aUowed to enter the network or are forced to exit. For customers desiring real-time tracking data only, the respective vehicles are not allowed in the network unless they are logged-in. Other customers may require track history information and, in those cases, vehicles are tracked any time they are on. Fleet subscribers with low update rate needs, e.g., a few times per day, may request vehicle positions manually through their command stations. Their vehicles are poUed by the NDC 10 based on a fleet CCS request, but cannot enter the periodic part ofthe network. Some subscribers, such as those that provide emergency response services, are able to request changes in vehicle position update rates from their command stations.

When roaming is implemented, fleets are aUowed to track vehicles on any grid regardless of their NDC connection. Since fleet subscribers may not know where their vehicles are located at any given time, the system ofthe invention aggregates data for aU vehicles through a wide area network connecting each NDC to enable the CCS to display all vehicles, regardless ofthe market (metropolitan or other area) in which they are located.

Transmit data is generally processed as foUows. On each one second frame, the NDC 10 generates base message data packets to be broadcast to the vehicles 17. The NDC periodicaUy sends Grid, FM, and UHF identification packets. Text message and user data packets are sent as requested by the CCSs such as 14, 15. Network configuration and vehicle control packets are generated from the network management function. AU packets are sent from the NDC server 42 over a high speed serial interface 49 to the NTCC 47. The NTCC blends NDC packets with real-time packets and differential corrections and sends a complete base message block to SCC 48. SCC 48 then transmits the base message at the start ofthe next second. At least a two second delay exists between the time NDC server 42 sends a packet to NTCC 47 and the time it is transmitted by the 48.

Since the NDC server 42 essentiaUy places data packets into an output queue on the NTCC computer, NTCC 47 must indicate to the server the space avaUable in the buffer. Depending on vehicle and user actions, some frames may generate many network/vehicle control or message packets and others may not generate any. NTCC- supphed DGPS correction packets also use bandwidth periodicaUy. This produces a variable delay between the time the packets are generated by server 42 and the time they are actually received by the vehicles 17. The NTCC 47 must provide server 42 information regarding size ofthe queue, so that the server does not, on average, overflow the output bandwidth of the FM broadcast from station or tower 12.

A data packet priority system may be implemented so that some packets are sent sooner than lower priority packets that were queued first. For example, text message packets may have a lower priority than vehicle control packets. As packets are delayed in the queue, their priority is increased so that they are certain to be transmitted with a maximum of a few frames of delay.

Data to be logged by the NDC server includes information for billing, vehicle track history for some subscribers, and detaUed radio packet log data for test, analysis, and maintenance purposes.

A PROTRAK Data Center ties the individual city NDCs 10 together into an integrated system to support national roaming, and serves as a central point for a database of vehicle-mounted tracker IDs and customer IDs with a cross-reference. Subscriber profiles indicate what services and update rates each vehicle tracker requires. Data for roaming vehicles is transferred from the NDC 10 at which it is received to the NDC at which the subscriber is located through the PDC. The NDC database from which the server dispenses information to CCSs, NDC command stations, etc. upon request is a high capacity database program such as Microsoft structured query language (SQL) server or Oracle 8 enterprise. Since these applications and their associated users are only allowed to access a subset ofthe data stored in the database, the NDC server is responsible to authenticate users and prevent the unauthorized access of data. For example, a CCS used by Customer A is not normaUy aUowed to access tracking data logged for Customer B unless authorized by Customer B.

TV. The PROTRAK Network

The PROTRAK system time division multiple access (TDMA) RF network control, messaging and user data are transmitted to tracking computers (trackers) instaUed in the respective fleet vehicles to be tracked, over an FM broadcast subcarrier. Tracker transmissions include tracker position, network status, and user data. Vehicle data are transmitted to Network Hub sites using the conventional UHF business band. Network frame timing and tracker transmit slot timing are ultimately controlled by GPS-derived precise timing. The NDC manages the network and tracker slot aUocation. Data sent by the NDC are transmitted via modem to the FM broadcast station, and data received from the trackers are provided via modem from the hub sites.

For the base broadcast, the TDMA network timing is based on precise time from GPS. The network is partitioned into one second long frames, 3600 frames are present in a frame cycle, and 168 frame cycles exist in one week. Since the frame cycle period is an even divisor of 604800 (the number of seconds in a week), the frame number can be directly determined from GPS time. To support network users (fleet subscribers) without GPS receivers, the frame number is transmitted in each base message.

A bit-sync in the base broadcast controls the timing ofthe entire network, indicative ofthe start of each network frame to the trackers and Network Hubs, aU of which have FM receivers. The Hubs and trackers with position information account for their distances to the FM transmit antenna to derive the frame start time.

The manner of handling closed loop timing wiU be described with reference to FIG. 6, which iUustrates the base message feedback loop for bit-sync timing. The base message contains a bit synchronization pattern which is used to control tracker broadcast timing. The synchronization is controlled to indicate each GPS integer second by a closed loop feedback system. NTCC 47 at the NDC uses an FM receiver 58 and GPS receiver 54 to measure the delay between the integer second and the arrival ofthe bit-sync in the FM subcarrier transmission received at the FM receiver. After accounting for the predetermined distance between the FM broadcast antenna 53 and the NDC, the difference between the GPS indicated integer second and that indicated by the bit-sync is sent to SCC

38 at the FM station via modem(s) 47. SCC 38 then slews the broadcast start time to correct for the measured error.

The SCC receives transmit data and timing control information from the NTCC computer 47, and clocks the data out to the subcarrier modulator 68. For example, an external USRobotics 28.8Kbps modem is connected to SCC 48 via a Motorola 68332 peripheral serial communications interface (SCI). SCC 48 answers caUs from NTCC 47, data to be transmitted on the next frame is provided by the NTCC, and the SCC buffers that data for transmission. NTCC 47 also provides SCC 48 with timing control commands, which the SCC uses to adjust the start time and period of its transmit frame clock to maintain coherency with the GPS integer second. The SCC sends mode and status information to the NTCC.

SCC 48 must accurately control the timing ofthe start ofthe output data stream so that the bit-sync pattern leaves the transmit antenna at a precise time with respect to the GPS integer second. It is desirable that the start ofthe data transmission be repeatable to less than one microsecond (μsec) and be controUable to about 0.4 μsec. The SCC uses programmable timers within the time processing unit (TPU) ofthe Motorola 68332 microprocessor to trigger the transmission of data to the subcarrier modulator. NTCC 47 uses data from FM receiver 58 and GPS receiver 54 to evaluate the offset and period of the base transmission. Synchronization is achieved by changing the timer period based on commands from the NTCC. When the system is first turned on, a period of about 20-30 seconds is required to achieve synchronization. Thereafter, minor corrections to the SCC clocking are provided periodicaUy. The data clock is accurate to less than about 2 parts per million (ppm) relative to the receive data clocks on the remote trackers. A detailed description ofthe timing control algorithms employed by NTCC and the trackers instaUed on the vehicles is presented in Section V below. In practice, SCC 38 is mounted together with subcarrier modulator 68, modem, and DC power supply for the SCC in a rack. Subcarrier modulator 68 may be an SCA-300B subcarrier modulation generator avaUable from Circuit Research Labs, Inc. of Tempe, Arizona, which receives binary data from SCC 48 at a ±12 V data input port 61. The binary data is filtered and modulated on a digitally generated subcarrier. Subcarrier modulator 68 also has two discrete switch closure inputs 59, 60 which are used by SCC 48 to turn the subcarrier on and off.

The NTCC roof module 55 includes GPS receiver 54, PROTRAK CPU 56, and FM receiver 58. CPU 56 compares the time at which the FM bit synchronization is received by receiver 58 to the integer second pulse-per-second (PPS) from the signal received by GPS receiver 54. Time difference is measured by recording at a timing control register ofthe TPU in the Motorola 68332 microprocessor on receipt ofthe PPS and on receipt ofthe bit-sync. The TPU timer resolution is on the order of 0.2 μsec. The measured time difference provided to NTCC 47 is used to compute timer corrections for SCC 48 to apply to its transmit timer.

The NTCC acts as the real-time interface between the NDC server and the network. For timing control, NTCC 47 maintains the network frame count based on GPS time and computes and provides updates to the SCC transmit timer to keep the base transmission aUgned with GPS time. Three timing controls are avaUable, as foUows: (1) In frame lag/advance control, for PPS-bit-sync offsets greater than 0.5 seconds the NTCC can delay or advance the frame number contained in the output data so that the transmitted frame number matches the actual frame as defined by GPS, which aUows the time to be adjusted in one second steps. (2) In SCC transmit timer lag/advance control, for offsets 0.5 seconds or less the transmit timer can be loaded with a longer or shorter value to introduce a one-time shift in the output time with respect to the GPS integer second. (3) In SCC transmit timer period adjustment control, the interval between bit-sync epochs and the PPS integer second can be measured, and scale factor (frequency) errors in the transmit timer can be corrected by adjusting the nominal timer value up or down.

A period of 20-30 seconds of coarse aUgnment may be necessary or desirable using controls (1) and (2), above. Once the SCC is synchronized, controls (2) and (3) are used to make fine corrections to the synchronization to account for smaU timer errors attributable to temperature and residual synchronization errors.

"Base messages" are data sent from the NDC to the trackers over the broadcast network on the FM subcarrier. The base message data contains network control information, repeating interval slot aUocation definitions, DGPS correction data, messaging/paging data, and user specific data. The format ofthe base data broadcast to trackers wiU be described presently herein.

For information flow, message data which controls network activity (network and tracker control packets) is created by the NDC server 42 (FIG. 4) in response to data received from trackers and from CCSs (e.g., 44) (or NDCs, e.g., 43). Paging and user data packets are created from commands by the users. These packets are sent to NTCC 47 for assembly into a base message. The NTCC adds a network frame number and DGPS correction data, as required, and then appUes encryption, error control coding, and bit interleaving. The resulting message is sent to SCC 48, which inserts the bit-sync pattern and transmits the message data at the beginning ofthe next frame. The processing steps are summarized as foUows:

1. NDC 10 computes base message data packets and sends them to NTCC 47. 2. On each one second interval, NTCC 47: a) Assembles avaUable data packets from NDC 10, frame number, and DGPS corrections, if necessary, into a single message block. Unused bytes are filled with a pad. b) Performs encryption on the message block. c) Performs error control coding on the message block. A Golay (23,12) code is used in the presently preferred embodiment, but a different code may be used. d) Performs bit inter-leaving. Data is transmitted by sending long segments of aU bit l's foUowed by bit 2's etc., which provides significant burst error correction capabUity. e) Sends the message block to SCC 48 for transmission.

3. SCC 48 inserts a bit synchronization pattern in front ofthe message block, MUler encodes the data, and transmits it to the sucarrier modulator 68 (FIG. 6) at the start ofthe frame after the message block is received from NTCC 47.

The format ofthe message block is as foUows. The maximum bit rate for the

SCA-300B subcarrier modulation generator used as 68 is 4800 bps. It is desirable to use the maximum avaUable bit rate consistent with modulation index requirements (for receiver sensitivity) and data block size. A Golay (23,12) code is used with bit interleaving; data is sent in 40x23 = 920 bit blocks. Five blocks are transmitted for a total of 4600 bits. SCC 48 Mller encodes the data and adds the bit sync. The MUler code doubles the number of bits so the SCC wiU transmit data at a bit rate of approximately 9328.36 bps. 4600 bits require 986.24 miUiseconds. Since an 8 bit preamble and 24 bit long bit sync require 6.8608 msec, SCC 48 has a 6.8992 miUisecond gap time to restart the transmit clock with updated synchronizations to send the next message. FIG. 7 is a diagram ofthe base (NDC) message broadcast format. At the start 70 of each integer second the bit-sync pattern 71 is transmitted, foUowed by the base message data 72, and finaUy by a very brief interval 73 of dead time up to the start ofthe next integer second. Bit interleaving is applied to the base message to reduce susceptibiUty to burst errors. Interleaving is appUed on a block by block basis. The Golay code corrects 3 errors in 23, so 40 bit deep interleaving aUows a burst of 120 bits or 25.728 mUUseconds to be corrected. This is long enough to correct desensitization that occurs in the shared transmit/receive antenna when a tracker transmits in its 20 miUisecond TDMA slot.

For bit synchronization, the trackers and Net Hubs use the bit-sync in the FM broadcast to synchronize their clocks for transmission and reception of tracker data. Trackers with vaUd position data can use the known range to the FM broadcast site to offset their transmissions to account for the delay in reception ofthe bit-sync.

For tracker identification, aU trackers are assigned a 30 bit tracker ID at the factory, unique throughout the PROTRAK system. While this could be the only ID used to identify a tracker, a shorter ID is assigned to trackers when they receive their main repeating interval slot assignment, which aUows the NDC Server to identify trackers in its RF network grid with fewer data bits. The shorter IDs consist of a Network ID and an interface ID. Since two network sizes are used, the most significant bit ofthe 16 bit ID is used to indicate the network size. Table 1 below shows the Network/Interface ID format for the two lot sizes used.

Table 1. Network Interface ID Format 

Figure imgf000029_0001  

To minimize disruption ofthe text, other tables are, for the most part, set forth in Appendix B.

Trackers may be assigned an ID within one ofthe 128 Networks with 256 Interface IDs or one ofthe 2048 Networks with 16 Interface IDs. Network IDs are used by the NDC Server to reduce the number of bits required to identify a subset of a customer's tracker modules. For example, if a fleet operator sends a message to ten of its trackers (vehicles) that are aU contained in the same 16 tracker network, the NDC server may individuaUy address these trackers using 52 bits, with 12 bits indicating the Network ID an only 4 bits being required to identify each tracker Interface ID.

Since the DMCS manages customer groups, the NDC server may coordinate with the DMCS to learn about customer groups. Or, the NDC server may use logged data to determine what trackers have been grouped together. As a result, the NDC server places trackers ofthe same group and/or customer ID into the same network. WhUe trackers from different customers and/or groups may be placed in the same network, tracker groups that are placed together in the same network may be identified with a relatively smaU number of bits.

The Network/Interface ID assignment scheme is used in data packet formats. The base broadcast data contains a variable number of short data packets concatenated together, which are of fixed or variable length depending on type. The packets include DGPS correction data, network description information, user commands and messaging, and tracker control commands.

A. Data Packets and Formats Data packet decoding is performed after error detection/correction and decryption.

Each base message (i.e., from NDC 10) begins with a frame ID. Data packets foUow until the avaUable space in the data block is filled or no packets remain to be sent. The unused space in the message is fitted with att zeros that encode to an alternating one-zero pattern in MUler code. Each packet starts with a packet ID byte foUowed by the data in the packet and a checksum/parity word. Synchronization ofthe packet decoder on the data is maintained by verifying the first byte after the frame ID is a packet ID, and then looking ahead the number of bytes in the first packet to verify that checksum is correct and the subsequent byte is also a vattd packet ID. This continues until aU ofthe data packets are decoded. A Base Packet Summary is set forth in Table 2 (Appendix B). Text message packets are generated in response to messages/paging commands from user command stations (i.e., from the CCSs). By way of example for the present exemplary embodiment, the maximum message length is assumed to be 80 characters. In addition, an optional 28 character response set may be appended as discussed below with reference to pre-defined message response sets. Text messages may be addressed to the trackers (i.e., to tracking computers instaUed in the vehicles 17) in the foUowing ways:

Tracker ID

Network Interface ID

Customer ID • Interface ID

Interface ID range within a Network

In the present exemplary embodiment, the tracker ID number is 30 bits, the Network/Interface ID is 16 bits, and the customer ID is 24 bits. A variable number of address bits are reserved depending on address mode and number of trackers being addressed.

Acknowledgment of text messages is performed by the tracker requesting an auxiUary repeating interval time slot. The auxiUary slot repeats at 12 second intervals and includes enough slots to send the acknowledgment, e.g., one plus additional slots to aUow for retries. Table 3: "Text Message Packet - Single Tracker or Entire Fleet"; Table 4: "Pre-Defined Message Response Sets"; Table 5: "Test Message Packet - Tracker Group"; Table 6: "Tracker Group Message Interface ID List Packet"; and Table 7: 'Tracker ID List Block", are set forth in Appendix B.

A "Pre-Defined Message Definition" packet (Table 8, Appendix B) provides trackers (sometimes referred to herein as tracker modules) with a text message that should be associated with a specified pre-defined message ID. Although individual trackers request this definition, the message is broadcast to aU trackers associated with a particular customer (fleet operator, subscriber or user, as those terms are used interchangeably herem). Trackers receiving this message store the pre-defined message definition if the specified customer ID matches their known customer ID. This stored association is then used to display the appropriate message upon receipt of a "Pre-Defined Message Packet." The latter packet allows a shorter message format for "canned" user messages that are frequently transmitted by an individual customer. Since the trackers know the text of these messages a priori, only a message ID and a 16-bit cychc redundancy check (CRC) need be sent by the NDC. The ID identifies the message and the CRC aUows the tracker to determine whether the text matches the CRC ofthe known pre-defined message.

Pre-defined message CRCs are computed using the entire pre-defined message. Hence, a tracker may determine if the ID has been reassigned to a new message. If that is true, or if a specified pre-defined message is unknown, the tracker may request the entire pre-defined message using a "Pre-Defined Message Request Packet." Upon receipt of such a request packet, the NDC server provides the requesting tracker with the predefined message in a "Pre-Defined Message Definition Packet." Tracker addressing is simttar to that for text messages. The "Pre-Defined ID Message Packet" structure for a single tracker or entire fleet is shown in Table 9, and for a tracker group, in Table 10, of Appendix B.

DGPS correction data packets (Table 11) are generated by the NTCC and inserted into the base message block at roughly 10 second intervals. The range/range-rate corrections are computed by the GPS receiver (e.g., 54, FIG. 6) in the NTCC roof module 55. These may be in RTCM or other desired format. The scaling on the corrections is the same as that in RTCM-104. The NTCC transmits correction data in a format with complete "Type 1" and "Type 2" style corrections. Other RTCM message types may alternatively be supported if deshed. RTCM message types 1 and 2 have the same format, with only the frame IDs being different. The packet is of variable length depending upon the number of corrections therein. The number of bytes is 5+5Nsv.

A User Data message packet supports generic, user specific data that is sent to the trackers from CCSs. The format ofthe message is simUar to the text message packet, having 80 data bytes avaUable for any customer purpose. Customer specific software must be programmed into the tracker, MDT, and CCS for the customer to make use of this message. User Data packet addressing and acknowledgments are identical to those of text packets. The 'TJser Data Message Packet" structure for a single tracker or entire fleet is shown in Table 12, and for a tracker group is shown in Table 13.

A "Grid Identification packet" (Table 14) provides the trackers with the center of local and adjacent PROTRAK navigation grids (e.g., see FIG. 11, to be discussed presently herein). In an exemplary embodiment, the navigation grid is a square area about

262 Km on a side, roughly centered on each PROTRAK market area. Each navigation grid (market) has a unique 15 bit ID number. The "Grid ID packet" is transmitted at roughly 20 second intervals, and alternates between the local grid and adjacent grids. Adjacent grid information is provided to aUow roaming trackers to quickly locate the PROTRAK system in new markets as they move through markets. Preferably, the trackers store grid information in non-volatile memory.

The center ofthe navigation grid is provided in 24 bit scaled integers with an LSB (least significant bit) of about 2.4m in latitude, which should be adequate for most tracker navigation appUcations. The nominal navigation grid is assumed to be square and made up of 1024 adjoining 64 square Km squares. If necessary, additional data may be added to this message to define rectangular or oddly shaped navigation grids. An 'TM Identification packet" (Table 15) provides the trackers with the FM base broadcast frequencies and transmitter locations for the local and adjacent PROTRAK navigation grids. The transmitter location is used for broadcast delay time computations. The frequency ofthe subcarrier is also provided. Preferably, the trackers also store transmitter information in non-volatUe memory. The transmitter location is provided in 24 bit scaled integers with an LSB of about 2.4m in latitude, which is quite adequate for broadcast delay computations. Each navigation grid may have multiple FM transmitters. The packet supports up to 4 transmitters by a transmitter ID number. If required, additional data in this message or another message may be used to define grid areas served by each transmitter for capacity or coverage reasons.

A "UHF Identification packet" (Table 16) provides the trackers with the UHF frequency on which they are to transmit their state data. Frequencies are provided for the local and adjacent PROTRAK navigation grids. Here again, the trackers should store the UHF frequency information in non-volatile memory. Each navigation grid may have multiple tracker transmit frequencies, and the "UHF Identification packet" supports up to

4 frequencies by a frequency ID number. If necessary, additional data in this message or another message may be used to define grid areas in which to use each UHF frequency for capacity or coverage reasons.

NDC 10 transmits a packet containing the current GPS time at 10-20 second intervals to aid the initialization ofthe vehicle-mounted GPS receivers associated with the trackers. The "GPS time packet" (Table 17) is computed and inserted into the base message block by the NTCC. The time zone offset and UTC leap seconds are added to the current GPS time to determine local time.

A "set main repeating interval slot definition packet" (Table 18) assigns a continuous repeating interval and a Network/Interface ID to a tracker. Trackers receiving this packet send a tracking update to NDC server 42 when (Frame ID) mod (Interval Length) is equal to the repeating interval index indicated in the packet. If a tracker already has an assigned main repeating interval, it wttl be replaced by the interval in this packet. Trackers can determine if this packet is addressed to them by checking whether the tracker ID field is equal to the recipient's tracker ID. If it is, the tracker witt use the assigned repeating interval and Network/interface ID. Otherwise, the tracker wttl ensure that none of its repeating intervals match the described interval. If the described interval matches the tracker's current main interval, the tracker wttl cease using this interval (and Network Interface ID) and attempt a network entry. Or, if the described interval matches one the tracker's current auxiUary intervals, the tracker wttl remove this interval from its Ust.

The Network/Interface ID assigned with the main repeating interval is vaUd while the main repeating interval is valid. As a result, trackers will respond to messages with their Tracker ID or their temporary Network/Interface ID while they are in the RF network. Once a tracker exits from the RF network (or had its main repeating mterval purged), the associated Network/Interface ID is no longer vattd for that tracker. Trackers receiving a mam repeating interval assignment may use the assigned interval until they request to exit the network, acknowledge a purge repeating interval packet, or exceed the self- purge update count.

An "add auxiUary repeating interval slot definition packet" assigns a repeating interval to a tracker for a single interval (Table 19). Trackers that receive this packet send a tracking update to NDC server 42 when (Frame ID) mod (Interval Length) is equal to the repeating interval index indicated in this packet. As a result of receiving this packet, trackers wttl send a single update. Trackers may determine if this packet is addressed to them by using the tracker ID or the Network/Interface ID field. If the tracker ID field identifies the recipient, the tracker wttl use the assigned repeating interval to report its tracking information to the NDC server. Otherwise, the tracker wttl ensure that it does not report its tracking information using the described interval. It should be noted that although a tracker may have multiple auxiUary repeating intervals, each tracker only has one main repeating interval. Table 20 (Appendix B) shows the "Add Auxiliary Repeating Interval Slot Definition packet" structure for a single interval by network/interface ID.

The "add auxiUary repeating interval slot definition" packet for a limited number of intervals assigns a repeating interval to a tracker for a specified number of intervals. Trackers that receive this packet send a tracking update to the NDC server when (Frame ID) mod (Interval Length) is equal to the repeating interval index indicated in this message, and these updates are sent by the trackers an interval count number of times.

Here again, trackers may determine if this packet is addressed to them by using the tracker ID or the Nelwwk/Interface ID field, and report their respective tracking information to the NDC server, or not, in the same manner as specified above. Tables 21 and 22 show the structure ofthe "Add AuxiUary Repeating Interval Slot Definition" packet structure for a Umited number of intervals by tracker ID and by network/interface ID, respectively. An "AvaUable Network Entry Slots" Packet (Table 23) contains a slot count that indicates the number of slots within a one-second frame, and a bit mask that indicates the slots that are currently available for network entry. Bit 0 of byte 2 indicates if slot 0 is available, bit 1 of byte 2 indicates if slot 1 is available, bit 0 of byte 3 indicates if slot 8 is available, etc. Before a tracker is aUowed to send a "Net Entry Request" packet, it must receive an "AvaUable Network Entry Slots" packet and successfully receive every base packet message prior to sending its "Net Entry Request." The packet is only vaUd until the next one is received, so the tracker wttl not send a network entry request in a slot that is no longer available. The NDC server 42 broadcasts this packet as the available network entry slots change, and also sends it at least once every 10 seconds. A "Repeating Interval Slot Configuration Information" Packet (Table 24), sent every 30 seconds by the NDC Server, indicates the frame cycle length, the self-purge interval count, and the tracker ID request mode. Each of these values is needed for a tracker to determine the transmit timing and/or format of its periodic tracking update packets. The frame cycle length indicates the number of one-second frames that are contained in a frame cycle. Since this number will always be a divisor ofthe number of seconds in a GPS week, a frame ID may be determined using GPS time. The Frame ID is calculated using the GPS Second as foUows:

Frame ID = (GPS Second) mod (frame cycle length)

The self-purge update count indicates the number of periodic updates that a tracker may provide in an assigned repeating interval slot without requesting to re-enter the network. Trackers with an assigned repeating interval slot must request to have their repeating interval slot re-assigned to them by indicating "Re-assign Main Repeating Interval Slot Request" or "Re-assign AuxiUary Repeating Interval Slot Request" for their network status code. Trackers that fail to have their repeating interval slot re-assigned before reaching the self-purge update count will purge their assigned repeating mterval slot.

The "Tracker ID Request Mode" indicates if trackers are required to supply their tracker ID number within tracker data packets. This request mode may indicate that trackers are not required to supply their tracker ID number, trackers are required to supply their tracker JD for their next update only, or trackers are required to supply their tracker

ID for all updates.

Tracker modules coUect built-in test (BIT) information, which is then suppUed to the NDC Server at the rate (in seconds) specified in the "Repeating Interval Slot Config Info" packet. If the rate is zero, the tracker is not required to supply the BIT packet. If the rate is greater than zero, the tracker wttl provide its BIT packet at the rate indicated.

To supply a BIT packet update, trackers request an auxiUary slot when (tracker ID) mod (BIT packet rate) equals the current frame ID. As a result, tracker requests for auxiUary slots are distributed evenly. If a request for auxiUary slot would interfere with a tracker's scheduled update, the tracker wttl defer the request to a later time. The NDC server uses a "Network Entry Response" packet (Table 25) to respond to a tracker's network entry request when the tracker's service type does not otherwise permit network entry. The assigned tracker state code contained in this packet enables a tracker to determine its type and requirements to be assigned a repeating interval slot. Manual tracking trackers are to wait for a "Repeating Interval Slot Definition (Single Interval)" packet, and login-only tracking and unknown trackers must wait for a "Network

Entry Request Permission" message. The NDC server 42 may send a "Network Entry Request Permission" message as a result of a CCS (e.g., 14, FIG. 3) connecting to the DMCS 27 or because an individual tracker's service type has changed.

The NDC erver sends a "Network Entry Request Permission" packet (Table 26) to a subscriber's entire fleet of LOT trackers, to a subscriber group of trackers, or to an individual tracker, for one or more trackers to request network entry. If a subscriber is not connected to view its group of LOT trackers, the trackers are not aUowed to enter the RF network but are notified instead to wait for network entry request permission. When a subscriber connects to the DMCS using CCS software, the DMCS checks whether a subscriber with this ID is already connected, and, if not, sends a message to the NDC

Server identifying aU trackers in the CCS user's group. The NDC Server responds to this message by sending a 'Ηetwork Entry Request Permission" packet to aUow the trackers in the CCS user's group to request network entry. Depending on the subscriber group size or subscriber fleet size, this packet may be sent by the server to the entire fleet or to only a group of trackers, with a view to reduce the required RF bandwidth as much as possible. The "Network Entry Request Permission" packet may also be sent if a tracker's service type is modified, such as if a manual tracking tracker is changed to a continuous tracking tracker.

A "Purge Assigned Repeating Intervals" message (Table 27) is sent by the NDC server by Tracker ID, Customer ID, or Tracker ID List Packet, to indicate that a tracker or a group of trackers should purge some or att of its assigned repeating intervals. This would be done, for example, when the only subscriber in a group of LOT trackers disconnects from the DMCS, because information from those trackers is no longer reported when its viewing is ceased by the disconnected subscriber. The DMCS provides a list of trackers to be removed from the RF network to the NDC Server. The "Purge Assigned Repeating Intervals" message may also be sent to individual trackers, such as where a continuous tracking tracker has its service changed to manual tracking, in which case the tracker in question is informed of its new service and to wait for a repeating interval slot. Similarly, if an individual tracker's service type and update rate are both changed (e.g., from continuous with an update rate of 30 seconds to LOT with an update rate of 60 seconds) it wttl be sent this message if its subscriber is not connected to the

NDC server. And where a tracker has been assigned an auxiUary interval for an emergency condition, to report data at a high update rate, for example, for a short period in addition to its main repeating interval, the message is sent by the NDC server to that tracker when the emergency ends, to purge its auxiUary repeating interval. Trackers acknowledge receipt ofthe "Purge Assigned Repeating Intervals" message by setting the appropriate status bit in their next periodic update, or, if necessary, by requesting a one-tune slot to provide an acknowledgment. A tracker whose main repeating interval slot is purged may use that slot a final time to provide the acknowledgment in a state and status tracker packet. When the NDC server receives a purge acknowledgment, it may reassign the repeating interval slot at that time, or wait until a self-purge update count has been reached to re-assign it. When a Text or Pre-defined text message is sent to a tracker, a pre-defined or custom response set may be identified, indicating the text labels associated with the mobtte data terminal softkeys when the message is displayed. When a softkey is pressed to respond to a message, the softkey number is returned to the NDC server in a "Message Response State and Status" or a "Message Response Reduced State and Status." A

"Message Response Acknowledge" base message (Table 28) acknowledges the NDC server's successful receipt of a response packet. A message response is only discarded by the tracker module if it successfuUy received an acknowledgment within 2 minutes; otherwise, the response is re-sent. A "Site Dispatch" Message (Table 29) aids in automating the fleet operator's abihty to determine when a specific tracker has arrived/departed from a job site, by providing the tracker module a pair of latitude/longitude values that define the tracker's next job site, and a text description ofthe site location (destination address). Upon receipt, the tracker module acknowledges the message using a "Message Response State and Status" or "Message Response and User Data" packet.

Trackers send "Site Status" packets when they enter or leave one of their known sites. A "Site Purge" Message packet (Table 30) from the NDC requests a tracker to remove one of its known sites. After receiving this packet, the tracker wttl no longer provide a "Site Status" message for the site associated with the "Site ID" specified in the "Site Purge" Message.

A "User Data Acknowledge" packet (Table 31) serves to acknowledge the NDCs receipt of a reUable user data message from a vehicle's tracker. The tracker retains a copy of aU reliable user data packets unttt it receives this acknowledgment message from the NDC server. If the acknowledgment is not received within 2 minutes, the tracker wttl resend the reUable user data packet.

An "NDC server Boot Sequence ID" may be used by the tracker to determine if the NDC server of a navigation grid (see the reference to and discussion ofthe "Grid Identification" packet above) has re-booted. When a tracker module discovers that this ID has changed, it purges aU RF state information (including RI Slot assignments) received with a previous boot sequence ID. New RF state information received is then associated with the new "NDC server Boot Sequence ID." The "NDC Server Boot Sequence TD" aUows trackers in low-power mode or trackers that have been out of FM subcarrier range to determine if their RI Slot and other information is still valid. Trackers that have been so for an extended period of time must ensure that the NDC Server boot count has not changed before they provide a tracking update. A "Grid Identification Packet2" (Table 32) provides the "NDC Server Boot Sequence ID."

A "Site Status Acknowledge" packet (Table 33) is used to acknowledge the NDCs receipt of a reUable "Site Status" message from a tracker. The tracker retains a copy of each reUable site status message packet until it receives this acknowledgment message from the NDC Server. If the acknowledgment is not received within 2 minutes, the tracker re-sends the reUable "Site Status" packet.

B. Tracker Messages

Tracker messages are transmitted from the trackers to the NDC over the TDMA UHF radio network. Tracker data consist of navigation state information, responses to network related commands from the NDC, paging/messaging responses, and user specific data. Each tracker has its own unique assigned repeating interval slot(s) to transmit its data. The data are received by the network hubs and transmitted to the NDC when each frame is complete. According to an aspect ofthe mvention, since a tracker data packet may be received by more than one hub, the NDC is provided with a capabihty to perform diversity processing to aid in recovering corrupted data. Although, according to the invention, trackers generaUy have an assigned continuous repeating interval time slot in the TDMA network, provision is made for trackers with low update rate requirements to operate in a polled mode, in which NDC 10 must request such low update-need tracker instaUed on a vehicle 17 to transmit during a single repeating interval time slot. A short time before the tracker's assigned transmit time, the tracker must assemble a packet of data for transmission. Based on the broadcast FM bit-sync received at FM receiver 58 of NTCC roof module 55 and estimated distance to the broadcast antenna 53 (FIG. 6), the applicable tracker must begin its transmission at its assigned transmit time within its assigned repeating interval slot with an accuracy of about one microsecond. Over each frame, each Network Hub 11-1, etc., attempts to receive data from trackers in every time slot. At the end ofthe frame, Hub-received packets are packed into a single message and sent via modem to the NDC 10. The NDC server 42 performs error correction and diversity processing on the tracker packets from aU ofthe hubs. Tracker state data is logged and/or transmitted to the apphcable CCS and/or NDC Command Stations via the TCP/IP or other connectivity appUcation. Surrimarizing, the processing steps are:

1. On the frame prior to its assigned repeating interval transmit slot, the tracker: a) Forms a data packet to be transmitted; b) Performs encryption on the message; c) Performs error control coding on the message (preferably using a (12,8) code, although a different code may be employed if desired); d) Performs bit interleaving (a complicated interleave pattern is required to reduce bit errors when the data is shifted by 1 bit from truth, to permit the hub baseband processing. The interleave scheme provides a depth of 11 bits, wliich improves burst error correction capabittty).

2. A high resolution timer synchronized to the GPS integer second using the FM bit-sync and tracker position is set to trigger the tracker transmission at the appropriate time with an accuracy of about one microsecond.

3. Each hub attempts to clock in data at the appropriate time for each slot. 4. At the end of a frame, the hubs send all tracker data received over the frame to the

NDC.

Tracker message timing, and format ofthe tracker data block must be considered. The tracker broadcast TDMA network consists of 168 frame cycles in one week, with each frame cycle having 3600 one second long frames. Each frame is divided into several tracker transmit time slots. The number of slots depends on the tracker message length, the transmit bit rate, and the required gap between slots for transmitter power up/down and message propagation delay. The transmit rate is 7812.5 bps (15625 bps MUler encoded). A tracker message length is 144 bits, 8 Mitter bits of preamble (10101010). The transmit data requires 18.944 milliseconds. A total slot time of 20 miUiseconds is therefore aUocated to aUow for speed of Ught delays and transmitter power on/off time; accordingly, 50 tracker transmit slots are available on each frame. An example of one tracker transmit frame is shown in FIG. 8, in which vehicle (tracker) message packets 76 are sequentially transmitted in their (the trackers') respective assigned slots from the start 77 of an integer second, and foUowed by an interval of dead time 78 (if necessary) which is sufficient to occupy the balance ofthe frame up to the start 79 ofthe next integer second.

Because of hardware limitations and CPU load tunes required to setup transmit timers and clocks, a tracker cannot transmit in two adjacent time slots. The gap between tracker transmission slots must be large enough to account for propagation delay ofthe radio signal through the air and tune required for the transmitter to come on and off power. The worst case propagation delay is 1.2 msec. This is the time it takes Ught to travel twice the length ofthe navigation grid diagonal. A gap time this long wttl prevent the transmission from a tracker that is 181 Km from the FM transmitter and is using only the FM bit-sync for transmit timing from overlapping with the transmission from a tracker that is near the FM transmitter and using GPS to aid transmit tuning. Given tracker transmit power and antenna heights, a reasonable distance at which a hub can hear a tracker transmission wttl be about 30 Km. Therefore, the gap time must support about

211 Km or 0.7 msec. The radio on/off power time is required to be less than 0.1 msec. Hence, the total gap time between tracker transmissions must be at least 0.8 msec.

The normal tracker data packet requires 90 data bits (including 24 user data bits). The other tracker data packets require 90 or 96 data bits. These message packet size requirements directly drive error control coding requirements for the packets. The present exemplary tracker packet error coding design uses a (12,8) code for aU tracker packets, which provides a total packet length of 144 bits with 96 data bits for aU time slots.

The trackers use the one second interval bit-sync in the FM broadcast for their transmit timing. The transmission time is accurate to within one microsecond. In the present approach, the tracker estimates the integer second time from the received FM broadcast bit-sync event time. The timer value of a TPU (i.e., time processing unit ofthe 68332 microprocessor used in the trackers, CCSs, and Networks Hubs) for each integer second wttl then be known. From that, the TPU tuner value for the start ofthe tracker's transmit tune can be computed. The TPU is programmed to assert the transmit key to start the output data clock precisely at the start ofthe transmit slot time, and to de-assert the key to stop the data clock when the message is complete.

For data clocking at the Network Hub (e.g., 11-1, which is to be described in greater detail in the subsequent description of FIG. 31, but for present purposes brief reference is now made to the latter), a digital signal processor (DSP microprocessor) 80 is used at the Hub to demodulate the message data received from the vehicle trackers by the

Hub's UHF receiver 81 and provide it to the Hub CPU 82. CPU 82 determines the TPU time (ofthe Motorola 68332 microprocessor 83) for the integer second based on the FM broadcast bit sync received at FM receiver 85. The two receivers 81, 85 and the DSP 80 are on an RF card 86 ofthe Hub. CPU 82 signals DSP 80 to begin sampling UHF data at the start of each transmit slot time. The DSP then collects data, recovers the bit clock, and samples the bits. It performs MUler decoding, de-interleaving, and (12,8) error detection for up to 13 different bit delays to support the unknown speed of Ught delay from the tracker to the hub. The bit delay with the lowest number of code words with errors is selected, and that data is clocked to CPU 82 for transmission by the Net Hub to NDC server 42 (FIG. 3) at NDC 10 via a modem 87 or other connectivity option. DSP 80 must complete all of its processing in the 20 tnilttsecond window avaUable for each tracker transmission.

As described earlier herein, each one second frame is divided into fixed length tracker packet transmit slots. Since the number of slots within a frame is also fixed, the trackers in the system ofthe invention must share these transmit slots. Most trackers transmit their state, position, and/or user data information on a periodic basis.

Accordingly, a periodic slot aUocation scheme is selected for use by which to share individual slots within a frame across an interval of time.

In this periodic slot aUocation scheme, individual slots are associated with repeating intervals. This allows trackers with a common periodic update rate to share a specific slot across an interval (equivalent to the common periodic update rate) of time that contains multiple frames and is a divisor of 3600. FIG.9 iUustrates a repeating interval for several individual transmit slots for tracker message packets, showing the repeating interval relationship to slots, frames, and frame cycles. Frame cycle 90 consists of a multipUcity of frames (e.g., 90-1, ..., 90-i, ..., 90-n) as mentioned above. Each frame contains a multipUcity of slots 91 which are aUocated to tracker message transmissions according to the scheme. The interval index for the repeating interval 92 associated with slot 0 is different from the interval index for the repeating interval 93 for slot 1, and so forth for slots 2, ..., n-2, n-1, n. The interval index shown may be calculated using the foUowing equation:

Repeating interval index = (frame ID) mod (interval length)

Trackers are assigned one main repeating interval and/or multiple auxiUary repeating intervals to transmit their tracking data. Tracking data is transmitted by the trackers during their main repeating interval until they are informed to cease transmitting by the NDC server, or until the tracker's state changes (e.g., switches to low-power mode). Main intervals are only assigned to trackers with continuous or LOT tracking service. Trackers transmit their tracking data during auxiUary intervals for a specified number of times unless their state changes or the NDC server informs them otherwise. One or more auxiUary repeating intervals may be assigned to trackers of att service types.

As indicated in FIG. 9, each repeating interval is defined by a slot, a repeating interval index, and an interval length. In addition, auxiliary repeating intervals have an interval count. Since a tracker may calculate the frame ID using the GPS second, the repeating interval index may also be calculated using the repeating interval length and the frame ID. Trackers wttl transmit their tracking mformation in their assigned slot during the frame when the (frame JD) mod (interval length) is equal to their assigned interval index. Auxiliary repeating interval updates are provided by trackers an interval count number of times. Trackers that are assigned an auxiUary repeating interval with an interval count of -1 will provide tracking updates indefinitely during theh assigned repeating interval.

As noted above, very long update intervals — e.g., longer than 3600 seconds ~ may be handled by polling. Trackers having such long update needs do not have an assigned continuous repeating interval, but transmit only on command from the NDC server. Tracker update repeating interval rates are summarized in Table 34 (Appendix B).

Since slots within a frame are dynamicaUy associated with a repeating interval, so that trackers with a common tracking update rate may share a slot across an interval of time, the NDC server uses a set of repeating interval slot assignment algorithms to » dynamically associate slots with repeating intervals, as foUows.

InitiaUzation:

Make att slots network entry slots.

Add a tracker to a desired repeating interval for a desired interval count: 1) Add tracker to best avaUable repeating interval: • Search for a slot associated with the desired repeating interval with the least amount of space available, • If an available repeating interval is found, add the tracker to the repeating interval for the desired interval count and set mterval status equal to assigned,

If tracker was not added to a repeating interval, go to step 2,

• Else, grant request.

2) Associate desired repeating interval with an available network entry slot. ° Search for an available network entry slot,

• If an available network entry slot is found, associate the slot with the desired repeating interval,

Else, if repeating interval ≠ to frame cycle length, change desired repeating interval to next available repeating interval. Go to step 1. 3) Add tracker to the interval associated with a slot in step 2.

Add tracker to the interval for the desired interval count, Grant request.

Find the tracker ID for a received packet (and decrement interval count if necessary): 1) Use the packet's slot number to deteπnine if the slot is associated with a repeating interval.

2) If the slot is associated with a repeating interval, determine the tracker ID using the interval index, reset the missed update count, decrement the interval count if necessary, set the interval status to active, and free slot if necessary. • Compute the interval index: (packet frame ID) mod (interval length)

• Use the interval index to determine the tracker ID. Set the missed update count to 0.

• If interval count is ≠ to -1, decrement the interval count.

• If interval count = 0, remove tracker from repeating interval. If no other trackers are associated with this slot's repeating interval, convert this slot to be a network entry slot.

3) Else, the slot is a network entry slot. The tracker ID should be in tracker packet.

Process empty slot: 1) Use the missed packet update slot number to determine the slot type.

2) If the slot is associated with a repeating interval, increase the tracker's missed update count.

3) If interval status = assigned or mterval status = active, poll tracker.

4) If interval status = assigned, re-broadcast repeating interval slot assignment.

Remove tracker from repeating interval:

1) Search for slot associated with the tracker's repeatmg mterval.

2) Remove tracker from repeating interval.

Set interval status = empty.

Send base packet to tracker to purge assigned repeating interval. 3) If no other trackers are associated with this slot's repeating interval, convert slot to be a network entry slot.

The NDC server 42 maintains information in memory regarding the relationship between trackers, slots, and repeating intervals, as a form of repeating interval slot assignment storage. FIG. 10 is a diagram that iUustrates the repeating interval slot entity relationship, with the diagram notations that: box = entity oval = attribute double box = weak entity underline = key diamond = relationship dashed underUne = partial key double diamond = weak relationship dashed oval = derived attribute

(x, y) = (minimum, maximum)

Also, uncaptured constraints are as foUows:

1 <= interval length <= frame cycle length

Interval length is a divisor ofthe frame cycle length

Interval index = (Frame ID) mod (interval length)

If the interval count = -1, trackers provide updates indefinitely.

Interval status = {empty, assigned, active, inactive} Interval type = {main, auxUiary, none}

Thus, for example, the "Requests Network Entry in" relationship (diamond 100) in FIG. 10 indicates that trackers may request network entry in slots (double box 101) that are not associated with a repeating interval (double box 102). Hence, trackers must be notified of valid network entry slots before they attempt to request network entry. And the "provides updates in" relationship (diamond 103) indicates that trackers provide tracking updates in repeating intervals (double box 102). In addition, attributes such as interval type (oval 104), interval count (oval 105), interval status (oval 106) and missed update count (oval 107) are associated with this relation. Interval count indicates the number of repeatmg intervals a tracker should transmit its tracking information. Missed update count indicates the number of successive times a tracker has missed providing its tracking update during its assigned repeating interval. Interval status is an enumerated type that indicates if an interval is empty, assigned, active, or inactive. Interval type is an enumerated type that indicates if a repeating interval with a non-empty status is a main or auxiUary interval or no mterval is assigned. The tracker message block format of the data transmitted by the trackers consists of an error coded and bit-interleaved data block. Since the UHF transmitter/receiver requires that the data contain frequent state changes so that the phase-locked-loop (PLL) does not chase the data, the transmit data is MUler line encoded to ensure such state changes content.

The basic data size requirements for information transmitted by the trackers, and the nτirιimum space requirements for tracker state, network status, and network command responses are defined as foUows. Tracker state consists of position, speed, and direction. As previously stated, the PROTRAK system navigation grid for the presently preferred embodiment is about 262 Km on a side. The grid is broken down into 10248.192 Km by 8.192 Km grid zones. The position suppUed by the tracker consists of a grid zone and an offset into the zone from the southwest corner. The nominal navigation grid is square, but other forms such as odd-shaped grids may be used if desired or more suitable in a particular system/network configuration. The odd shaping may be accompUshed by arranging zones in unique patterns.

FIG. 11 is a diagram of a nominal navigation grid, for a latitude of 45 degrees at the center. It should be noted that in practice (but not shown in the idealized Figure) the curvature ofthe earth causes the grid to be wider in latitude at the north than in the south. The lines of constant longitude bounding the grid are about 3 Km closer together at the north end than at the south end ofthe grid.

For a given grid, the grid center latitude and longitude (φ0 , λ0) is provided to the trackers by the NDC in the grid identification packet. The tracker computes its latitude and longitude, (φ, λ), and then computes the offset from the grid center: Δφ = φ - φ0 and Δλ = λ - λ0. The north and east delta positions from the grid center are:

ΔN= p0Δφ Δ£ = v0Δλcos(φ) where p0 and V0 are the earth radtt of curvature: V0 = α/sqrt(l-e2sin2(φ0)) p0 = V0(l-e2)/(l-e2sin2(φ0)) where a is the earth semi-major axis and e is the earth eccentricity.

For example, the lower left corner ofthe 8.192 Km square containing the position is: 

Figure imgf000046_0001  

For the nominal square navigation grid, the 8 Km zone number is computed as Z = (16 + ΔESK) + 32(15 - ΔN^ The NDC computes the original latitude and longitude by adding the north and east offsets to the north and east coordinates ofthe SW comer ofthe zone indicated by the tracker using the foUowing equations:

ΔNgJf = 15 - (Z/32) Δ- = (Z mod(32)) - 16

ΔN= 8192(ΔN5X) + ΔNσ Δ£ = 8192(Δ_ESJi) + ΔE0 

Then it computes latitude as: 

Figure imgf000047_0001  
Then longitude may be computed as: λ = λ0 + ΔE/(v0cos(φ)) 
The fuU latitude and longitude are provided to the applicable CCS by way of message data from the tracker to the Network Hub(s), which is forwarded on to the NDC and then to the customer site. The amount of data required to describe the tracker state is 48 bits. The zone ID number requires 10 bits. The north and east offsets within the zone each require 11 bits for a resolution of 4 meters. Speed requires 7 bits for a resolution of 0.5m/sec (about 1.1 mph) and a maximum value of about 143 mph. Heading requires 7 bits for a resolution of 0.015625 semicircles (about 2.8 deg). Two state data validity bits are defined. Two additional spares can be provided to make the state data fit simply mto a 48 bit "Tracker

State Data Block" (of which Byte Bit Definitions are summarized in Table 35).

A "Reduced State Data Block" (Byte Bit Definitions summarized in Table 36) is required so that trackers may provide their fuU tracker ID number, respond to user messages and or NDC Commands, and provide user data. This data block contains only a low-resolution position (8 meters), and requires 34 bits.

A "Network Status Code" (Definitions in Table 37) is used by trackers to enter and exit the RF network. Additional codes may be provided to automate tracking service changes. In the present exemplary embodiment, nine network status codes, out of an available total of 32, are defined. Most data packets provide room for customer defined data to be provided to

CCSs. The NDC simply passes the data through to the customer, the content ofthe data being specific to the needs ofthe respective customers. The user data consists of a minimum of 1 byte, and may be as long as a futt tracker transmit packet. AU of this is defined by the user, and the user data is referred to here as the "User Data Block."

Text messages, pre-defined messages, user data, and site dispatch messages are acknowledged by trackers to indicate their receipt. In addition, text messages, pre-defined messages, and site dispatch messages may require two responses, one being a return receipt that indicates when the message was read, and the other indicating the recipient's softkey response. Acknowledgments/responses are sent to the NDC Server in a "Message Acknowledgment Response" Block (Table 38).

A packet ID number is used to identify each packet. The packet ID requires 4 bits for a total of 16 different packet types. The first 4 bits of each packet are reserved for the

ID Block.

Tracker data packet fom ats include the following. The tracker transmit data block consists of a single data packet, each of which is 96 bits long for a (12,8) error coded block. InitiaUy, aU trackers must send a "Net Entry Request" Packet to enter the RF network. The latter packet aUows trackers to request their main repeating interval slot or a single auxiliary repeating interval.

Once in the RF network, trackers can send a variety of different packet types depending upon the tracker state. The normal packet used by periodic trackers is a state and status packet. A short state and status packet is also used by trackers when the NDC Server requests trackers to provide their tracker ID number. Trackers needing to send a large amount of user data may use the "User Data" packet and/or "Short User Data" packet during its repeating interval. When trackers need to send their tracker ID number, position information, and user data, a "Reduced State User Data and Status" data packet may be used. Trackers needing to acknowledge user data or acknowledge/respond to text/pre-defined messages may use "Message Response" and 'TJser Data" packets.

Tracker packet types are identified by packet ID, with space being provided for 16 different packet types (summarized in Table 39). Unused or spare data bits and bytes in the packets are set to zero. Packets consist of bit-packed data blocks, each of which has been defined earher herein. A "Net Entry Request" packet (Bit Definitions shown in Table 40) is used by tracker modules to enter the RF network. Trackers may request their main repeating interval slot or a one-time auxiliary repeating interval slot. Before a tracker is aUowed to send such a request, it must receive an "AvaUable Network Entry Slots" base packet and continue to successfuUy receive the FM base broadcast until it sends a "Net Entry Request" packet. Ofthe network entry slots available, trackers wttl generate a random number to select the next frame to send the request and generate a second random number to select an available slot. For each random number generated, the trackers may use their tracker JD. If a tracker does not receive a repeating interval (RI) slot assignment within 60 seconds after sending a network entry request, it resends the request.

Since it is possible that multiple trackers may talk within the same slot, the "Net Entry Request" packet indicates the RI slot type and tracker ID multiple times to allow the

NDC server to determine if the packet is valid. Trackers must purge their main RI slot prior to sending a "Net Entry Request" packet. For example, a tracker that has been in "low-power" mode wUl purge its low power slot before sending the net entry request. This rule allows the NDC server to release re-assigned RI slots associated with a tracker requesting net entry.

A "State and Status" packet is the normal packet transmitted by periodic trackers. This packet contains full resolution tracker position, velocity, network status information, and five user data bytes. The "State and Status" packet bit definitions are shown in Table 41 A "ReUable User Data" packet (Bit Definitions in Table 42) provides several bytes of user data. Instead of providing position information during its assigned repeatmg interval, a tracker may utttize this user data packet to send ten user data bytes at one time. If necessary, a one-time repeatmg interval slot may be requested to send/resend this packet. Upon receipt of a "Reliable User Data" packet, the NDC server broadcasts a

"Message Response Acknowledge" message with the same User Data Sequence ID- Trackers must retain a copy of each "ReUable User Data" packet until the NDC server successfully acknowledges it. If an acknowledgment is not received within 2 minutes, the tracker will resend the user data packet. A "Short State and Status" packet (bit definitions ttlustrated in Table 43) is broadcast by trackers during their normal transmission slot when the NDC Server requests that trackers send their status. It contains full resolution tracker position, velocity, one user data byte, and network status information.

A "ReUable Short User Data" packet (Table 44 showing its bit definitions) is transmitted to provide several bytes of user data. Instead of providing position information during its assigned repeating interval, a tracker may employ this user data packet to send six bytes of user data at one time. Upon receipt of a "ReUable User Data" packet, the NDC server broadcasts a "Message Response Acknowledge" message with the same User Data Sequence JD. Trackers must retain a copy of each "ReUable User Data" packet until the NDC server successfuUy acknowledges it. If an acknowledgment is not received within 2 minutes, the tracker resends the packet.

A "Reduced State User Data and Status" packet (bit definitions shown in Table 45) is used by trackers to provide a reduced state and status with user data. The packet contains network status, the fuU tracker ID number, reduced state data, and user data.

A "Message Response and User Data" packet (bit definitions shown in Table 46) is broadcast during a tracker's normal transmission slot. This packet provides both an acknowledgment/response and user data. If necessary, tracker modules may elect to request a single slot to provide this response to the NDC server more quickly than waiting for their normal transmission slot to send the packet. Single slots may be assigned to a tracker using a "Net Entry Request" packet. A "Short Message Response and User Data" packet (Table 47) is broadcast during a tracker's normal transmission slot when the NDC server requests that trackers send their tracker ID. This packet contains the full 30 bit tracker ID, an acknowledgment/response, and user data. As in the case ofthe regular "Message Response and User Data" packet discussed above, if necessary trackers may elect to request a single slot to provide this response to the NDC server more quickly than using their normal transmission slot. Single slots may be assigned to a tracker using a "Net Entry Request" packet.

A "Site Dispatch" message from the customer dispatch office (through a CCS) indicates to the tracker the area of a job site. Consequently, the tracker is able to determine when the tracker has arrived at or departed from a job site. A "Site Status" packet (Table 48) is used by a tracker to indicate job site arrival/departure. This packet indicates the tracker ID, message sequence ID (originaUy associated with the site dispatch message), arrival/departure status, time of arrival/departure, the source of arrival/departure status, and user data.

Geocoding with mapping data may not always be accurate. Hence, it is not always possible to determine if a tracker has reached the job site using the expected latitude/longitude for an address. The tracker sends a "Site Status" packet based on latitude/longitude if arrival/departure occurs (using the latitude/longitude values in the "Site Dispatch" message) to allow the user to manually indicate arrival/departure. The site source bit in this packet indicates how arrival/departure was determined. Initially, the "Site Status" packet may be sent twice for arrival and twice for departure using the two status sources. If necessary, here also the trackers may elect to request a single slot to provide this response to the NDC server more quickly than would occur using their normal transmission slot. Single slots may be assigned to a tracker using a "Net Entry Request" packet.

A "Built-in Test" (BIT) tracker packet is sent to provide the NDC with information about trackers to aid in system testing and to determine whether trackers are functioning properly. At a rate specified in the "RI Slot Config" base packet, trackers provide one ofthe vaUd "BIT" packets in an auxiUary slot requested by each tracker. Each "BIT" packet type should be sent in rotation. If necessary, the "BIT" packet type rotation may be modified to supply urgent buttt-in test information. The bit definitions for the "BIT" Packet are shown in Table 49, and the various types of "BIT" packet data blocks are shown in in Tables 50 (Network and RF System, Type = 0), 51 (Vehicle and Environment, Type = 1), 52 (Navigation, Type = 2), 53 (Version, Type = 3), and 54 (Ready Mix, Type = 4). All values supplied in a "BIT" packet data block indicate the values recorded since the last "BIT" packet ofthe same packet type was supphed to the NDC server.

When a tracker receives a pre-defined message, discussed eartter herein, it displays the known message associated with the specified pre-defined message ID/16 bit CRC. However, if the tracker does not know the message associated with that ID, or determines that the CRC ofthe known message does not match the CRC in the received packet, it may request the message definition by transmitting a "Pre-Defined Message Definition

Request" packet. For more efficient use of bandwidth, this packet may be sent by the tracker in a network entry slot.

When the NDC server receives this request packet, it broadcasts a "Pre-Defined Message Definition" packet (Table 55) that provides the tracker with a pre-defined message ID/message pair. Since pre-defined messages are defined on a customer-by- customer basis, aU trackers associated with the same customer benefit from this message definition packet. Hence, trackers need not always request the message definition packet from the NDC server even when they receive a pre-defined message ID for the first time.

V. Time Division Multiple Access (TDMA) Network Timing

As has been discussed hereinabove, a feature ofthe TDMA network is that it aUows multiple users of a single channel or frequency by assigning specific time slots to each user to use exclusively for transmission of data. Efficient use of bandwidth in such a network requires that the gap tunes between transmissions of each user, which is wasted time, be rrrinimized. The gap time must be sufficient to account for uncertainties in user clocks, propagation delays, and transmitter tum-on and turn-off times. Minimization of clock uncertainty is a primary objective of this aspect ofthe invention.

Transmitter on/off times are a function ofthe electronics hardware. In the overall system, the vehicle computer network interface hardware is optimized to turn on and off in less than 128 microseconds. Minimization of propagation delays is limited by speed of Ught delays between vehicles and hub receive sites. Approximately 800 microseconds are aUotted in the network for worst case near/far vehicle locations of 240 kilometers. With these parameters fixed, then, attention is turned to mimrnizing the clock uncertainty. The simplified block diagram of FIG. 1, described earlier herein but to which reference is again made for purposes ofthe present discussion, Ulustrates the entire TDMA wireless network utilized in the exemplary embodiment ofthe invention. NDC 10 maintains precise synchronization ofthe vehicles 17-1, 17-2, .-., 17-n on-board trackers and the Network Hubs 11-1, 11-2, ..., 11-i to enable operation ofthe TDMA network. Synchronization ofthe timing ofthe trackers with each other and with the Network Hubs which receive the data transmitted by the trackers is achieved through the reception of a synchronization pattern in the data transmitted over the modulated subcarrier broadcast from FM radio station 12. Receivers in the NDC, the trackers and the Hubs receive the FM subcarrier data, and these units ahgn their internal clocks to synchronization pulses contained in the data.

The error budget for clock synchronization between each vehicle (or more specificaUy, the tracker thereof), e.g., 17-1, and the Net Hub sites, e.g., 11-1, is 10 microseconds. It is essential that trackers have the correct time within this window, or ran the risk of transmitting at the same time as another tracker, reducing the UkeUhood that either transmission wttl be correctly received. Similarly, if Hub receivers (e.g., 81, FIG. 31) lack the correct time within the 10 microsecond window, they may not activate at the correct time to receive tracker transmissions. The internal clock reference for each network component, SCC, tracker, Hub receiver, and NDC receiver, in the exemplary embodiment is a temperature compensated crystal oscillator (TCXO) with 1.5 ppm frequency stability. This means that the clock will generate less than 1.5 microseconds of error in one second; however, the 10 microsecond error budget would be violated in seven seconds of free running operation. Clocks in aU ofthe vehicle and receive sites will drift at different rates and different directions. A stable clock reference is required to keep all ofthe clocks synchronized to each other. A GPS receiver located at the NDC as opposed to the transmitter site, is the stable time reference for the TDMA network.

FIG. 12 is a simplified diagram ofthe timing control loop 110 — a remote timing control phase locked loop (PLL) — for the TDMA network. Timing control loop 110 includes a GPS receiver 111 time reference, an FM subcarrier receiver 112, and the NTCC 47, aU located at NDC 10 (here and occasionaUy elsewhere herein referred to as the Network Control Center). PLL 110 also includes SCC 48 at the FM radio station 12 to control the timing ofthe transmitted data, and subcarrier modulator 68 to provide the data to the mixing equipment in a transmitter 113 at the radio station, for broadcast on FM subcarrier signal 114 via transmitter tower 53.

Crystal oscUlators (including TCXOs) are relatively accurate time sources, but drift over time without periodic correction. The GPS receiver 111 acts as a stable, precise tune reference for the TDMA network timing synchronization, that provides a Pulse Per Second (PPS) on a discrete output interface. The PPS is at a GPS time indicated by a message in the serial output interface of receiver 111, typically on integer second boundaries, and is typicaUy accurate to about 300 nanoseconds when subject to Selective AvattabiUty introduced into the GPS sateUite signals 115.

FM subcarrier receiver 112 at NDC 10, which is identical to the FM subcarrier receivers used by the trackers and the Network Hubs, receives the synchronization pulses from SCC 48 in the FM subcarrier signal 114. The same hardware ensures that variation in delay through the receivers is l nimized. The subcarrier receiver 112 determines the time of reception ofthe synchronization pulses relative to the reception ofthe PPS from GPS receiver 111. The difference dt between the average time ofthe synchronization pulses and the time ofthe PPS is provided through a serial interface 116 to NTCC 47. The NTCC software processes the time difference, and computes in different ways depending upon its mode of operation a time correction command to be sent to SCC 48. In its normal, continuous mode, time corrections are computed using a low bandwidth control loop.

Every second, SCC 48 sends a new block of data which is shghtly shorter than one second in length, leaving a very short gap in the data from one second to the next. A sequence of three synchronization pulses is present at the start ofthe data. SCC 48 apphes the received time correction commands to the tune at which it starts sending the next block of data. The gap between data blocks allows the start time ofthe data to be adjusted to be eariier or later than the interval used by SCC 48 at the time the command was issued.

FIG. 13 illustrates the three time synchronization pulses 120, 121, 122 of precisely timed length of 964.8 microseconds with a precise interval of 750.4 microseconds, transmitted by the SCC 48 (FIG. 12) at the start 125 of each second's data. The transmit data 126 immediately follow this synchronization sequence and last for 986240 microseconds. The resulting gap 127 ~ roughly 8600 microseconds long; but varying in length as time corrections sent from the NTCC 47 to the SCC 48 (FIG. 12) are appUed ~ occupies the remainder ofthe one second interval to the start 128 ofthe next one second interval.

The NTCC software performs synchronization ofthe network to GPS time, illustrated by the process flow charts of FIGS. 14A-D. The NTCC runs through four operational modes of time ahgnment, viz.: Initialization (FIG. 14A), Coarse Offset (14B), Coarse Rate (14C), and Fine Rate (14D). In the Initialization mode (FIG. 14A), NTCC 47 (FIG. 12) ensures that the clock interval reported by SCC 48 is within 10 ppm ofthe nominal one second count. Under normal circumstances, the SCC clock interval should be within 2.2 ppm, which is the root sum square (RSS) ofthe 1.5 ppm accuracy ofthe SCC and subcarrier receiver clocks. If it is outside the 10 ppm window, NTCC 47 commands

SCC 48 to adjust its clock interval to the nominal value. The SCC waits for each command to take effect, and when it is within tolerance, sets the time aUgnment mode to Coarse Offset.

In the Coarse Offset mode (FIG. 14B), NTCC 47 takes three samples ofthe time difference dt between the PPS from GPS receiver 111 and the synchronization pattern received at FM receiver 112 from the FM subcarrier. An average offset from GPS time is computed (Σdt/3) from the three values. If the magnitude ofthe offset is greater than or equal to 100 μsecs, a command ϊs sent to SCC 48 to shift the start time ofthe synchronization pulse sequence by the offset amount. NTCC 47 then waits three seconds, repeats the process unttt the 100 microsecond tolerance is achieved, and then sets the time alignment mode to Coarse Rate.

The Coarse Rate mode (FIG. 14C) is used to bring the SCC time offset and clock interval into near alignment in preparation for closed loop operation ofthe Fine Rate mode. The time difference dt reported by the subcarrier receiver 116 is sampled each second for 20 seconds, and a least squares linear fit to the 20 samples is performed. The result ofthe fit is a Une with slope m and offset b: dt= mt+ b where dt is a function of time, /. A rate command is sent to SCC 48 to correct m to zero. Then an offset command is sent to the SCC which compensates for the time required for the fit to be computed and the time required for the command to take effect — a total of 23 seconds: »-(20+3) + b. Once the average offset from the last three samples is under 20 microseconds, the time aUgnment mode is changed to Fine Rate.

In the Fine Rate mode (FIG. 14D), the NTCC runs a low bandwidth PLL to continuously control the network timing and monitors the control loop for error conditions. The values of dt, offset and rate ofthe SCC clock are continuaUy monitored by NTCC 47. If the value of dt is in error by more than 40 microseconds for three consecutive samples, and the average offset is in error by more than 16 microseconds, then the time ahgnment mode is set back to Coarse Offset, and the synchronization flag is cleared. A least squares fit is continuously ran on the clock error signal. If the average value is in error by more than 8 microseconds or the rate is in error by more than 1 ppm for 5 samples in a row, then the mode is set back to Coarse Rate, and the synchronization flag is cleared. If both of those conditions are met when the loop is not synchronized, then the synchronization flag is set.

A block diagram ofthe timing control PLL 110 in FIG. 15 mathematically iUustrates the functions ofthe subcarrier receiver 112, NTCC 47, and SCC 48 in performing tuning control. The closed loop bandwidth ofthe PLL is about 0.014Hz,

(roughly a 70 second period). NTCC 47 continuously samples the dt output of subcarrier receiver 112 and runs the PLL controUer 130 to generate rate commands to send to SCC 48. The rate commands serve to correct for smaU clock errors 131, 132 in the TCXOs of SCC 48 and subcarrier receiver 112. Each computer receiving or transmitting on the TDMA network in the present exemplary embodhnent uses a Motorola 68332 microcontroUer — a 32 bit processor with a 68020 core with on-chip server peripherals. One ofthe peripherals is a Time Processing Unit (TPU, e.g., shown in conjunction with processor 83 in the Hub block diagram of FIG. 30), which has 16 channels of specialized hardware for measuring pulse widths and generating clocks. With a 20 MHz clock, it can make measurements with a resolution of

0.2 microseconds. The TPU is used to detect the FM subcarrier synchronization pulses and generate the precise clocks for transmitted data, both on the subcarrier and by the vehicle tracking computers in the TDMA network.

In so doing, the TPU detects and times the synchronization pulse pattern transmitted over the FM subcarrier. Processing in this regard performed by the NDC subcarrier receiver, the tracker, and the Network Hub receivers is virtuaUy identical. The CPU runs two timers, viz., a 2048 Hz clock for task scheduling and the internal TPU 5 MHz clock (system clock divided by four). For timing purposes, the 2048 Hz clock is used to account for ambiguity in the TPU time due to roUover of its 16 bit counter every 13 milliseconds. TPU channel function assignments are shown in Table 56 (Appendix B).

Referring to that table, in operation ofthe TPU for synchronization and clock generation, the synchronization pulse sequence is detected by rimning a Period Pulse Width Accumulation (PPWA) function on TPU channel 4. The TPU interrupts the processor on each falling edge detected in the input data and provides the processor with the time ofthe fatting edge and the preceding pulse width. When the processor detects three pulses ofthe appropriate width and spacing, within a tolerance window, it determines the start time ofthe synchronization in TPU counts based on the average faUing edge time ofthe received pulses. The tracker has two receivers for FM data. Depending on the quaUty of signal available at either antenna, it may attempt to detect the synchronization sequence on the second channel using the method described immediately above with TPU channel 11.

The start ofthe synchronization pattern is used as a reference by all receivers to generate the data clock necessary to clock the FM data into shift registers and into the processor memory for decoding. An identical synchronization algorithm is used by att of the network elements to ensure that variabihty in time estimates is minimized. An estimate ofthe synchronization start time is maintained by the CPU using a low bandwidth PLL similar to that used by the NTCC to control the synchronization relative to GPS time. The CPUs in the tracker, Network Hub, and NDC subcarrier receiver all ran a second order PLL with a 0.05 Hz bandwidth to create an estimate ofthe synchronization start time, so that noise in the receive data does not cause substantial jitter in the synchronization time. It also aUows the processor to maintain a time estimate that only degrades slowly in accuracy (TCXO error) when synchronization pulses are missed, thus mamtaining the capabUity to receive and transmit data under poor RF reception conditions. The time estimate is used to start the data clocks using four TPU channels.

TPU channel 5 runs an Output Compare (OC) function which is designed for generating single output transitions or continuous clocks. Using the synchronization time estimate, the CPU programs the channel to output a pulse at a precise delay from that time. TPU channel 6 runs the Input Transition Capture/Count (ITC) function which is set up to detect changes on an input Une and interrupt the processor and/or initiate processing on other TPU channels. In this case it detects the pulse from channel 5 and starts OC functions on channels 7 and 8 which generate a bit clock and a byte clock. The bit clock toggles for each receive bit and causes each bit to be shifted into a shift register. The byte clock runs at one eighth the rate ofthe bit clock and latches the byte into processor. Once aU ofthe data bits are clocked in, the processor turns off the clocks in the gap time before the next second's data.

As previously described herein, the NDC subcarrier receiver 112 (FIG. 12) compares the received synchronization time to the PPS time from GPS receiver 111 to provide the dt measurement to the NTCC 47 software. The precise measurement of dt is made by connecting the PPS output signal from GPS receiver 111 to TPU channel 11 on the subcarrier receiver CPU. Channel 11 runs an ITC function which detects the pulse and interrupts the processor. The processor records the PPS time. Under normal conditions, the three synchronization pulses are then detected on channel 4, and the synchronization time is computed. These times have a precision of 0.2 microseconds and an accuracy of the TCXO, 1.5 ppm, the dt being simply the difference between the times.

Trackers use the synchronization time estimate as a reference for starting the transmit data sequence. Approximately one second before the time slot assigned to a tracker occurs, the CPU sets up processing tasks to format data to be transmitted, loads output buffers, and initializes TPU channels. TPU channel 0 rans an OC function that is initiaUzed about 6 miUiseconds before the transmit sequence is to begin. This channel asserts the transmit key Une ofthe RF card and also initiates the chain of other TPU events required to transmit data in the TDMA network. The OC function generates a single transition at the start ofthe appropriate 20 miUisecond time slot, turning on the transmitter. This signal is also fed into channel 1 ofthe TPU which runs the ITC function. The detection ofthe transition on channel 0 starts a transmit data clock on channel 2, delayed by 96 microseconds to aUow the transmitter power to stabttize. The clock transmits data from a shift register on the TPU, a queued serial peripheral interface (QSPI, e.g., see processor 83, FIG. 30). The clock is also fed into TPU channel 3, which runs an

ITC function to count the number of bits transmitted. The transmit bit count is used by the processor to refill the QSPI output register based on an interrupt from the ITC when the desired output count is reached. The CPU also turns off the OC transmit key on channel 0 by scheduling an opposite transition 19200 microseconds after the key signal was asserted.

The Net Hub receive site CPU uses the TPU to generate the framing information to denote the start of each 20 milhsecond TDMA time slot. Based on the estimated synchronization start time, the CPU sets up an OC function on a TPU channel to toggle at precise 20 milhsecond intervals. This signal controls processing start times for a digital signal processor (DSP) to clock and data recovery on any data received in each slot. In this case, the TPU cannot be used to generate the data clock because the speed of light delays from vehicle-mounted trackers to the Hub receiver are variable and unpredictable. The DSP processor (e.g., 80, FIG. 30) performs batch processing on the prior slot's recorded data, while data for the current slot is stored into a bank of memory. On the next slot interval toggle, the DSP switches banks, and the new data is stored in the bank just processed.

The SCC is the generator ofthe synchronization pattern in the FM broadcast data that is used by the other elements in the system as a precise time reference for operating in the TDMA network. The SCC uses the same sequence of TPU functions on channels to send its data to the FM subcarrier modulator as the tracker uses to transmit data in the TDMA network. The differences are that the SCC transmits for nearly one second, and the start time ofthe transmission is controlled by command from the NTCC over a modem link. The SCC runs on a 10 MHz TCXO instead of a 20 MHz clock, so its time resolution is 0.4 microseconds instead of 0.2 microseconds.

Near the beginning of each integer second, the SCC receives a clock correction command from the NTCC and the data to be transmitted on the next second. While it is receiving these data, the SCC is transmitting the current second's data. The SCC formats a bit stream that includes the synchronization pulse sequence at the start, followed by the data. At the end ofthe current data transmission cycle, the CPU sets up TPU functions and loads the output buffer (also the QSPI) with the data to be transmitted. An OC function is initialized to toggle at the current one second interval count ofthe TPU, as modified by the NTCC command.

The NTCC command can be either a one-time offset during initial time alignment ofthe SCC, or a rate adjustment command during normal Fine Rate time alignment mode. For example, the nominal TPU count for a one second interval on the SCC is 2500000. If the NTCC determines that the SCC clock is fast by 0.4 ppm, it wttl send a rate adjustment command to the SCC to lengthen its count by one to 2500001, so the fast SCC clock must count one additional 0.4 microseconds to reach a trae interval of one second. The SCC uses this interval unttt corrected again by the NTCC.

As with the tracking computer, an ITC function on another channel is used to detect the OC transition and initiate an OC continuous bit clock on a third channel. A fourth channel counts bits transmitted and refills the QSPI buffers as required. Once all of the bits are transmitted, the CPU turns off the output clock and starts a repeat ofthe process.

VI. Bandwidth Efficient Wireless Transceiver System

As observed in the above section on the TDMA network, the efficient use of bandwidth is essential for wireless TDMA digital data networks. The techniques employed according to another aspect ofthe invention, to be described in this section of the specification, maximize efficiency by filtering the baseband data to reduce the occupied bandwidth ofthe channel and eliminating the transmission of synchronization information to niinimize the overhead of non-information bearing data. The baseband filter is implemented by a digital microcontroller and replaces the original square wave data stream with deterministic transitions that reduce harmonic content and maintain bit widths, regardless of data input frequency. Removal of synchronization data is enabled by the addition of processor intensive clock and data recovery algorithms at the receive site. The network also uses forward error correction coding and space diversity processing, according to other aspects ofthe invention, to increase the rehabihty of received data which reduces bandwidth used for retransmission of corrupted data.

The TDMA network ofthe exemplary embodiment is spht into 50 vehicle transmit time slots per second. By means described in the preceding section of this specification, the trackers and Net Hub receiver computers are all synchronized within a few microseconds of timing accuracy so that gap tunes between the 50 time slots are at a minimum. The trackers maintain an accurate time count to determine the point in time at which a data packet is to be transmitted. Processing performed by the trackers to transmit the data packet includes Forward Error Correction (FEC) coding, bit interleaving, delay line encoding, premodulation filtering, and Binary Frequency Shift Keying (BFSK). On reception ofthe packet, the Hub computer performs FSK demodulation to an Intermediate Frequency (TF), digital sampling ofthe IF signal, bit clock recovery, bit synchronization using an iterative process, and data decoding. Each second, up to 50 vehicle data packets are transmitted to the NDC Network server which combines data from other Net Hub receivers in a diversity processing algorithm and performs FEC decoding on the resultant data packet.

FIG. 16 is a block diagram ofthe transmit TDMA data packet processing performed by the tracker (tracking computer) 135 in each vehicle. A data packet 137 consists of 12 total information bearing data bytes, or 96 bits. The data to be transmitted is bitwise packed very tightly in most cases so that there are few wasted bits between data item fields. The contents ofthe data packets sent by the tracker vary depending on the type of data the tracker needs to report; the packets typically contain navigation data in periodic reporting slots and special data such as event (e.g., what the vehicle is doing or encountering) reports, network control information, or outbound message codes in auxiUary reporting slots. The tracker first performs forward error correction (FEC) coding 138 of he data.

A (12,8) code is employed which uses codes words that are 12 bits long to encode each data byte. This is a modified BCH error correcting code that enables the server to correct one bit in each 12 bit code word. The (12,8) code is also used by the Net Hub receiver processor in its bit synchronization algorithm to locate the likely start ofthe data packet by selecting the clock offset which nunimizes the number of code word errors. The result of the FEC coding step 138 is a total of 144 data bits to be transmitted.

Next the 144 data bits are interleaved, at 139, without which each code word would be transmitted in order. Wireless data in mobile environments can be corrupted by burst errors which cause several consecutive bits to be received in error. Since the FEC algorithm can only correct one bit in each code word, a burst of bit errors would make a word uncorrectable. Bit interleaving assures that the first bit of each word is sent first, foUowed by aU ofthe second bits, and so on, to provide some immunity to burst errors. This enables the FEC algorithm to correct a burst that destroys aU ofthe first bits, for example, since it affects only one bit in aU ofthe code words instead of att ofthe bits in a single code word. In each packet, att ofthe code words must be successfuUy decoded to make sense ofthe packet. A unique interleaving scheme is used for the data transmitted by the vehicle tracker to enable the bit synchronization algorithm used by the hub receiver to work. Instead of the simple ordering of all first bits, all second bits, through aU twelfth bits, the ordering used is shown in FIG. 17. This provides an interleaving depth of 11 instead ofthe 12 possible with simple interleaving, but provides a randomization ofthe data bits to ensure that single bit shifts in received data cause errors in aU code words. In FIG. 17, the interleaved bit ordering is shown in tabular form: the rows are interleaved 12 bit words, and the columns are the bits within the words. Bits are transmitted from left to right and top to bottom. The bits ofthe original FEC code words are identified by the W/B format at each interleaved bit position. These are the bits, B, of code word, W.

Returning to FIG. 16, after interleaving, the CPU encodes the data using a delay, or Miller, line encoding algorithm 140. Delay coding is similar to Manchester coding in that it guarantees transitions in the encoded digital data. It differs in that it does not increase the maximum baud rate ofthe unencoded data. A disadvantage ofthe delay code is that it is sUghtly more compUcated to encode than Manchester. The delay code replaces each T in the origmal data stream with a transition at the mid bit point; the transition beguis at the previous bit's output level. A '0' in the original data is represented by no state change, except if the previous unencoded bit was a '0'. In that case, the second '0' is encoded as a state change between bit boundaries. The algorithm ensures that there are three distinct bit widths: 1, 1.5, and 2 tunes the width ofthe original bits. FIGS. 18A-C, which wttl be discussed further presently, provide a comparison of an original data sequence to the delay coded version of that sequence, and an iUustration ofthe filtering of the delay coded sequence.

Returning again to FIG. 16, square wave digital data as with the original data sequence and the delay coded version thereof must be filtered so as to round off the edges so that harmonics which cause the occupied bandwidth ofthe transmitted data to be wide are rninirnized. A premodulation filter 141 for the delay coded version is implemented in the present exemplary embodhnent using a PIC™ 16F84-10I/SO microcontroller (PIC is a trademark of Microchip Technology Inc. of Chandler, Arizona, manufacturer ofthe device), followed by a digital to analog converter (DAC) 142 constructed using a precise resistor network. The filtered, analog representation ofthe original digital data stream is modulated using frequency shift keying, at 143, and transmitted by the tracker from an antenna 145 thereof after amplification at 144.

The filtering algorithm used in premodulation filter 141 to ensure that there are three distinct bit widths: 1, 1.5, and 2 times the width ofthe original bits, is shown in flow chart form in FIG. 19. The PIC™ microcontroUer continuously samples the input digital data looking for a transition. When a transition occurs, at 147, the microcontroUer executes in-line code to rapidly output byte values that represent the transition as a sine wave shape to the DAC 142. When the output ofthe transition curve is complete, the microcontroUer software goes back to searching for the next input data transition. The PIC™ microcontroUer digitaUy replaces each data transition with a rising or falling half sine wave, as required. The maximum baud rate ofthe delay coded data is 7812.5 bps. This is equivalent to a maximum data frequency of 3906.25Hz. In this appUcation, the microcontroUer rans with a 10 MHz clock, and has an instruction cycle of 4 clock cycles. The method for the fastest output of data to the DAC requires two instructions per point, or 0.8 microseconds. The period ofthe highest frequency data is

256 microseconds. IdeaUy, each transition would be replaced with a 160 point half sine curve (128 microseconds divided by 0.8 microseconds per point) so that the highest frequency data present would appear to the modulator as a pure sine wave.

It is not possible to use aU ofthe 128 microseconds to produce the filtered transition output because time must be left for the overhead of transition detection and other functions. Therefore, a 150 point transition curve is used. FIGS. 18B and 18C, respectively, illustrate the delay coded data and the filtered output created by the digital premodulation filter. Each edge in the data in the delay coded version of FIG. 18B is delayed by approximately 64 microseconds. Since this filtering delay is constant, it is accounted for in the transmit data clocking provided by the CPU. FIG. 20 provides a diagrammatic comparison ofthe approximate power spectrums ofthe unencoded 137, delay coded 140, and filtered data of FIGS. 18A-C. Delay coding concentrates more energy at an average of about 3/4 ofthe maximum frequency. The spectra for two filter versions are shown in the diagram of FIG.20, one being an ideal 160 point transition filter 148 iUustrated for reference purposes, and the other being a 150 point practical implementation 141. The latter has sUghtly higher power between one and three times the fundamental frequency. The filter substantiaUy cuts the channel bandwidth required for transmitting the TDMA FSK data, for reasons noted above.

A digital filter of this type provides the considerable advantage that its output has a constant delay, regardless of input frequency, which is equivalent to linear phase delay with increasing frequency. This is a property of digital finite impulse response filters.

Traditional digital or analog infinite impulse response filtering techniques have nonlinear phase, which can distort bit widths as the input frequency varies. Depending on the filter cutoff frequency, this can cause intersymbol interference. The constant delay allows precise bit widths to be transmitted without distortion. When data with deterministic and repeatable bit widths is received, the bits and bit values can be reliably clocked and decoded.

In the UHF transmitter modulator section used in the present exemplary tracker data processing of FIG. 16, the microcontroUer 141 takes the transmit data (TXD) input and provides as output a byte value. That output feeds a Bourns 2QP16TF6235 resistor ladder network that acts as DAC 142. Microcontroller 141 also performs the task of keying the tracker transmitter based on precisely timed signals from the CPU card 149.

After filtering, the data are modulated on a UHF carrier in the 450-470 MHz shared use business band on a 12.5 KHz offset channel. The bandwidth control provided by the premodulation filter is a key element in attowing a data rate of 7812.5 bps on such a narrow channel, while using a very simple FSK modulation technique. The modulation uses about 2KHz of deviation. The tracker transmitter has a two Watt output.

Network hub receivers are located around the metropolitan area to receive the TDMA transmissions from the vehicle trackers. FIG. 21 is a block diagram ofthe processing performed by each Network Hub 11 on the received RF signals. The UHF TDMA receiver front end hardware (RF card 151) is always turned on. Signals received at antenna 152 are demodulated at 153 to a 455 KHz intermediate frequency (IF) signal which is digitized at 154. The IF frequency is further processed by an application-specific integrated circuit (ASIC) 155 that performs digital filtering and demodulation to a baseband signal. At precise 20 mttUsecond intervals corresponding to the boundaries between vehicle transmissions, each 20 mttUsecond segment ofthe baseband signal is sampled (156) at a high rate and stored in memory. A digital signal processor (DSP) (e.g., 80, FIG. 29) in the CPU section 158 ofthe Net Hub is used to extract the data from the sampled baseband signal. The processing is performed in a batch mode on the entire data packet after it has been received. In the meantime, data being received is stored in an alternate memory bank for processing on the next 20 mttUsecond cycle. Batch processing provides for the use of more powerful algorithms because then data set can be analyzed in its entirety. Real-time processing requhes the algorithm to recover data on the fly without the benefit of subsequent input data. The DSP performs clock recovery and then locates the data within the 20 mttUsecond window. The recovered data are de-interleaved, and the data for aU 50 time slots are ultimately sent to the NDC Network server for further processing.

Recovering the data is a processor intensive algorithm. To reduce the number of bits transmitted by the vehicles, and therefore increase the number of vehicles that are able to report each second, no special bit patterns are sent with the data packet for the receiver to detect. Requiring bit synchronization patterns to detect the data also reduces reliabttity in a mobtte RF environment because if the bit pattern is corrupted, the message packet cannot be recovered, even if it is received without error. Each vehicle transmission occurs at a very precise moment, but its reception is delayed by the speed of Ught over the distance between the vehicle and the hub receiver by up to 800 microseconds. The Hub must locate the start ofthe message within the 20 millisecond window without aid from special bit synchronization patterns. For this, it uses an iterative search that sequentially clocks in the data at greater and greater delays from the nominal message start time unttt a valid data packet is located.

First, the DSP algorithm recovers the bit clock (160, FIG. 21) for the received data, by differentiating the received data. The differentiated data will have large magnitude values at the bit edges. With delay coding, bit edges wttl be frequent, since transitions are guaranteed in the data. The time delay from the beginning ofthe data set to each apparent bit edge is measured, modulo 64 microseconds. The modulo delay is averaged to determine a mean data clock edge tune that is apphcable for the entire data set. A mid bit time is computed as a 32 microsecond offset from the average delay. With this offset, the data in the buffer is sampled at 15625 bits per second (64 microsecond intervals). This clock rate is used to recover the delay code, since it has transitions at the mid bit point for ones in the original, unencoded data. A total of 288 delay coded bits are clocked in.

Delay decoding (161) is performed on the sampled 288 bits to produce 144 original data bits. Only certain aUowable bit patterns are present in the delay code. If a bit error causes an invalid pattern, the pattern is decoded to one ofthe possible bits represented by the pattern. If subsequent error detection processing on the decoded data indicates an error, then, if only one ambiguous data pattern was encountered in that particular code word during the delay decoding process, the other bit value is used and the error detection is repeated. If successful, the second bit value is retained. If more than one bit is ambiguous or the second bit also fails to result in vaUd data, the original value is retained, and processing is aUowed to move forward. The bit error may be correctable at a later stage in the data processing chain.

The bits are then de-interleaved (162), and the FEC code words are checked for errors (163) but not corrected. The interleaving sequence plays an important role in this process. Standard interleaving of all first bits followed by all second bits, etc. wttl only cause the first or last code word to be in error if the bit clock is in error by up to 12 bits. This makes the use of error detection for ahgning the bit clock to locate the correct data useless. The interleaving scheme used in this case jumbles the data sufficiently and single bit shifts cause att code words to be in error. The number of correct code words is counted and stored. The bit clock is then shifted (delayed) by 64 microseconds, and the delay decoding 161, de-interleaving 162, and error detection 163 process is repeated (164). In the present exemplary embodiment this is done 12 times to cover the entire 800 microsecond range of possible delays. The decoded data 165 at the clock offset that has the most correct code words, as determined by this processing by the Network Hub 11 ofthe vehicle 17 tracker data in the received

RF signals, is packaged for transmission to the NDC server 42 (FIG. 3).

Each second, server 42 receives data for all 50 time slots from aU Network Hub receivers. The network is designed so that multiple Hubs wttl receive each single tracker data transmission. This redundant data is combined by the server using a space diversity voting algorithm that increases the reliabttity of received data. A flow chart ofthe space diversity algorithm of NDC server 42 is shown in FIG. 22, this algorithm being performed for each ofthe 50 time slots in each one second period.

Each tracker packet has 12 code words. The server uses the FEC code to detect errors in the code words provided by each Hub. If at least 6 code words ofthe 12 are error free (170), the packet is retained for further processing (171). The assumption is that if most code words have errors, the probabttity of successfuUy recovering vattd data from the entire packet is low. Once all Ukely vaUd packets are coUected for the time slot (172), one of two processing paths is taken.

If the time slot is defined for periodic reporting (173), then the diversity voting algorithm is appUed as hidicated in processing path 174. The packets coUected in the first phase are summed bit by bit using received signal strength reported by the Hub as a weighting factor (175). Signal strength is used as an indication ofthe likelihood that the message was received successfuUy. Set bits in the message packet are added to the sum using the positive signal strength; cleared bits are added to the sum using negative signal strength (176). As a simple example, consider the three bit sequences below with their corresponding signal strengths. After summing, bits with positive valued sums are decoded as set bits, and bits with negative valued sums are decoded as cleared bits. If a packet contains a bit with a sum of zero (a tie), the packet is discarded.

bit 01234567 Packet A: 11001010 Signal Strength: 100 Packet B: 11011110 Signal Strength: 30 Packet C: 11001110 Signal Strength 80

Voting Results: bit O +100+30+80 = +210 > 0 => 1 bit l +100+30+80 = +210 > 0 =» 1 bit 2 -100 -30 -80 = -210 < 0 => 0 bit 3 -100+30 -80 = -150 < 0 => 0 bit 4 +100+30+80 = +210 > 0 => 1 bit 5 -100+30+80 = +010 > 0 => 1 bit 6 +100+30+80 = +210 > 0 => 1 bit 7 -100 -30 -80 = -210 < 0 => 0

Voted Packet: 11001110

After voting, forward error correction is appUed to the result to correct remaining errors in the code words (177). The (12,8) code attows one error in each code word to be corrected. Each packet contains an 8 bit or 16 bit CRC (cychc redundancy check) code to verify that the packet is unlikely to have errors (178); however, it is still possible for the packet to contain bit errors. The final check on the data consists of verifying the reasonableness ofthe data contained in the packet, and, if so, the packet is stored (179). If a time slot is not defined for periodic reporting, it is available for any tracker to transmit a "Network Entry Request" packet to obtain a primary or auxttiary reporting interval slot. Vehicles 17 (FIG.3) near each other that transmit simultaneously wttl almost certainly corrupt each other's transmissions. If they are widely separated, theh tracker data packets can be received rehably by Hubs 11-1, 11-2, ..., 11-i, near each ofthe vehicles. Server 42 processes packets in these slots individuaUy. In Ueu of using the diversity voting algorithm, processmg proceeds along path 180 (FIG. 22). Network entry packets contain redundant data in addition to the CRC, which enables the server to determine if the packet is vaUd with a high degree of confidence. Here, no voting is performed but forward error correction (181) and CRC checks (182) are performed, foUowed by a determination of data packet validity from the redundant data in the respective "Network Entry Request" packet (183). If the data packet is deteπnined to be vaUd by this processing scheme, it is stored in memory (184).

VH. Tracker and Tracker Software

The primary functions ofthe tracker instaUed in each respective vehicle are navigation and radio communication. Its secondary tasks are supporting the user interface ofthe Mobile Data Terminal (MDT), discrete and analog data coUection, and power control of itself and peripherals. FIG.23 is a representative ttlustration of an exemplary placement ofthe tracker 135, MDT 190, and antennas (including FM receive antenna 191, UHF/FM antenna 192, and GPS antenna 193) on a typical fleet vehicle 195 (ttlustrated as a cement mixer, for example). As ttlustrated, the vehicle 195 is further equipped for accommodating various sensors for event reporting, which wttl be described in another section of this specification, below.

A flexible, but efficient real time executive is employed to support the primary functions ofthe tracker. Before describing the real time executive, however, reference is made to a simplified block diagram ofthe tracker (tracking computer) 135 shown in FIG. 24. It consists of two primary circuit cards or sections: a CPU section 200 and a wireless network interface, or RF, section 201. The CPU section 200 contains the power supphes for the tracker, the main microprocessor (central processing unit, or CPU) 203 to perform all data processing, a GPS chip set (including an RF front end component, GP 2010, and a correlator component, GP2021, of an exemplary Plessey chip set) integrated with the processor for reception and decoding of GPS sateUite signals, and sensor electronics and interfaces. The CPU section 200 performs the navigation (partly through GPS navigation section 204 but also through dead reckoning and/or map matching or other navigation sensors via inputs to CPU 203), as weU as data processing and sensor processing through the CPU 203. Dead reckoning navigation in a land vehicle environment maintains a robust navigation solution when GPS data may be unavailable as a result of sateUite masking in tunnels or by taU buttdings during travel ofthe vehicle or at a job site. A gyroscope (not shown) is mounted inside the tracker box to sense angular rate in the vertical axis. The tracking computer, which uses angular rate to estimate heading ofthe vehicle, is also tied into a vehicle speed sensor output from the transmission and into the reverse lights ofthe vehicle to indicate if the speed sensed is in the forward or reverse direction. The speed sensor is an integral part of other sensor measurement functions that rely on distance traveled outputs or verification that the vehicle is stationary or moving at a low speed. As wttl be discussed further in connection with a subsequent Figure, three power supphes (generally designated by block 205) are provided on the CPU card 200, one a 12

VDC supply that provides power to the RF card, a second a 12 VDC supply that provides power to the MDT and other external peripherals ofthe unit, including sensors, and the third a 5 VDC supply for the CPU 203 processing functions.

The RF section or card 201 contains the radio frequency circuits (including receivers 207 and 208 which receive inputs from vehicle-mounted antennas 191 and 192, respectively) necessary for reception and demodulation of radio frequency data received over the FM subcarrier from radio station 12. RF section 201 also contains circuits (in transmitter 210) necessary for modulation and amplification to transmit data in the UHF band using the TDMA network protocol. However, the RF card does not perform any data processing of its own. Rather, the main CPU 203 is responsible for aU baseband data processing for message decoding and encoding, forward error correction, and data clocking in the tracker 135.

In terms of tracker software, referring back to the real time executive employed to support the primary functions ofthe tracker, it wttl be useful to again note that the CPUs used in each ofthe trackers and Net Hubs are substantially identical. The Net Hub CPU 82 illustrated in the simplified block diagram of FIG. 29, for example, shows a Motorola

68332 microprocessor with associated on-chip peripherals such as a TPU, QSPI, and SCI, and related shift register as preferably constituting the CPU. The tracker CPU 203 corresponds therewith. It has two periodic interrupt sources for task scheduling and dispatching, namely, an accumulator interrupt (ACCUMINT) from the GP2021 and a periodic interrupt timer (PIT) derived from the CPU clock. The ACCUMINT is used to ran a simple, high priority, real-time dispatcher, while the PIT is used to run a slower, priority-driven scheduler for long-duration navigation and communication tasks.

The interrupt priority is:

1. TPU level 6

2. SCI level 4

3. ACCUMINT level 3

4. PIT level 2

The ACCUMINT interrupt rans a periodic, high-priority dispatcher for short (< 1 msec) duration tasks. TPU interrupts occur from TPU events related to network communication and timing. The PIT rans a secondary, low rate, and must be the lowest priority interrupt because it can only be enabled when the ACCUMINT interrupt service routine (ISR) completes. The SCI generates UART interrupts from serial communication with the compass or other peripherals. The QSPI is used for vehicle transmit data, must be serviced twice during a vehicle transmission, and does not generate interrupts. The TPU and SCI interrupt handlers should be as fast as possible.

The ACCUMINT is supphed by the GP2021 and is derived from the 10 MHz TCXO which also drives the 20 MHz processor clock (also from the GP2021). The ACCUMTNT rate is nominally programmed for an approximate rate of 2048.131 Hz (the period is 488.25 μsec). This is in error from a trae 2048 Hz rate by 64 ppm. The ACCUMINT can be disabled and re-enabled by writing to a GP2021 register. The

GP2021 tuner tick (TIC) flag, which is programmed for a rate of 8 Hz, controls when GPS measurement data is avaUable and is used to schedule dead reckoning navigation processing.

The structure ofthe ACCUMINT handler/real-time dispatcher is outlined as: disable GP2021 interrupts by writing to the correlator read att new accumulator data if (TIC)

{ store and time-tag wheel/speed sensor data set flag to collect GPS channel measurement data set flag to ran dead reckoning navigation functions }

(GP2021 interrupts are still disabled on the correlator) update tracking loop(s) for specified channel(s) service either GP2021 UART (universal asynchronous receiver/transmitter) A or B update network event timing schedule high priority commumcation and data coUection events as required enable GP2021 interrupts by writing to the correlator dispatch high priority periodic tasks dispatch communication and data coUection tasks enable PIT interrupts if previously enabled return

With the tracking loop implementation ofthe present exemplary embodiment, the tasks of reading the accumulator data and updating the tracking loops requires on average about 160 μsecs for 8 channels. This includes data collection and demodulation for aU channels and tracking loop closure for one channel. Each channel generates accumulation data at 1 msec intervals (approximately every other ACCUMINT). It is important that the tracking loop update processing for each channel be completed before new accumulation data is available for that channel.

The scheduler starts tasks related to network timekeeping and communication, reading and storing GPS measurement data, periodic tasks that include A/D and discrete I/O processing, synthesizer prograrnming, and any other high-priority, short duration (less than 500 μsec) tasks.

A TIC flag is generated by the GP2021, and indicates when GPS measurement data have been latched. The default TIC rate is approximately 10 Hz. For the tracker, the rate is programmed to approximately 8 Hz (a period of 0.125000050 sees), and is used to latch odometer/wheel sensor data in addition to GPS measurement data. The 8 Hz rate aUows simple power of two math for time intervals and reduces the measurement processing by 20%. GPS processing functions are required to keep the TIC rate periodic with GPS time, but it • ->ot necessary (on the tracker) to align the TIC with the GPS integer second. As part ofthe navigation processing, the TIC perioo adjusted for single

TICs as required to maintain an average TIC rate of 0.125 seconds with respect to GPS time. The ACCUMINT dispatcher updates the TIC interval as required by the navigation processing.

The GP2021 chip has two UARTs, which do not generate interrupts so they must be polled. Each UART has an 8 byte FIFO (first in - first out) If the data rate on the

UARTs is restricted to 38.4 kbps, then the FIFO can be filled about even.' 2 msecs. The

CPU can service each UART every other ACCUMINT and not lose data One ofthe UARTs is used to communicate with the MDT; and the other may be used for a suitable peripheral.

Time-critical RF communications tasks are run as required, which include setting up the TPU channels to: start and stop data clocks • start and stop the QSPI

• turn on and off the transmitter

• program the TPU to detect the next bit-sync.

Scheduling these tasks requires a few milliseconds of resolution in some cases.

The tracker uses the QSPI for message transmission. The transmit data are line encoded in Miller format, which requires 288 code bits to be transmitted at 15625 bps for an equivalent of 144 data bits at 7812.5 bps. The QSPI output buffer can hold 256 bits, so the QSPI can be preloaded with 256 bits and then refilled with the remainder ofthe message a few milliseconds later. An additional data word (for at total of 304 bits) has to be clocked out to the RF card. A preamble of 8 bits precedes the data, and 8 bits follow the data after the transmitter is turned off to ensure the last data bit transmitted is low.

The tracker uses the TPU to clock data into external shift registers for receive data. Two FM data streams are received from spatially diverse antennas. The data is line encoded in Miller format which requires 9200 code bits to be transmitted at about 9328.36 bps, for an equivalent of 4600 data bits at about 4664.18 bps. A preamble and synchronization pattern of 64 bits precedes the data. The two data streams are clocked synchronously but processed independently. The bytes are read from the shift register on the falling edge ofthe latch clock, leaving 428.8 μsecs to read the data. With respect to data coUection tasks, TIC events signal that GPS measurement data are avaUable from the GP2021 correlator. When these occur, the processor must read the data before the next TIC (about 125 msecs). The processor also reads wheel/odometer data. In the ISR, data is only stored — data processing takes place under control ofthe PIT scheduler.

The tracker software also has a number of periodic, short duration tasks that can be ran by the ACCUMINT dispatcher. These include A/D functions for reading data from the gyro and other data sources; as weU as bit toggling for implementing simple serial interfaces for programming RF card synthesizers and the PIC used for power control of the Tracker Module.

The TPU is used for RF communication timing, RF data input and output clocking, and vehicle wheel or speed sensor inputs. As previously described herein, the TPU channels (16) and functions are summarized in Table 56 (Appendix B).

In handling of wheel and speed sensor inputs from the dead reckoning navigation ofthe PROTRAK system, the TPU counts pulses from these sensors to measure vehicle speed. In the TPU, channels 13 and 14 are reserved for quadrature inputs from the wheel sensors, channels 12 and 15 are reserved for vehicle direction and cruise control speed sensor inputs, channel 15 rans an ITC function, and channel 12 rans a discrete input function. In most systems, a cruise control speed sensor is used. The SCI UART on the Motorola 68332 processor is used for a magnetic compass interface or other relatively low data rate device (4800-9600 bps). When running, the SCI generates transmit or receive interrupts at approximately 1 msec intervals (at 4800bps). These interrupts must be serviced within 1 msec.

The PIT ofthe processor runs at 32 Hz, and in that mode the PIT ISR rans a prioritizing executive which performs the foUowing tasks, in the foUowing order of priority:

1. Commumcation and RF timing/scheduling tasks

2. FM data error decoding

3. Dead reckoning (DR) navigation (8 Hz solution propagation) 4. FM data parsing

5. GPS measurement processing (pseudorange/range-rate measurements, sateUite acquisition)

6. Combined GPS/dead reckoning filtering (Kalman Filter update of DR solution)

7. GPS sateUite visibttity/channel aUocation For the executive, tasks are scheduled periodicaUy or on demand in order of priority. High priority tasks are aUowed to interrupt lower priority tasks.

The power supply architecture for tracker 135 includes four independent power supphes which ran from input battery power (6-28 V). Referring to FIGS.25 and 26, which are block diagrams ofthe internal power distribution to the tracker and power distribution summary, respectively, one of these supphes is a linear 5V supply 215 that provides power to the Microchip PIC™ microcontroUer (μC) 216 used for master power control ofthe tracker. It also keeps an SRAM (not shown) powered so that machine state is maintained while the processor is off. MicrocontroUer 216 rans on very low current and is on at att times, controUing a

5V CPU supply 217 and 12V radio supply 218. 5V supply 217 is a switched power supply that provides power to CPU 203, digital electronics and GPS receiver 204 of CPU section 200. 12V radio supply 218 supphes power to the RF card 201, and also powers the GPS antenna low noise amplifier (LNA) 219 through a 5V linear regulator 220. Since the TCXO which ultimately drives the CPU clock resides on RF card 201, CPU 203 requires both this supply (218) and 5V CPU supply 217 to be on. The last ofthe four independent power suppUes is a 12V auxiUary supply 222 that provides regulated 12V power to att external peripherals (e.g., MDT 190, compass 230, and others 232, FIG. 26) designated by 223 (in FIG. 25) and power to an on-board gyro 224 through a 5V linear regulator 225. CPU 203 controls this 12V auxiUary supply 222. The tracker also receives

12 volt discrete input 226 to the CPU 203 and microcontroUer 216 which indicates that the ignition switch 233 is in the RUN/ACC position.

MicrocontroUer 216 controls power to tracker 135, and, together with the CPU's SRAM, remains turned on at aU times. These two draw less than 5 mA of current. When the ignition discrete indicates that the switch is in the RUN or ACC position, microcontroUer 216 turns on CPU 203 and power supplies 217 and 218. When the ignition is off, CPU 203 can command microcontroller 216 to turn off the power for time intervals between 5 and 630 minutes, or unttt then ignition is turned on, which ever occurs first. Tracker 135 supports power saving modes so that vehicle battery power consumption is minimized when the vehicle ignition is turned off, and which also have radio network control and data retention implications. The tracker power saving modes are:

FuU On: Tracker 135 and external peripherals are tumed-on and operating normaUy. • Peripherals Off: Tracker 135 is on and operating normaUy, but auxiUary 12V peripheral power supply 222 is off. Peripherals are turned off immediately or, if desired, within a predetermined time TI, e.g., 1-2 minutes after ignition turn off which inhibits DR navigation because both internal gyro 224 and the external compass 230 will be off. • Sleep: With the ignition off, CPU 203 is turned off for a prespecified time duration

T2 (e.g., about 40 minutes). When the CPU is turned back on (Peripheral Off mode), it can listen for any new message or other data, respond and then turn off again. Sleep mode aUows login-only and continuous track systems to receive data from the command station while the ignition is off. Poll-only vehicles wttl remain in Sleep mode and not wake up until the ignition is turned on. The system also remains in Sleep mode if the battery voltage drops below a predetermined lower limit. Off: In this mode, power is not applied to the tracker.

Depending upon specific customer requirements, the tracker power saving mode control may vary, e.g.:

• Emergency vehicle operators may want the system to always be in FuU On mode to enable ability ofthe CCS to communicate at aU times (via the TDMA network) with the vehicle.

• Some users may prefer a staged power saving approach in which vehicles that are periodicaUy turned on and off, such as deUvery tracks, remain in the network while turned off.

FIG. 27 is a diagram iUustrating the logic for the power mode control state transitions ofthe tracker 135. Time durations TI and T2 are set as desired. The Sleep Time is the off time commanded by the CPU for the Sleep Mode 240. The mode transitions and network related operation in each mode are as foUows.

The Off state 241 is reached when external battery power is removed from the tracker. When battery power is appUed to the tracker, the power control processor (microcontroUer 216) resets and turns on the CPU 203 and radio supphes 218, turning on the tracker, but leaving peripherals 223 turned off (mode 242). In the FuU On mode (243), the RF and CPU sections 201 and 200 are turned on.

The system wttl navigate and operate in the RF network normally. Continuous Track (CT) trackers are assigned periodic transmit slots. Login-Only Track (LOT) trackers are assigned periodic transmit slots if the respective customer is logged in. Without a customer (i.e., fleet subscriber or owner) being logged in, these units wttl occasionaUy attempt to enter the network or remain quiet unttt notified by the NDC that their owner has logged in. PoU-only trackers wttl attempt a network entry and then remain quiet unttt requested to transmit. When the ignition is turned off, peripherals (e.g., MDT 190, magnetic compass

230, if attached, etc., and the internal gyro 224 (optional)) powered by the tracker are ■ . turned off immediately, or after time duration TI expires (mode 242). The compass and gyro navigation sensors are turned offbased on the assumption that if the ignition is off, the vehicle wttl not be moving. The tracker wttl return to the FuU On mode 243 if the ignition is turned back on.

From the Peripheral Off mode 242, the LOT and CT trackers may enter the Sleep mode 240 after a time duration of T2 since the ignition was turned off. To reach Sleep, the tracker requests a low-power periodic network slot from the NDC which has a long transmit interval. When the slot is granted, the tracker stores necessary data to an area in SRAM, saves any data to flash memory as required, and commands microcontroUer 216 to turn off CPU 203 for a sleep period of a few minutes less than the low-power transmit interval. PoU-Only trackers wttl request low-power shutdown from the NDC. When the shutdown request is acknowledged or times out, the tracker stores data to SRAM and flash memory, if required, and commands microcontroUer 216 to turn off CPU 203 until the ignition is turned back on.

When microcontroUer 216 wakes the tracker (actuaUy, the CPU 203) from Sleep mode 240, the CPU checks battery voltage and the previous system state stored in SRAM. If the tracker is in a low power slot, it will Usten to the FM subcarrier data for a 3-4 minute window around the slot time to determine if the NDC sends any information meant for it. At this time, the NDC has the opportunity to send the tracker message or other data. Once aU network transactions are complete, the tracker wttl again command the microcontroller to turn the CPU off.

If the ignition remains off for a predetermined time duration or the battery voltage drops below the minimum threshold V-^, the tracker wttl request a low-power shutdown from the NDC on its next transmit opportunity. When the shutdown request is acknowledged or times out, the microcontroUer 216 is commanded to not awaken the CPU 203 unttt the ignition is turned back on.

S-^AM state recovery is achieved as foUows. Since the entire contents ofthe global variables and stack are maintained during Sleep mode 240, CPU 203 may restart a specific point in the code with aU data intact. This can be done if the registers, program counter, and stack pointer are pushed onto the stack, and the stack pointer is stored at a known location. A CRC must be performed on pertinent parts ofthe SRAM to ensure data integrity on restart, after which the CPU is allowed to send a power down command to the microcontroUer. On reset, the CPU checks the CRC on the SRAM to determine if it was restarting. If so, the software sets appropriate flags, and then retrieves the stack pointer and registers from the stack. It is then able to jump to the point at which it left off before powering down. If the CRC on the SRAM fails, the CPU executes a normal startup.

When the tracker is turned on, it must search for the SCC broadcast on the received FM subcarrier. Under normal conditions, the tracker will have channel information stored in flash memory for the primary FM channel to be used, and wttl initiaUy search channels and subcarriers that it has stored in memory. If no SCC synchronization patterns are found, it must systematicaUy search aU FM channels and subcarriers. To that end, bit-sync hunt is performed by searching for a predetermined unique synchronization pattern. If the bit-sync event is missed (i.e., not aU three pulses occur within the expected time window) no new correction is appUed, and the clock is aUowed to free run. The time estimate is still updated based on changing distance to the transmitter if navigation data are vaUd. If the bit-sync is missed continuously for more than 20 seconds, the error in the integer second time estimate may drift out of aUowable ttmits. When this occurs, the CPU must resume bit-sync hunt on the current and other available FM channels.

Timing and clocking for tracker (and Net Hub) FM data reception, are handled as indicated by the timing and clocking diagram of FIG. 28. The clocking of received FM data 246 is scheduled by CPU 203 to begin at a specific TPU timer value which is not directly related to the FM data synchronization pattern 247, but is related to the estimated integer second time plus the estimated speed of Ught delay 248. Timing in the Figure is indicated in units of TPU 5 MHz TICs. The rising edge ofthe shift clock 250 causes bits to be shifted into an external shift register. The rising edge ofthe latch clock 252 latches the received byte in the output ofthe shift register. CPU 203 receives an interrupt on the fatting edge ofthe latch clock to read in the data, with 428.8 μsecs to read the byte.

The difference 253 between the time of received synchronization pattern and the time it was expected by the CPU is shown in FIG.28 in exaggerated scale. Difference

253 is normaUy less than 20 μsecs, caused by vehicle motion, clock errors between the SCC and the tracker/Hub, and jitter and other errors caused by the FM receiver. CPU 203 uses the average difference for the three pulses to correct its current estimate for the integer second time for the next second. Tracker UHF data transmission, timing and clocking are handled as shown in the tracker data transmission timing and clocking diagram of FIG. 29. On the frame just before or during the frame the tracker is to transmit, the real-time executive must schedule the data transmission tasks. The tasks are scheduled to run with appropriate lead time (up to 6.5 msecs) to start TPU tasks to generate output state changes at the desired TPU timer values. The transmitter key and serial data clock should be precisely started and stopped.

The first 16 bytes ofthe output data are loaded into the QSPI shift register before transmission begins, and the last part ofthe data is loaded before the QSPI empties. Times indicated in FIG. 29 are also in units of TPU 5 MHz timer ticks. TPU channel 3 may be required to count output bits so that the data clock and QSPI can be stopped gracefully. Of course, data transmitted by the tracker includes information to identify the precise location or position ofthe vehicle in which the tracker is instaUed. As previously noted herein, the tracker utttizes high performance dead reckoning (DR) navigation to provide vehicle position and velocity data in urban canyons where GPS measurements are only intermittently available. The DR sensors include speed measurement which, in the present exemplary embodiment, is preferably based on the vehicle's cruise control speed sensor, if available, and an azimuth gyro and possibly a magnetic compass which are utilized for heading determination. A reverse direction sensor may be tied to the tail lights. These sensors are caUbrated through the use of a Kalman filter based on DGPS corrected raw measurement inputs. The accuracy goal for the DR navigator is 0.2% of distance traveled (95% probable) after 4 minutes of DGPS measurement availabttity over a

"typical" vehicle trajectory. DR algorithm requirements take the foUowing into account. Update rate ofthe DR navigation system is about 8 Hz in the presently preferred embodiment. Azimuth gyro data are sampled at a high rate (about 100 Hz) and integrated to propagate an estimate of heading. Speed sensor or wheel pulse count data are sampled with high priority to ensure regular time tagging intervals at 8 Hz and are transformed through heading and integrated to propagate an estimate of position.

GPS measurement requirements include pseudorange measurements avaUable from the GPS section ofthe software at 8 Hz. These measurements are sampled and pre- processed as required. The GPS measurements are used by a Kalman filter run at two second intervals. Either the latest available measurement or an average of measurement data avaUable up to the update time is used. The Kalman filter requirements recognize that the Kalman filter used to blend DGPS and dead reckoning data must support and estimate sensor error states with enough fidelity to achieve the deshed dead reckoning navigation accuracy. In addition, the Kalman filter supports coarse aUgnment (heading error uncertainty larger than a smaU angle) and operates when some aiding sensors (such as a compass) are not connected.

A raw measurement filter must have three dimensional position and velocity error states and a good clock error model. Filter error states include:

3 Position Error (NED) 3 Velocity Error (NED)

1 Heading or Wander Angle Error State

2 or 3 Clock Error States

2 Gyro Error States (bias and scale factor)

2 Odometer Error States (scale factor and scale factor non-linearity)

1 Compass aUgnment error state

Magnetic compasses typicaUy have error characteristics that vary sinusoidaUy with heading, so it is important to utttize an efficient method to handle the variable compass alignment error. Compass errors may be handled outside the stracture ofthe Kalman filter. The processor has a temperature sensor which can be used for temperature compensation ofthe gyro.

When the navigation system is turned on, it can be initialized from position and heading stored at power down. However, these data are not entirely reUable, so initial co- variances must be large. If the system has a magnetic compass, initial measurements from it may be corrupted by nearby magnetic fields. The filter must be able to support a "coarse-align" mode, which typicaUy involves using error states that are the sine and cosine ofthe heading/wander angle error because error propagation is ttnear with these terms. Once the sine and cosine errors are smaU, the system can switch to a single heading error state.

The Kalman filter propagates the error model for the dead reckoning process based on gyro and speed sensor data. It also propagates aiding sensor error models including GPS clock errors and compass aUgnment errors. Measurements available to the filter include: 1) GPS pseudorange

2) Compass magnetic heading

3) Gyro bias at zero velocity

Zero velocity (zero angular rate) measurements are only avaUable when the vehicle is stopped. The Kalman filter error propagation and update cycle may require more than one second to complete. When filter processing starts, measurement data and error model information must be latched in software so that 8 Hz dead reckoning navigation solution propagation can continue in real-time while the filter operates on the previous cycle's data. Time tagging of dead reckoning and GPS measurement data is critical to successful navigation. Dead reckoning speed sensor pulse counts and gyro data are sampled so that they are vaUd at GPS TIC events. The GPS raw measurements are also vattd at the TIC events, so that time alignment may be performed in a simple manner.

Part ofthe Kalman filter estimate is a bias and velocity error ofthe receiver clock

(the master 10 MHz TCXO). Because of this error and the inabUity to set the TIC interval precisely, the TIC interval drifts sUghtly from a trae 8 Hz rate with respect to GPS time. It is desirable to account for this error and periodicaUy adjust the TIC interval to correct for the drift.

The tracker has several analog inputs which must be shared through a multiplexed

A/D. The highest priority analog input is the gyro, which must be sampled at between 50 Hz and 100 Hz when the vehicle may be moving (i.e., at any time the ignition is on). The battery voltage is monitored, mostly when ignition is off to ensure the unit is not draining the battery. Several external analog sensors may be connected to the tracker to provide customer specific information on vehicle parameters. Requirements for monitoring of these sensors is customer specific.

The RF card has a Received Signal Strength Indicator (RSSI) that is sampled periodicaUy to determine the strength ofthe FM subcarrier broadcast. The temperature sensor on the CPU board is yet another analog signal, used for gyro calibration.

Parameter storage handling is an important aspect- The tracker CPU card uses flash memory for long term parameter storage when the unit is off or disconnected from vehicle power, The SRAM is backed up by vehicle power so that short term, sleep mode storage ofthe machine state wttl remain intact. Data is stored to flash memory on a daily or weekly basis so that loss of power wttl only cause the most recent data to be lost.

The CPU card has, for example, 512 K bytes of bank-erasable flash memory. The program and constant data preferably occupy the lower half of the memory, with the upper 256K reserved for parameter storage. A disadvantage of flash memory is that if any bank is being written or erased, the entire device is unavailable, unttt the operation completes. Since the code is in flash memory, care must be taken when writing to the device. The code which writes to flash must ran in RAM with interrupts disabled. Erasing must use the suspend erase feature ofthe device. This is implemented with interrupt handling while the erase is being performed. In most cases, writing and erasing flash memory wttl occur when the CPU intends for the microcontroller to turn it off. Therefore, it is not a problem to disable all ofthe interrupts because no navigation or radio communications wttl be taking place.

The flash memory device is word (16-bit) addressable. Data written to flash must be done word-wise on even byte boundaries. Bytes can be read on odd byte boundaries, however. As a storage method, a Linear File Store (LFS) system is preferably used to store parameter data. This method generates a linked Ust of variable length records which extends to fill a block of memory. When the block becomes full, the records not marked for reclamation are copied to a new block, and the old block is erased. The file system must recover from power loss during writing and reclamation. The LFS approach supports robust handling of power loss conditions. Records stored in flash memory should have a CRC or checksum to ensure the data are valid. Parameter data are stored in at least one bank of flash memory, and updated periodically as new information becomes available. The flash memory stores the foUowing types of data:

1. GPS sateUite almanac data for sateUite acquisition: New almanac data is stored on a weekly basis. It is read when the CPU is turned on and written when new data from the sateUites is at least one week newer than the stored data. A full set of almanacs requires 2K of memory.

2. PROTRAK system market information: Data on the location and frequencies ofthe FM subcarrier transmitters used in each market is stored as the data are transmitted from the NDC. Storing this information aUows the tracker to search known

PROTRAK frequencies for the NDC broadcast data, thereby speeding system initiahzation. The navigation grid centers and UHF transmission frequencies for each market are also stored. Adequate space should be reserved for these data to aUow 5-10 sets of data to be stored. 3. Tracker Serial Number: The unit's serial number is stored in flash memory, and is never erased or modified, except at the factory. Serial number and customer/device specific configuration data are stored separately from the parameter data in the flash memory.

Other parameters are defined as required. The tracker supports log data, e.g., logging of position and other sensor information to flash memory for later download. This is useful for determining the location of a vehicle when it moves outside the service area; and, on return to the service area, the data can downloaded through the MDT interface or the radio.

VBI. Mobile Data Terminal The MDT 190 serves as a control and display unit (CDU) for the tracker 135

(FIGS. 23, 26), primarily for the convenience ofthe vehicle operator. The MDT is a small conventional programmable computer simttar to but generaUy smaUer than a notebook PC (with customer-specific software) and display terminal with Uquid crystal display (LCD), keypad, associated memory, and internal (integrated) circuitry, to enable display of text and other data, and to enable the vehicle operator to respond to text paging messages and to enter other data to be transmitted to the dispatcher. MDT 190 and tracker 135 communicate over a balanced, differential, asynchronous serial interface, which, in the exemplary embodiment, uses a Texas Instruments (TI) SN65C1167NS dual differential driver/receiver interface circuit. Tracker 135 supports "standard" baud rates up to 38400 bps, and MDT 190 should support a baud rate of at least 4800 bps. Programming ofthe MDT is controUed through the serial interface as weU. The protocol and message formats, as well as the power and programming interfaces, are described in further detatt below.

The preferred serial interface protocol for communication between the tracker and the MDT, and which is also used in other PROTRAK system serial interfaces, is based on the RockweU NavCore V GPS engine mterface described in the RockweU International

"NavCore Designer's Guide," Rev. H, 14 December 1993 (hereinafter referred to as the NavCore interface protocol). The MDT interface uses different baud rates and message timing.

In keeping with NavCore and other message numbering conventions, each interface is identified by a different thousands place in the message ID number. The

MDT-tracker interface uses 7000 as the interface identifier. Messages transmitted by tracker 135 use ID numbers beginning with 7100 and messages received by it use ED numbers beginning with 7200. In the exemplary embodiment, the message IDs are:

For tracker to MDT: 7101 Navigation Data

7102 Received Message Data

7103 Received User Data

7104 Available Message Data 7106 User Data Message List For MDT to tracker:

7201 Data Request

7202 Text Message Response

7203 User Data Output

7204 Request Available Message Data 7205 Request Message

7206 Request User Data Message List

When requested by MDT 190 (by action ofthe vehicle operator), tracker 135 sends navigation data (message 7201, Table 57, Appendix B) including current position, velocity, and time at approximately 1 Hz to the MDT. When the tracker receives a ccRequest Message" (7205, Table 66) from the MDT, it sends the data for the requested text message to the MDT using a "Received Message Data" packet (7102, Table 58). The latter either contains the full text ofthe received message or an ID number indicating a "canned" text to display. A response set is sent along with the text message, containing a unique set of text items that can be selected by the vehicle operator response to the received message.

Each message has an identifier, or issue of data (IOD), a roUover counter, to differentiate messages within the system and to associate messages with theh responses. When the operator selects a response to a message (e.g., an inquiry from the dispatcher), that message's IOD is sent back to the tracker with the response in message 7202. The response is selected using arrow keys on the face (keypad) ofthe MDT. The MDT stores the text, which can be up to a maximum of 80 characters, of a single message while it is displayed for the operator. The text of each response may be Umited (e.g., to about 10 characters) attributable to screen size. In the "Received Message Data" (Table 58), the Message Type indicates whether the message contains a canned or fuU text message. If the message is canned, the next byte contains the ED number ofthe message; otherwise, it contains the length in bytes of the received message text. The next 2 bytes contain the IOD number ofthe received text message and the user response if a message has aheady been sent. The next 3 words indicate the date and time the message was received. The next word contains the number of vaUd responses in the response list. Next is the Ust of 4 text responses to be displayed above softkeys ofthe MDT. Unused response strings are zero fitted. If the message is full text, the characters ofthe message follow in order. For an odd number of bytes, the last message byte is set to 0. The data checksum follows the response set in the case of a canned message or the text data in the case of a full text message.

The tracker receives customer-defined data from the NDC in a packet consisting of a data identifier (1 byte) and 20 bytes of data. Depending upon customer requirements and the type of data received, the tracker either acts on the data itself, or relays it to the MDT by sending a "Received User Data" message (7103, Table 59) for vehicle operator attention. At the MDT, customer-specific software processes the received data.

The tracker is capable of receiving and storing numerous text messages from the NDC. When the tracker receives a new message (as well as at periodic intervals), it sends an "Available Message Data" message (7104, Table 60) to the MDT, indicative ofthe number of unread messages and the number of saved messages, as well as a unique ED for each message for use to retrieve a specific message from the tracker. Upon receipt of this message 7104, the MDT periodically beeps a speaker or other alert device (e.g., a lamp, LED, or the LCD display itself) within the MDT if the number of unread messages is not zero, to informs the vehicle operator of unread messages needing a response. Individual unread messages are retrievable from the tracker by the driver sending a Request Message (7205, Table 66) from the MDT. Tracker 135 is programmed with a set of canned "User Data" messages, a hst of which (message 7106, Table 61) may be requested for display on the MDT by the driver's sending "Request User Data Message List" message (7206, Table 67). Upon subsequent receipt of a "Request Message" for a specific "User Data" message, the tracker will provide the text of that requested message to the MDT. Each message is a fixed 30 characters in length with unused locations set to 0x00.

A number of status and debugging messages are available from the tracker for periodic output, and the MDT can request that these messages — or specific ones of them by designation of message ED — be turned on or off by sending a "Data Request" message (7201, Table 62). By default, all ofthe avaUable ones of these periodic messages are off. Once such a message is turned on, however, the tracker wttl continue to output it periodicaUy, unttt the message is turned off or full power is removed from the tracker.

When the vehicle operator selects a response to a received text message, the MDT sends that response to the tracker using a Text Message Response message (7202, Table 63) which contains the IOD ofthe message being answered and the numeric response value.

The tracker is used to send customer-defined data to the NDC and on the dispatcher or subscriber via the Hub(s), using an output packet consisting of a data identifier (1 byte) and either 1 or 9 bytes of data, with customer-specific MDT interfaces that allow data entry. The data may consist of emergency requests, or a simple status of the vehicle as "job complete," or more complex information. In any case, after data entry it is sent from the MDT to the tracker by means of a "User Data Output" message (7203, Table 64), for transmission by the tracker to the NDC. The message is fixed length with actual space for 10 data bytes, and only 1 or 9 is meaningful based on the LSB of word 6. The remaining data bytes have theh values set to zero. When the vehicle operator desires to view any saved messages, he or she inputs

MDT 190 to send a "Request Available Message Data" message (7204, Table 65) to the tracker to retrieve the Ust of avattable text messages, and the tracker responds with a Ust of the "Avattable Message Data" (7104, Table 60). Thereafter, a "Request Message" (7205, Table 66) is sent by the vehicle operator from the MDT to retrieve from the tracker a specific one ofthe available text messages from those contained in the hst. As noted above, a "Request User Data Message List" (7206, Table 67) is sent by the vehicle operator from the MDT to retrieve a list ofthe canned "User Data" messages stored by the tracker.

Returning to power considerations, tracker 135 supplies 12 VDC power to MDT 190 as previously indicated in FIG. 26, with maximum current drawn by the MDT, including power-on and back light turn-on, preferably limited to 0.5 A. The MDT has a single mterface connector, which is a printed circuit board mounted 9 pin D type in the present exemplary embodiment. The connector signals from the tracker to the MDT are:

1. Boot Load Control (not connected)

2. +RXData 3. - RX Data

4. + TXData

5. - TXData

6. Ground

7. +12V 8. +12V

9. Ground

MDT read-only memory (ROM) is programmable through the serial interface. The MDT is put into programming mode by asserting (pulling low) a Boot Load Control signal, and is then programmed by sending blocks of data through the serial port.

EX. Network Hubs

Referring now to the simplified block diagram of an exemplary Network Hub in FIG. 30, the Hub 11 receives vehicle data transmissions, recovers the binary data, and sends the data to the NDC via a telephone line. The Network Hub includes an FM radio receiver 85 (which is identical to the FM radio receiver in each vehicle tracker) to receive broadcast messages for timing purposes, a UHF radio receiver 81 to receive vehicle transmissions, and a modem 87 for communication with the NDC.

The Network Hubs are instaUed at strategic points — typically, leased space on existing radio towers in and around the metropohtan area being served — to receive vehicle data transmissions. The Hubs require only 110V AC power and business quaUty telephone Une to operate. In a typical market, between 10 and 30 Hubs are needed to serve the various fleet operations calling for vehicle tracking. This relatively smaU number of units and need for high RF performance makes cost a less significant factor for the Hubs than for the trackers in the vehicles. FM and UHF receiver sensitivity and system reUabiUty are very important.

Each Network Hub is divided into four major functional areas, namely: 1) CPU 82, 2) Power Supply 84, 3) Modem 87, and 4) RF Card 86. The CPU 82 corresponds closely to the tracker CPU, using a Motorola 68332 microcontroUer ranning at 20 MHz. The 68332 is ideatty suited for this application because ofthe SCI, QSPI, and TPU peripherals.

Hub CPU 82 utiUzes processor, SRAM, and flash memory as in the tracker, but does not require the GPS section ofthe tracker. Other simUarities/differences to/from the tracker CPU in the Hub CPU are the addition in the latter of a TCXO, level conversion for the modem interface, and replacement ofthe UHF transmitter interface with a UHF receiver interface, but retention ofthe same FM receiver interface. The CPU flash memory is in-circuit programmable through a header or connector using the processor's BDM mode interface.

The Hub uses the FM data stream, which is at a rate of about 4664 bps from the FM receiver 85, for system time synchronization just as the trackers do. The FM data is intended to be used by trackers, but still must be decoded at the Hub to the extent required to derive the timing data. The TPU in the 68332, to which the FM data stream is sent, and software ranning on the CPU use bit-synchronization information in the FM data stream to enable the TPU to generate the bit and byte data clocks used to control a shift register 88 on the CPU card, which also receives the FM data stream, and clocks the data into the processor 83. As with the tracker CPU, the Hub CPU is responsible for programming the

FM frequency and subcarrier offset ofthe RF card over a serial interface.

For the UHF receiver mterface, the UHF receiver 81 uses a DSP microprocessor 80 to extract the bit and byte clocks from the received UHF data stream. The processor on the UHF card is provided with timing information from the CPU, by which it can determine the windows in time to search for the received vehicle data.

The 68332 microcontroUer 83 uses the peripheral SCI UART to communicate with external USRobotics modem 87 which has an RS-232 interface. Conversion is performed between 5 V and RS-232 level signals. The SCI supports a bit rate of 19200 bps, generating up to about 2800 receive and transmit interrupts per second, with the modem connecting at 14400 bps. If support of faster bit rates is desirable, it may be attained using an external UART with a FIFO or including the GP2010 and GP2021 components ofthe

GPS chip set to provide buffered, poled UARTs.

The power supply 84 converts 110V AC to 12V DC for the CPU and RF sections ofthe Hub which separately regulate power to 5 V DC so as to isolate the two sections. AC to DC conversion is performed by an off-the-shelf linear power supply and transformer.

Modem power is supplied via a plug-in transformer, and the CPU provides the serial interface signals to support hardware flow control with the modem. The CPU software controls the modem to dial the NDC, login, and verify that the connection is operational. If the connection is broken, the Hub will hang-up and re-dial to re-estabhsh it, repeatedly re-dialing unttt a connection is made if the NDC modem does not answer initiaUy. The NDC phone number and the Hub user ED and password are stored in CPU flash memory. A connection speed of 14400 bps is used to maximize connection reUabiUty. An EMI (electromagnetic interference) hardened modem may be needed in some situations since the system operates near RF transmitters. The RF section 86 ofthe Hub receives the NDC broadcast on the FM subcarrier at

FM receiver 85, and receives the TDMA vehicle transmissions on a UHF channel at UHF receiver 81. The data are provided to the CPU as serial streams. The CPU generates the data clocks for the NDC broadcast data as well as programs the receive frequencies ofthe RF card, and the RF card generates the clocks for the vehicle data. The FM subcarrier data is on a 67 KHz or 92 KHz offset from normal FM channels, and the FM receive frequency and offset are fully programmable by the CPU. The subcarrier data is modulated by the SCA-300B 68 (FIG. 6) which uses a simple BFSK modulation scheme.

The vehicle trackers transmit data packets at assigned times on a frequency in the UHF business band, the UHF receive frequency also being programmable by the CPU in

12.5 KHz offsets between 450 MHz and 470 MHz. For efficient use of avaUable bandwidth, the vehicle data rate is 7812.5 bps.

The CPU software enables it to perform its primary tasks, including time synchronization to the TDMA network, communication with the NDC via modem, RF card programming and control, reception and decoding of FM subcarrier data, and reception of vehicle UHF data and relay ofthe data to the NDC. Various software functions are written to be common with the same functions in other parts ofthe system. For example, many functions related to modem communication with the NDC are identical to those used in the SCC, although the serial data messages are different and the Hub must dial and login while the SCC is not required to do so. RF synthesizer programming, FM data reception, and FM data stream time synchronization code are identical to that ofthe tracker.

X. Subcarrier Control Computer (SCC)

The Subcarrier Control Computer 48 (FIG. 6) hardware of an exemplary embodiment is shown in the simplified block diagram of FIG. 31. The SCC controls the transmission ofthe NDC base broadcast message. The message is clocked out to

SCA-300B subcarrier modulator 68 with precise message start times and a precise data rate. The SCC is preferably rack mounted along with the subcarrier modulator at the FM radio station 12. NTCC 47 at NDC 10 dials the SCC modem 57 to connect SCC 48 to the NDC. NTCC 47 provides the broadcast message data to be sent by the SCC to modulator 68, and the NTCC also controls the time at which each transmission begins.

CPU 260 ofthe SCC (as in the examples ofthe CPUs used for the Net Hub and the tracker, preferably a 16 MHz Motorola 68332 processor) uses a peripheral SCI UART (see, e.g., CPU 83 ofthe Net Hub of FIG. 30) as the interface for communication with external (preferably USRobotics) modem 57 via an input/output (I/O) card 262. A conversion is made between 5V and RS-232 level signals. The modem is set to communicate with CPU 260 at 19200 bps, and is aUowed to connect to NTCC 47 at rates between 14400 bps and 19200 bps. At this communication rate, the SCI can generate up to about 2800 receive and transmit interrupts per second.

CPU 260 uses the peripheral QSPI ofthe 68332 device (see again, e.g., CPU 83 of the Net Hub of FIG. 30) for the subcarrier modulator interface, to send the serial transmit data to subcarrier modulator 68. Here also, a conversion is made between 5 V and RS-232 level signals. The QSPI is clocked by the TPU ofthe 68332 processor for precisely controUed clock phasing. The output data rate is approximately 4664.18 bps (2.5 MHz/536). However, the transmit data is MUler encoded so that 2 MUler code bits are transmitted for every data bit (9328.36 code bps), for a divisor of 268. The OC (output compare) TPU function uses a half cycle count of 134. An existing RF serial clock from the TPU to the QSPI is used for the output data clock.

Transmit data timing and clocking requhes three TPU channels, since starting the data clock at the correct time requhes using two additional TPU channels. The first TPU channel is wired to the second channel. On the first channel, the CPU initiates a single transition OC at a deshed time and programs a third channel for OC with continuous pulse mode with a precise timing control register (TCR) start time equal to the actual desired start tune. The second channel is set up to run ITC (input transition count/capture) with a link to the third channel. When the processor initiates the transition on the first channel, the TPU, through the ITC link, starts the data clock on the third channel at the precise start time.

In keeping with the precise timing required by the PROTRAK system, SCC 48 is ran directly from a 1.5 ppm TCXO crystal oscillator. To maintain common bit rates between the SCC, the Network Hubs and the trackers, which run at 20 MHz, the TPU of CPU 260 is run at 10 MHz. The real time executive is ran at a 1 KHz rate which allows the required programming resolution ofthe TPU functions. The executive needs the value ofthe TPU TCR counter at each executive timer tick so that executive time can be synchronized with the TPU timer for programming of data transmission functions. To that end, it is convenient to use the ITC TPU function to generate interrupts for the executive. Interrupts are generated by detecting transitions from a second TPU channel rurining a pulse-width modulation (PWM) function at the deshed executive rate.

CPU 260 initiates a 50% duty cycle square wave on the first channel ofthe TPU. The PWM frequency should be a convenient divisor of 2.5 MHz; a half period width of 2500 (1 KHz executive rate) is deemed adequate. The output of this channel is fed into the input ofthe second channel which rans ITC. The ITC samples TCR1 and interrupts the processor on every transition ofthe PWM signal. The executive can then read the TPU register to determine the TCR1 value at that interrupt TIC.

The primary function of SCC 48 is to transmit the base broadcast message provided by NTCC 47 at a precise 1 Hz rate, synchronized to the GPS integer second. NTCC 47 Ustens to the SCC initiated broadcast and controls the timing by comparing the start of each received broadcast message to GPS time, computing a tuning correction based on the difference between the time of reception and GPS time and sending a correction back to the SCC. SCC 48 then adjusts the transmission time ofthe subsequent messages based on this correction. This timing process has been described in further detail hereinabove. The NTCC 47 modem interface is implemented such that the SCC 48 wttl answer the caU placed by the NTCC to its modem. The SCC receives broadcast message data and timing control commands over the serial interface, with the broadcast message from NTCC 47 typicaUy being sent in five packets. The SCC then assembles the packets hi order and sends the message data to subcarrier modulator 68 on the next integer second. An LCD panel display 263 on SCC 48 is used to display status and debugging information.

A number of software functions are written to be common with functions in other parts ofthe system. For example, many functions related to modem commumcation by the SCC with the NTCC are identical to those used in the Network Hub. However, the serial data messages are different and, unlike the SCC, the Hub must dial and login. Parts o the time synchronization code and executive are common with the Network Hubs and trackers.

During normal operations, SCC 48 receives 5 blocks of 155 bytes of data from NTCC 47, to be transmitted each second on the FM subcarrier broadcast by radio station 12. The SCC MUler encodes the data, inserts a preamble and synchronization pattern at the beginning, and places the resulting 9264 bits into an output buffer. Before the next transmit time, the output data clock is stopped and set to start again at the next desired start time as commanded by the NTCC. The QSPI output buffer is primed, and CPU 260 toggles a TPU output channel to start the transmit synchronization process.

For NTCC-SCC synchronization, NTCC 47 coordinates the timing of sending the broadcast data to SCC 48 by basing it on the time of reception of an SCC Status message

(see Table 72 of Appendix B, referenced in the NTCC Section discussion below). The SCC sends this message each time it initiates a data transmission. At that time, NTCC 47 sends new broadcast data message (1102, see Table 71 of Appendix B, also referenced in the NTCC Section discussion below). This timing scheme ensures minimum latency ofthe broadcast data, and eliminates timing ambiguities between the NTCC and the SCC attributable to the lack of an absolute time reference at the SCC.

The complete 5 blocks (575 bytes) transmitted by NTCC 47 requires approximately 500 msecs to be sent to SCC 48, at 14400 bps. The SCC allows a total of about 900 msecs for the reception of new data before the processing must be completed for transmission ofthe data on the next second. This extra time aUows for retry of one or two message blocks that may have been corrupted. A higher connect bit rate wiU aUow additional retries, but with the possibihty that it may be less reliable. InvaUd broadcast data from an NTCC message with a vattd header should be transmitted even if an error-free retry from the NTCC is not available, because the Golay coded data may be correctable by the vehicle trackers themselves. For message data processing, SCC 48 forms the complete transmit data buffer by putting the preamble and bit-sync pattern in the buffer and then appending the data. The transmit data is sent by the NTCC to the SCC with non-return to zero (NRZ) Une coding. The SCC is required to Miller encode the data, wliich converts the 4600 NRZ data bits to 9200 Miller bits. The encoding process takes about 12 - 15 msecs. Mttler code uses memory ofthe previously encoded bits so it can only be performed on a data block if the previous block has been received. The preamble is an alternating one-zero Mttler bit pattern inserted before the bit-sync pattern: 11 00 11 00 11 00 11 00, with the left most bit transmitted first. The bit-sync pattern is 48 Miller bits long and is 9 high bits followed by 7 low bits, repeated 3 times. The QSPI ofthe 68332 processor of CPU 260 is used as the output shift register.

The internal QSPI buffer holds 16 bytes if it is configured for 8 bit transfers. With 8 bit transfers it wttl empty every 13.72 msecs, so a task must be scheduled in the real time executive to service the QSPI queue. The QSPI sends data with most significant bit first, which is taken into account when forming the preamble and bit-sync patterns and when loading the QSPI.

The NTCC/SCC data flow is iUustrated in the timing diagram of FIG. 32. SCC 48 simultaneously sends broadcast data 265 for the current frame and received data 266 from the NTCC for the next frame. After about 900 msecs into the current frame (at 267), the SCC must cut off reception of data from NTCC 47 and begin processing the avattable blocks. If data blocks are completely missing, the SCC assumes the NRZ data to be all zeros and performs Miller encoding accordingly. SCC 48 must also compute a new transmit time based on received commands from the NTCC. The TPU is programmed with the new transmit time during the gap time 269 between the broadcast data transmissions.

AU ofthe transmit timing and synchronization occurs in the approximately 6.9 msec gap time 269 between transmissions. During this time, SCC 48 performs the following steps to begin transmittuig the data for the next time:

1. Stop the QSPI.

2. Turn off the OC data clock on TPU channel 3.

3. Switch the output data buffer to the newly received data. 4. Program TPU channel 3 for continuous pulse mode to start at the next transmit time.

5. Load the QSPI with the new data and enable the QSPI.

6. Send the SCC status message to the NTCC.

7. Toggle TPU channel 1 OC state to start the synchronization process.

Transmit data timing and clocking requires 3 TPU channels: Channel 1 is programmed to be a single transition OC function, which is set up to toggle during the gap time by the CPU. The output of channel 1 is wired into the input of channel 2.

The channel parameters are:

PSC = 11 do not force any state

PAC = 010 toggle on match TB S = 0100 output channel, match TCR 1

OFFSET = 0

(REF ADDR 1) = TCR1 time for transition (REF_ADDR2) = don't care (REF_ADDR3) = don't care

Channel 2 is programmed with the ITC function to continuaUy generate links to channel 3. The ITC is set up to trigger on any transition.

The channel parameters are:

PSC = 11

PAC = 011 detect either edge TBS = 0000 input channel, capture TCR1

MAX COUNT = 1 START_LENK_CHANNEL = 3 LINK CHANNEL COUNT = 1 BANK_ADDRESS = unused TPU parameter RAM location

Channel 3 is programmed with a continuous pulse OC function. This is the output data clock and is wired to the clock input ofthe QSPI. During the gap time, it is reprogrammed with an updated REF TIME which is the transmit start time.

The channel parameters are:

PSC = 10 force low on initialization

PAC = 010 force low on match TBS = 0100 output channel, match TCR1

RATIO = EFF (REF ADDRI) = don't care (REF_ADDR2) = 134 (REF ADDR3) = transmit TCR1 time

The reference address pointers point to locations in TPU parameter RAM (random access memory). Therefore, the parameter space of unused channels must be used to store the data for this channel. Interrupts from these channels may be disabled.

SCC 48 has three modes of operation: initialization, idle, and ran. When the SCC is turned on, it enters the initialization mode. In this mode, the software initiaUzes system variables, turns on the LCD 263 and backhght, initiaUzes the modem 57, and sets up the

TPU to start the real time executive. After initiaUzation is complete, the SCC enters the idle mode.

In the Idle mode, SCC 48 waits for a caU to be received from NTCC 47. While waiting, the SCC does not send data to subcarrier modulator 68, and the output remains high or low. Modem 57 is monitored for a connection event. When the modem connects, the SCC enters the Run mode and receives commands from the NTCC.

In Run mode, NTCC 47 commands SCC 48 into one of two data transmission modes, viz.: synchronization or broadcast. The NTCC uses synchronization mode first, to align the broadcast synchronization pattern with GPS time. In this mode, the SCC chooses an arbitrary start time and transmits a preamble and bit-sync pattern without any data at one second intervals. The NTCC commands the SCC to move the transmit start time unttt synchronization with GPS time is achieved. At this point, the NTCC commands the SCC to assume broadcast mode. In this mode, the NTCC provides the five blocks of data each second to be transmitted. During ran mode operation, the SCC sends its status message to the NTCC before each transmission starts as described above.

If vattd message data stops are being received from the NTCC for a predetermined period of time, the SCC hangs up the modem, reinitializes the modem, and returns to idle mode to await another caU from the NTCC.

XI. Network Timing and Control Computer (NTCC)

As has been described hereinabove (and with brief reference again to FIG. 6), NTCC 47 interfaces with a number of other applications, including NDC Server 42, NTCC roof module 55, and via a modem, SCC 48. The NTCC serves as a real-time control interface to the radio network for the NDC, and also receives timing data and DGPS corrections from a NavSymm XR5M GPS receiver 54 in the roof module.

Interfaces between the computers are serial. PPS and reset discretes are supported between NTCC 47 and roof module 55.

NDC server 42, roof module 55, and SCC 48 att use the same protocol and message formats to communicate with NTCC 47, based on the aforesaid NavCore interface protocol. The NavCore interface protocol is modified for purposes ofthe present exemplary embodiment ofthe PROTRAK system, in that the lower byte ofthe status flag word in the header is used for a free ranning message counter. The message counter uniquely identifies the message and is used hi an ACK/NACK reply if an acknowledge to the message is requhed. This enables multiple messages ofthe same type to be pending (awaiting acknowledges) simultaneously. The message counter in the

ACK/NACK identifies the specific message being acknowledged.

In keeping with NavCore and certain other message numbering conventions, each interface is identified by a different thousands place in the message ED number. Messages transmitted by NTCC 47 use ED numbers beginning with CIOO and messages received by the NTCC use ED numbers beginning with - 200, where x is the thousands place interface identifier. The message EDs for each serial interface are shown in Table 68 below. Table 68: Serial Interface Message ED Numbers

Interface Message ED Range

SCC 1100/1200

NDC Server 2100/2200 Roof Module 3100/3200

The NTCC serial interfaces are performed using a Contec COM-8SF-2 multi-port serial IO board, which is capable of communicating at up to 115200 bps. PPS and reset discretes are supported by a Contec P 10-48W board.

The NTCC communicates with the SCC, NDC server, and roof module with serial data messages. With reference again to FIG. 6, NTCC 47 estabhshes a connection to SCC 48 by placing a caU to the SCC through modem 57. When the modem is connected, the NTCC begins sending timing control messages, and the SCC begins sending status messages. After time synchronization is achieved, the NTCC begins sending full transmit data sets consisting of DGPS data and NDC generated messages consisting of 5 frames of 115 bits in length. The SCC is responsible for generating the bit sync and the start ofthe FM broadcast. The messages used for communication between the NTCC and the SCC are summarized in Table 69 (Appendix B), and in further detail below and in other tables of Appendix B, as indicated below.

NTCC 47 controls the timing ofthe FM subcarrier broadcast using a "Timing Control" message (1101, Table 70). SCC 48 uses the data in this message to adjust its transmit timer so that the broadcast data bit sync wttl be synchronized with GPS time. The timing control message is transmitted by the NTCC near the beginning of a one-second interval. The SCC integer second timer is programmed using the timer control contained hi the tuning control message before the current timer expires.

In brief, and with reference to Table 70 (Appendix B), the timing control mode is the least significant byte of word 6 in the timing control message, and has three values: 0 = off, 1 = coarse, and 2 = fine. The control type is the most significant byte of word 6, indicating how the tuner control in words 7 and 8 ofthe message is to be appUed. The control type has three values: 0 = do not use, 1 = add to nominal, and 2 = one shot. If the control type is 0, it is ignored; if it is 1, the value ofthe timer control is added to the nominal timer value and the timer is reprogrammed; and if it is 2, the timer is programmed with the value ofthe timer control one time and then reverts to the nominal value. A "Transmit Data Frame" message (1102, Table 71), contains a portion ofthe full

SCC broadcast message which is broadcast each second. The broadcast message is broken into smaUer frames, so that if part ofthe message is missed it can be repeated more quickly than repeating the enthe broadcast message.

The nominal broadcast message typicaUy consists of five 115 byte frames (23 bit interleaving of (23,12) Golay code), which makes the enthe broadcast message 4600 data bits long. Data frame messages containing data to be transmitted on the next broadcast frame are transmitted to the SCC from the NTCC on the current frame. The SCC transmits the avattable broadcast data at the beginning of each second. If frames of data are missing, the missing frames are replaced by zeros in the transmit data stream. Near the beghrning of each second, the NTCC determines the data to be transmitted on the next second, and these data are broken up into frames. Several messages with ED 1102, one for each frame, are queued at one time.

The broadcast frame ED in word 6 ofthe "Transmit Data Frame" message indicates the broadcast frame for which the transmit data is intended. The SCC uses this value to preclude mixing ofthe data intended for different broadcast frames. The frame number and total number of frames are contained in the least significant and most significant bytes of word 7 to indicate the manner of assembly ofthe frames of data if the messages are received out of order. The number of bytes in the frame, / (in word 8), indicates the number of data bytes to foUow. If /is odd, the most significant byte ofthe last data word is padded with 0x00. The data bytes are ordered so that they are transmitted to the SCC in the same order as they are to be re-transmitted by the SCC. SCC 48 transmits status information to NTCC 47 at one-second intervals, in "SCC

Status" messages (1201, Table 72). A current nominal timer in the message contains the present nominal value ofthe transmit timer countdown. SCC status in word 8 is bit- coded.

NTCC 47 communicates with NDC server 42 via an 115200 bps serial interface, or TCP/IP directly, or over dial-up. The server supports two simultaneous NTCC systems for FM station NTCC redundancy, sending the same tracker data to both NTCC systems, but trackers and Network Hubs operate from only one at a time. This is the primary system, and if that system fails, NDC server 42 commands the Net Hubs to switch to the secondary FM station, and the trackers wttl soon thereafter also switch to the secondary station.

During normal operation, server 42 sends packets containing data to be transmitted to the vehicles (i.e., to the trackers instaUed thereon) to NTCC 47. The NTCC formats the data into transmit data frames and sends them to the SCC. The NTCC provides server 42 with a status message to be transmitted at the beginning of each integer second to allow the server to schedule processing tasks. The status message indicates status ofthe NTCC and SCC to the server, and informs the server regarding avaUable space in the output queue for data to be sent to the vehicles.

Messages used in communication between NTCC 47 (as weU as an additional NTCC, if present) and NDC server 42 are summarized in Table 73. Dial-up NTCCs must login twice, with a 3 Com/U.S. Robotics Modem Bank and Radius server for the first login using standard "login:" and "password:" prompts to authenticate user ED and password. If a dial-up NTCC is successfuUy logged into the network, it is connected to a TCP port on the NDC server reserved for Network Hub connections. Once connected, the NDC server sends a "Login Info Request" message (2104, Table 74) to the connecting Network Hub to authenticate it to the NDC server. The same user ID/password pair used to login to the modem bank is sent as a response in a "Login Info Response" message (2304, Table 75).

However, NTCCs with TCP/IP connectivity to the NDC server need not login to the modem bank, but rather may simply connect to a TCP port on the NDC server and respond to the "Login Info Request" message."

After the NTCC is authenticated, the NDC server requests an NTCC Profile by sending an "NTCC Profile Request" message (4105, Table 76). Although the NTCC may modify its profile, the NDC server maintains an accurate profile by using the information contained in an "NTCC Profile Response" message (4305, Table 77) which is sent by the NTCC in reply to the request message.

The NTCC controls the real-time portion ofthe radio network for the NDC server. A "Status Message 2" (2103, Table 78) is sent by the NTCC to the server at the start of each second, to be used by the server as a rough time mark for scheduling periodic tasks. The accuracy ofthe time mark depends on the rate at which the NTCC and the server service theh serial transmit and receive data queues, respectively. If two NTCCs are connected to the server, the server uses the time mark information from the primary NTCC.

When the NTCC requests connection to the NDC server, the server transmits data describing the FM radio station to which the NTCC wttl attempt to connect in an 'TM Data" message (2201, Table 79) which indicates the frequency ofthe FM station and the subcarrier frequency on which the PROTRAK system is operating. The position ofthe FM transmitter in latitude, longitude and altitude is provided in the message to enable the NTCC to compute the propagation delay ofthe broadcast. The telephone number in the message is a null-terminated, ASCII string that the NTCC must dial to connect to the SCC.

For each base station transmit packet generated by the NDC server, e.g. 'TM Identification," "Slot AUocation," etc., the server sends a "Vehicle Packet" message (2202, Table 80) containing the transmit packet to the NTCC, which is ultimately to be transmitted to the vehicles by the SCC via the FM subcarrier. The NTCC places this packet in the output queue, and in the base station broadcast message as space permits. "Vehicle Packet" messages are not acknowledged by the NTCC, simply because ofthe volume of messages to be coordinated by the server. When the NTCC connects to the NDC server, the latter sends a 'Local Time Zone

Offset" message (2203, Table 81) to the NTCC indicative ofthe offset, which the NTCC broadcasts to trackers (via the SCC and the FM subcarrier radio transmission) with the "GPS Time" base packet. The NDC Server sends this offset message 2203 to the NTCC not only in response to receiving a valid NTCC profile response message, but at the start of each hour. In this way, the NTCC maintains the latest time zone information in aU local time zones that change on the hour.

NTCC 47 communicates via a 38400 bps serial interface with roof module 55, whose CPU 56 receives the FM broadcast via receiver 58 from SCC 48 at radio station 12. As previously described herein, the time of arrival ofthe FM data is compared to the GPS integer second, and the difference between the integer second start and the time the message data are received is provided to NTCC 47 to develop a correction for timing control feedback to SCC 48. The NTCC compares the received data to the data provided to the SCC, to verify that the correct data was transmitted. NTCC 47 furnishes RF information to roof module 55 to enable the latter to tune FM receiver 58 to the proper channel and subcarrier.

Messages used for communication between NTCC 47 and roof module 55 are summarized in Table 82. The NTCC sends a "Frequency Control" message (3101, Table 83) to the roof module during initiaUzation, commanding the latter to tune to the proper FM radio frequency

The NTCC furnishes time and status information to the roof module by sending a 'Time/Status" message (3102, Table 84) at one-second intervals. Although the roof module in the exemplary embodiment uses GPS time for synchronization to the PPS from the GPS receiver, as an alternative a roof module CPU 56 may be used that does not require periodic time information, but simply initialization information for GPS receiver 54. The "Time/Status" message, sent shortly after the PPS, contains the time at the PPS. Other mode and status information are also provided to the roof module CPU.

In a "Status" message (3201, Table 85), the roof module provides its status to the NTCC, including the current frequency being used. A timing status word in the message indicates the GPS time synchronization status with bit 0 = received time vaUd and bit 1 = time synchronized. FM status word is coded with bit 0 = synthesizers locked, bit 1 = bit-sync hunt mode, bit 2 = sync detected.

The roof module reports received FM data in a message (3202, Table 86) to the NTCC, which the NTCC compares to the data transmitted for frame time synchronization and monitoring ofthe transmitter and roof module receiver. During normal operation, the FM data is received starting near the begimiing ofthe integer second and ends shortly before the end thereof, so the FM data for a one-second interval is reported to the NTCC at the beginning ofthe next interval.

The roof module indicates the time difference (delay) between the integer second and the received FM bit-sync to the NTCC in a "Timing" message (3203, Table 87), for timing loop control. The integer second is defined by the GPS PPS, and the "Timing" message must be sent immediately after the delay is computed to aUow the NTCC to compute a clock correction and send it to the SCC before the start ofthe next integer second. In the normal run mode, the sync is detected about 15 msec after the integer second. The GPS week and time are provided in the "Timing" message for the start ofthe integer second for which the delay is computed. The delay specified is the time from start of integer second to detection ofthe sync. The TPU running at 5 MHz has a resolution of

0.2 μsec. The GPS receiver 54 of roof module 55 is a avSymm XR5M GPS receiver for DGPS correction generation. The NTCC has two serial interfaces to the XR5M receiver - - a CDU port and the DGPS output port — the CDU port being used to control receiver operation and the DGPS port supplying RTCM- 104 format DGPS corrections. Alternatively, roof module 55 may be implemented so that the interface with its CPU 56 supports the GPS functions.

Discrete Interfaces include PPS (pulse-per-second) and Reset, the NTCC requiring a PPS for synchronizing its executive to GPS time. The roof module also uses a PPS for timing ofthe subcarrier broadcast, and in the cunent embodiment, the Navstar XR5M GPS receiver provides the PPS and the NTCC uses a reset signal to control initialization of that receiver.

XII. Database Management and CCS Server (DMCS)

The DMCS (e.g., 27, FIG. 3) at a customer site 13 is conveniently described in conjunction with control ofthe interface between NDC server 42 and components that communicate with the server including the CCSs (e.g., 14, 15), the NDC command stations (e.g., 43, 45, FIG.4), the Network Hubs (e.g., 11-1, 11-2, FIG. 3), and NTCC 47, and messages used for those communications.

The standard message format used to communicate between the NDC Server and att other systems is based on the message format defined in the aforesaid NavCore interface protocol, with a fixed five-word header section and an optional data section as shown in Table 88. The standard message header format is shown hi Table 89.

The Message Start Word is always 0x8EFF, indicating the start of a valid message. The Standard Message Type ED (EDNN) indicates the interface (I) where a message is used, the message dhection (D), purpose, and number (NN). The vaUd Message Type ED range for the software components that mterface with the NDC server is shown in Table 90, and, for those software components that interface with the DMCS, in Table 91. The Data Word Count field indicates the number of 16-bit words contained in the data portion of a message (this field being 0 if the message has no data section), excluding the Data Checksum field.

In the Flags/Message ED field, the least significant byte (bits 7 - 0) identifies the message if an acknowledgment or negative acknowledgment is necessary, and bits 12, 11, and 10 are flags indicating Requhed Acknowledgment, Acknowledgment, and Negative Acknowledgment, respectively. Lf a message is sent with the Required Acknowledgment bit (12) set, the receiver must respond using the same Message ED with the Acknowledgment bit (11) or the Negative Acknowledgment bit (10) set. If a requhed acknowledgment is not received within a preset amount of time, or a Negative Acknowledgment is received, the sender must send the message again.

The Header Checksum is computed by adding aU words contained in the header and performing a 2's complement on the sum, expressed mathematically as (from the NavCore interface protocol) :

4 SUM = Mod 216 Σ word (I)

1 = 1

Header Checksum = -SUM if SUM ≠ -32768 Header Checksum = SUM if SUM = -32768

Where:

1. Unary negation is computed as the 2's complement of some 16-bit data word.

2. Mod 216 indicates the least 16 bits of an arithmetic process (only lower 16 bits kept). 3. The summation is the algebraic binary sum ofthe words indicated by subscript

4. The -32768 Sum Value must be treated as a special case since it cannot be negated.

Most standard messages used to communicate with the NDC server have a data section as shown in Table 92. The Data Word Count hi the message header identifies the number of data words in the data section, these beingl6-bit data words that form a message in the format indicated by the Standard Message Type ED. Messages without a data section have no data checksum. Messages with a data section do have a data checksum, which is computed in the same way as the header checksum. The only difference between the two calculations is that the header checksum is calculated using the first four words ofthe header while the data checksum is calculated using aU ofthe data words prior to the Data Checksum field. Each byte ofthe Standard Message is transferred with bits ordered from least significant to most significant, i.e., the least significant bit being transmitted/received first. Each word is sent with the least significant byte first.

The message formats used for the NDC server DMCS interface are as foUows. With respect to command/response messages and message request/response sequences that may be initiated by NDC server 42, once a DMCS 27 has connected to the NDC server, it must be ready to receive and respond, if necessary, to messages sent by the server. The Message Type ED of 71XX identifies messages that are initiated by the NDC server while necessary responses to these messages are indicated by Message Type ED 73XX (as shown in Table 90).

Dial-up DMCS appUcations are requhed to login twice. A U.S. Robotics Modem Bank and Radius server perform the first login, using standard PPP login prompts to request authentication ofthe user ED and password. If a dial-up DMCS is successfuUy logged into the network, it may connect a TCP port on the NDC server, at which point the server sends a "Login Info Request" message (7101, Table 93) to the connecting DMCS for authentication to the server. The same user ID/password pair used to login to the modem bank is sent as a response in a "Login Info Response" message (7301, Table 94). A 'Login Info Response Result" message (7107, Table 95) is returned by the NDC server to indicate the result ofthe login attempt. The double login is necessary to control access to both the NDC server network and the NDC server itself, and is hidden from dial-up

DMCS users. DMCS appUcations with TCP/ P connectivity to the NDC server do not require login to the modem bank, but simply connect to a TCP port on the NDC Server and respond to the "Login Info Request" message.

When messages (Text, Predefined, or Site Dispatch) are sent to trackers, a timeout value may be specified. If a message is not acknowledged before its specified timeout value, the NDC server sends a "Message Timeout" message (7107, Table 96) to indicate that the message was not acknowledged and that no further attempt will be made to send the message unless a re-send request is made. Messages sent to multiple trackers may be acknowledged by a subset ofthe original recipient Ust. The tracker EDs Usted in the "Message Timeout" are for those trackers that failed to acknowledge the message prior to the timeout. NDC command stations have the option to send an "NDC Command" message (7102, Table 97) to CCSs connected to the DMCS, to notify CCS users of important events (e.g., system shutdown warning during testing). A DMCS that receives an 'NDC Command" message responds using an "NDC Command Response" message (7302, Table 98) and forwards it to aU CCSs.

Whtte the DMCS is connected to the NDC server it receives real-time tracking data from the server in a "Real-time Tracking Data" message (7103, Table 99) for trackers associated with the respective customer. Such messages, which may contain messages of several different types, e.g., tracker location, tracker speed, tracker heading, user data received from a tracker, message acknowledgments/responses, and site status information, are sent to the DMCS as they are received by the server. Tracking data messages for trackers with continuous tracking service or login only tracking (LOT) service are received at a rate specified by the tracker's associated active update rate. And for trackers with manual tracking service, tracking data messages are received as a result of a request made by the DMCS with a Send Tracking Request Message. The Real-time

Tracking Data Message Format is shown in Table 100.

As previously described herein, the trackers have a capabihty to sense when the associated vehicle's ignition has been turned on or off. Lf a tracker is in the RF network and a vehicle's ignition is turned off for a predetermined interval of time, the tracker requests a low- power slot from the NDC server. After receiving its low-power slot, the tracker shuts down unttt just prior to its next update. Trackers continue to provide updates in this slot while the ignition remains off or the vehicle's battery voltage is below a minimum value. A "Tracker Power Mode" message (7107, Table 101) is sent to the apphcable DMCS each time a tracker for which it is accountable switches to or from low power mode.

When the DMCS or NDC command station updates a tracker profile, the updated profile information is forwarded to att connected DMCS appUcations associated with the profile in the form of a "Tracker Profile Update" message (7104, Table 102), with the Tracker Profile Format shown in Table 103. NDC server 42 does not manage the installation history for trackers, but can query the DMCS (e.g., 27) to determine when trackers have been instaUed and removed from vehicles. A "Retrieve Tracker Installation History" message (7105, Table 104) allows the NDC server to specify an instaUation date range. A "Retrieve Tracker ListaUation History Response" message (7305, Table 105) is used by the DMCS to supply information to the NDC server for aU trackers that were instaUed into vehicles during the specified time period. Since the response message may be quite large, an individual response message is returned for each tracker instaUed. An exemplary Tracker Installation Record is shown in Table 106.

DMCS 27, which is responsible for management of vehicle profile information (e.g., vehicle identification number (VTN), state, Ucense, make, model, year), provides this information to NDC server 42 in the form of a "Retrieve Vehicle Profile List" message

(7106, Table 107), upon request. The NDC server typically makes this request if it knows a VTN (which it has learned from the "Retrieve Tracker Installation History Response" message) and needs additional information about the vehicle. If the VTN is not known, the Retrieve Vehicle Profile by InstaUed Tracker may be used. A Retrieve Vehicle Profile List Response message and Vehicle Profile Format are shown in Tables 108 and 109, respectively.

Once a DMCS has successfuUy logged into the NDC server, it may send command messages to the server with a Message Type ED of 72XX. Any responses from the server to these command messages are identified by Message Type ED 74XX. Command/response messages and message request/response sequences initiated by a logged on DMCS are discussed below.

When messages (Text, Predefined, or Site Dispatch) are sent to trackers, a message sequence ED is associated with the message. Messages pending acknowledgment may be cancelled by sending a "Cancel" message (7215, Table 110) with the associated message sequence ED, which is foUowed by a "Cancel Message Response" message (7415,

Table 111).

A user ED and password combination is necessary for dial-up access or TCP access to the NDC server. Users that login to the NDC server network and application use the same user ED and password for both. Once a user has logged into the NDC server, a 'Modify Account Password" message (7201, Table 112) may be used to modify the password, and is responded to by a Modify Account Password Response message (7401, Table 113)

When a tracker profile is entered into the NDC server database, a tracking service is entered as part ofthe profile. Each tracker has a tracking service, with vaUd tracking services being continuous tracking, LOT, and manual tracking. Trackers with continuous tracking service send theh tracking information on a periodic basis even if a DMCS is not connected to the NDC server to receive this information. Trackers with LOT service transmit theh mformation periodically if a DMCS is connected to the NDC server to receive this tracking information. Manual tracking service trackers only transmit theh tracking information upon request. For continuous and LOT, an update rate (in seconds) is also entered as part ofthe profile to indicate the periodic rate at which the tracker should send its tracking information, the rate being used to initiaUy set a tracker's active update rate when a tracker is first ehgible to enter the radio network. A 'Modify Tracking Service" message (7202, Table 114) may be sent to modify the tracking service and the associated update rate, and is foUowed by a 'Modify Tracking Service Response" message (7402, Table 115).

DMCS appUcations may send a "Ping Request" message (7203, Table 116) to verify theh connection to the NDC server. If a "Ping Response" message (7403, Table 117) is received, the connection is active and the NDC server is operational.

Referring back to the 'Message Timeout" message sent by the NDC server, described above, a "Resend" message (7216, Table 118) is sent to the server to indicate that a message should be re-sent to trackers from the original Ust of recipients that faUed to acknowledge the message before the timeout period, foUowed by a "Resend Message Response" message (7416, Table 119).

As with the DMCS's responsibihty for management and maintenance of vehicle profile information, and the use of a Retrieve Vehicle Profile List, described above, the

NDC server maintains an information profile for each tracker, wliich contains information to identify the tracker. The information includes the tracker's update rate, service type, and service flags. A "Retrieve Tracker Profile List" message (7204, Table 120) is sent to retrieve a Ust of tracker profiles associated with a customer account. The Ust to be returned may be limited by specifying the tracker EDs. The apphcable response message

(7404) is shown in Table 121. Text messages may be sent to vehicles with a tracker and an MDT. A "Send" message (7205, Table 122) commands the NDC server to send a text message to aU trackers associated with the requesting user or to a Ust of individual trackers identified by tracker ED. Pre-defined Exemplary Message Response Sets are shown in Table 123. If the NDC server successfuUy queues a message to be sent, a "Send Message Response" message (7405, Table 124) is used to indicate a Message Sequence

ED associated with the message being sent. If the message is successfuUy acknowledged and/or responded to by a tracker, the DMCS receives a 'Message Response And User Data" or "Short Message Response and User Data" packet within a "Real-time Tracking Data" Message (discussed above) that contains the same Message Sequence ED. Pre-defined text messages also may be sent to vehicles with a tracker and MDT. A

"Send Pre-defined Message ED" message (7206, Table 125) commands the NDC server to send a pre-defined message ED to aU trackers associated with the requesting user or to a list of individual trackers identified by tracker ED. Lf the NDC server successfuUy queues a message to be sent, a "Send Pre-defined Message ED Response" message (7406, Table 126) is used to indicate a Message Sequence ED associated with the message ED being sent. If the message is successfully acknowledged and/or responded to by a tracker, the DMCS will receive a "Message Response And User Data" or "Short Message Response and User Data" packet within a "Real-time Tracking Data" message that contains the same Message Sequence ED. A "Send Site Dispatch" message (7207, Table 127) is used to facilitate dispatching and automating the recording of site arrival/departure. It is sent by the DMCS to a tracker to indicate a job site area and a message (e.g., site street address) to be displayed to the vehicle operator. A pre-defined or custom response set may be defined to permit a manual response. Upon arrival/departure at/from the site defined by the message, the tracker sends a "Site Status" packet within a "Real-time Tracking Data" Message to indicate site arrival/departure, either by virtue ofthe tracker's determination based on its latitude/longitude relative to the job site area, or ofthe vehicle operator using the MDT to indicate the tracker site arrival/departure, and a consequent "Send Site Dispatch Response" message (7407, Table 128). A "Send User Data" message (7208, Table 129) commands the NDC server to send a User Data message to aU trackers associated with the requesting user (customer) or to a Ust of individual trackers identified by tracker ED. Ef the NDC server successfuUy queues a message to be sent, a "Send User Data Response" message (7408, Table 130) indicates a Message Sequence ED associated with the message being sent. If the message is successfuUy acknowledged by a tracker, the DMCS receives a "Message Response And User Data" or "Short Message Response and User Data" packet within a "Real-Time

Tracking Data" message that contains the same Message Sequence ED.

Trackers that have manual tracking service only transmit theh tracking information upon request. A "Send Tracking Request" message (7209, Table 131) aUows the DMCS to request tracking information from a specific tracker. If a tracker successfuUy receives a tracking information request, it transmits its tracking information during the next avaUable time slot reserved for such a transmission, and the requesting DMCS receives a "Real-time Data" message with the requested tracking information. A "Send Tracking Request Response" message (7409) is shown in Table 132.

When the DMCS creates/updates/modifies a tracker installation record, the record is forwarded to the NDC server as an update sent in the form of a "Tracker InstaUation

Record Update" message (7210, Table 133). Also, when the DMCS updates a vehicle profile, the updated profile information is forwarded to the NDC server in the form of a "Vehicle Profile Update" message (7212, Table 134).

Xm. Event Driven Status Reporting This aspect ofthe invention provides a method and apparatus for automatically determining and reporting events from a vehicle to an owner or dispatcher ofthe vehicle at a location which is remote from the vehicle. Events to be reported include changes in status of vehicle operation, location, or measurements of vehicle systems or cargo. The tracking computer (tracker) in the vehicle is connected to various sensors which measure parameters of interest to the dispatcher or owner, and reports critical changes in parameters over the TDMA network. CCS/DMCS computers at the customer's location display status changes for use by the dispatcher, or record data for later analysis. Software in the tracker and a variety of sensors aUows multiple, compUcated, and abstract status events that are relevant to specific vehicle or industry appUcations to be determined and reported by the tracker. Automatically generated reports from vehicles enables considerably more accurate and timely data to be provided to the customer's site than is avattable from the human operators ofthe vehicles.

FIG. 33 is a diagram of various types of sensors and/or measurement sources that are readily connectedVsupphed to the tracking computer (tracker) 135, either singly or in combination with each other, including certain "basic" sensors, analog inputs, discrete inputs, TPU inputs, and serial interfaces to the tracker that can be configured for almost any measurement and control purpose. An expanded list of sensor inputs is set forth below. These fatt into the two broad categories of (1) basic vehicle functions and (2) operational functions ofthe vehicle specific to the industry in which it is used. Operational functions require the addition of sensors to a standard vehicle. The reader is also referred back to FIG. 23 which illustrates certain particularly significant sensors of operational functions for ready-mix trucks, such as track 195 — a dram rotation sensor 281 and a washout water flow detection sensor 281 --, as well as a generalized set of inputs 280 to tracker 135 from sensors/measurement sources ofthe types referenced in this section of the specification.

Basic vehicle functions or parameters that are measured directly by the tracker may vary from vehicle to vehicle, but typicaUy include the foUowing:

Vehicle Ignition and Run Time

Headlights • Reverse

Wheel Speed (from the transmission)

Passenger/Driver Door Open

Four Wheel Drive Engagement

Ambulance Lights/Sirens • Fuel Level

Coolant temperature

OU Pressure

Battery Voltage

Engine Warnings

Other vehicle functions may require the addition of sensors for measurement, or may be measured directly on equipment added to the vehicle to perform a function specific to the business in which the vehicle is used. Some typical parameters or functions that fall into this category are:

• Theft or Tamper Alarms • Cargo Door Open • Cargo Temperature

Vehicle Weight

Power Takeoff Engagement: Power TakeOffs (PTOs) can run a wide range of equipment, including:

- Pumps

- Winches

- Cranes

- Augers Engine Data Bus Parameters and Tolerance Checking • Dump Box Up or Hatch Open

Ready Mix Dram Rotation Speed and Dhection Ready Mix Wash Water Usage Ready Mix FU1 Water Volume

Vehicle functions are combined with location and speed information from the navigation system. Correlation of measurements to vehicle motion enables events to be triggered based on vehicle location, or to qualify measured data as proper operation of a vehicle — or as an exception to normal operations, such as opening a cargo door outside of normal customer or company loading/unloading zones.

In this respect, the system allows the owner or dispatcher ofthe vehicle to define rectangular zones on a stored map ofthe metropoUtan area of interest; for example, a zone

300 as shown in FIG. 34. The comers defining the zones (e.g., 301, 302, 303, 304 for zone 300) are sent to the vehicles so that the tracker can determine, based on its navigation solution, whether it is inside or outside any particular zone. These zones are typicaUy set up to identify home or plant sites where vehicles are usuaUy based or pick up cargo, or job sites where vehicles are usuaUy dispatched to deUver cargo or perform a service.

Zones can also define map regions for other purposes such as restricted speed, restricted weight, or borders that the vehicle is not aUowed to cross. Using navigation alone, the tracker can report: • Distance Traveled Between Zones

Engine On and Off

Driving Over a Specified Speed

Driving at Inappropriate Times

Unauthorized Stops • Times of Arrival and Departure to and from Specified Locations

Combining location information with other measured parameters on the vehicle can generate other status events, such as using the vehicle location to confirm the correct vehicle status, notifying the dispatcher if a cargo door opens at an inappropriate time or place, or correlating an engine problem to a particular location to understand the underlying circumstances. When a vehicle tracker needs to transmit event data, it requests special time slots using one of these time slots. It is then granted sufficient auxiUary reporting times at twelve second intervals to send its data. The total latency between an event being detected and the transmission of data is preferably kept under thirty seconds.

AU data passed through the network and other status information is stored on large database servers for later retrieval for reports on vehicle activity or analysis. The tracker reports events using different types of data packets depending on the event. Events indicated simply by dhect measurement of an input are reported in a common event packet format that mdicates the input measured (discrete or analog) and the new value. These are events such as cargo door open, four wheel drive engaged, or PTO driven pump on. These data are stored in the database and passed on to the customer appUcations. Since a fleet owner (operator or subscriber) may have many types of vehicles hi the fleet, and each may have different event data of interest on the same inputs to the tracker, the data must be clearly identified from vehicle to vehicle.

Identifying the event reports by the tracker is accomplished by a tracker configuration appUcation ranning in the NDC. When a tracker is instaUed in a vehicle and sensors are connected to its inputs, the configuration application activates the tracker by sending it a command for the attached inputs which identifies thresholds and hysteresis on triggering an event on the input. The configuration application also stores the association of each ofthe tracker's inputs to the specific event type, such as cargo door open. In more comphcated situations where a vehicle has a detailed set of logic to operate to determine when and what type of events occur, for example a ready mix track or an ambulance, the configuration application sends a command to the vehicle's tracker to activate an enthe section of software to process inputs. En these cases, industry specific data packets are sent by the tracker to identify detailed event status and data corresponding to the event.

A number of specific applications for event driven reporting of vehicle status are described below. Examples of apphcations to specific industries, by way of ttlustration and not limitation, are the foUowing: ready mix concrete, bulk powder transport, bulk aggregate transport, and ambulance operation. Many more examples of applications that require automated event reporting might be Usted. The combinations and apphcations of parameters that can be measured and reported are virtually Umitless.

A. Ready Mix Concrete

Whtte efficient use of fixed assets is important in any business, it is particularly important in the ready mix concrete industry. This is primarily a dehvery business, since the product being dehvered is essentially a commodity and the raw material costs do not vary significantly between supphers. The business, therefore, is one in which the efficient use of very expensive transportation assets makes the difference between profit and loss.

The transit mixer track has a weU defined sequence of events through which it runs in the process of deUvering concrete, generally comprising the steps of:

1) Load 2) Leave Plant

3) Arrive Job

4) Begin Pour

5) End Pour

6) Wash 7) Leave Job

8) Arrive Plant

It is known that the ready mix concrete industry has been in search of a method to indicate these events to the dispatcher in a cost effective, timely, and accurate manner. Reliable indication of these events to the dispatcher results in the most efficient use ofthe track fleet. By knowing the stage of operation each track is in, the dispatcher can choose the best available tracks for the next loads. This is particularly true when planned schedules are changed by customer needs or delays in delivery. Ready mix companies have typicaUy used driver voice enunciation for these events or driver operated status boxes. Voice and status box use have a fundamental limitation hi that they require the driver to take action to notify the dispatcher of his current state of operation. Even weU intentioned drivers too often forget to notify the dispatcher. Industry estimates are that less than 10% of data provided through these means is accurate. Status boxes are control heads interfaced to the voice radios, the status box having multiple buttons, typicaUy a button operable to indicate each ofthe above-noted deUvery phases. An advantage ofthe status box is that data from it can be provided to common dispatch appUcations used in the industry to enable the dispatch software to track the track through the phases without manual intervention by the dispatcher. However, this advantage is rarely realized because of unreliabiUty ofthe data from the driver, and the consequent inabUity ofthe dispatcher to make proper decisions for the most efficient use of assets.

With the appropriate sensors on the transit mixer truck and software in the wireless data computer, the ready mix concrete deUvery phases can be automaticaUy and rehably determined. Rehable, automated sequencing is achieved according to this aspect ofthe present invention by implementation of three basic sensors on the truck, as well as reUable navigation, and involved state logic. In a preferred embodiment, the sensors comprise a drum rotation sensor 280 (FIG. 23) that measures both speed and direction ofthe mixer drum, a water flow sensor 281 that measures water being used to wash off the track, and a door switch (e.g., associated with the switch that senses an open door to turn on the interior Ughts in the track cab) that indicates when the driver's door is open. Information regarding location and speed ofthe vehicle is requhed to determine when the truck is at a plant or a job site (or en route to the site). The state logic ties all of this information together to allow the tracker to report each phase ofthe deUvery process back to the subscriber's site.

Drum rotation sensor 280 measures the speed and dhection ofthe dram 287 of track 195. In a preferred embodiment, sensor 280 is unlike typical drum revolution counters instaUed on mixer trucks that use limit switches or Hall effect magnetic or proximity switches to count drum revolutions, but instead accurately provides both speed and direction ~ parameters which are needed to help determine when the track is being loaded, when pouring ofthe wet concrete contents ofthe drum is commenced and when it is completed. Loading is typicaUy performed by running the dram in the "charge" dhection at high speed, whereas normal mixing is performed while the track is on the road and at a much slower charge speed. Pouring is typically performed at a very slow discharge speed, and dram speed is often increased as the drum empties. Referring to the block diagram ofthe drum rotation sensor 280 of FIG.35, two Allegro 3240 HaU effect sensors 288, 289 are employed, separated by approximately two inches on a bracket 290 that mounts to the top ofthe transmission 291 that drives the ready mix dram 287. Sensor 280 is activated by six magnets that are placed around the axis of dram rotation on the interface plate between the transmission and the dram. Magnet assemblies 292 used to actuate the HaU effect sensors 288, 289 are attached to the dram-transmission interface flange 293.

The transmission to dram interface is the ideal location for rotation sensor 280 when added to the mixer after it is buttt. Direct measurement of transmission RPM is preferred but is only practical if the transmission can be modified at the factory to supply a rotational speed/ dhection output. The transmission interface has weU controlled dimensions and is relatively free of contaminants and from driver interference. It is also common among front and rear discharge mixers. Other potential locations for sensor placement, such as the idler wheels at the dram mouth or between the midpoint ofthe dram and the track chassis, have drawbacks that include dimensional variations from manufacturer to manufacturer and from vehicle model to model. These locations are also more exposed to grease, dirt, damage, and variations in gap distances due to flexure ofthe track frame and bouncing ofthe dram out of its idler wheels.

The top ofthe standard transmission interface has mounting holes avattable for oil coolers and water tanks and may be used for sensor mounting. Despite the large size of a transit mixer track 195 (FIG. 23), the clearances around the transmission interface are very tight. Also, roughly one inch of clearance exists between the bolts holding the dram to the interface plate and the pedestal to which the transmission is mounted. Options for magnet mounting are restricted if factory instaUed rotation counters must be accommodated. These sensors are of several varieties including reed switches using a similar magnet bolt design, limit switches actuated by a flange attached one ofthe dram bolts, or proximity sensors actuated by a flange just outside the interface plate radius.

To mount magnets in the dram bolt radius ofthe interface plate for att manufacturers' mixer tracks, a magnet holder bracket is used. For contemporary mixer track models, the foUowing configurations are supported: (1) no bracket, (2) single bracket used to offset a rotation counter actuation magnet, or (3) six brackets used to hold in-radius magnets when bolt holes are unavailable. Mixers using ZF transmissions from most manufacturers do not requhe the bracket. In these cases, six threaded holes in the interface plate are avattable for magnet bolts to be inserted. Mixers manufactured by McNeilus with ZF transmissions have a reed switch rotation counter actuated by a factory instaUed magnet bolt in the interface plate, which is replaced by a magnet rivet offset from the normal bolt radius by the bracket. The reed switch is moved from its factory bracket to a hole in the newly instaUed speed and direction sensor bracket. EEP transmissions populate aU but two holes in the interface plate with bolts to hold the drum to the transmission. For this transmission, the bracket is rotated 90 degrees and flipped over so that the magnet rivet is held between the bolts that mate the dram to the plate. Either six bracket-rivet assembhes are used, or a combination of two magnet bolts and four brackets-rivet assembhes.

Sensor 280 in this exemplary embodiment has a four wire interface 294 to the tracker 135: power, ground, and a signal line from each HaU effect sensor. The signals are inputs to the TPU ofthe Motorola 68332 microcontroUer (CPU) for the tracker. The TPU has dedicated hardware for measuring pulses with very precise timing. When a magnet on the drum passes by a sensor, the sensor outputs a low going pulse. Referring now to FIG.36 which is a timing diagram ofthe pulses resulting from the interaction of the sensors and the magnet on drum rotation, with the two sensors 288, 89 denoted A and B, respectively, a simple determination is made of dram 287 speed and direction. Speed is determined by two successive pulses 295, 296 from sensor A. The time between pulses (T^ in seconds divided by 6 magnets (pulses) per revolution multiplied by 60 seconds in a minute yields the RPM ofthe drum. The maximum speed of a ready mix drum is about 16 RPM. Dhection is determined by the relative timing of pulses detected by both sensors. If the time between a pulse 295 on sensor A and a pulse 297 on sensor B (T^B) is less than the time to the next pulse 296 on sensor A (T^, then the dram is rotating in the A to B direction, which is the charge dhection. Conversely, if the time between a pulse on sensor A and a pulse on sensor B is greater than the time to the next pulse on sensor A, then the dram is rotating in the B to A dhection, which is the discharge dhection. The gap 298 (FIG. 35) between the faces ofthe magnets and the sensor is an important consideration. During loading and over the road, the track experiences very heavy shock and vibration loads. These loads can cause the dram to bounce on its idler wheels and the truck frame to flex. As tracks and transmissions age, the problem becomes worse. Preferably, a gap 298 of at least about three quarters of an inch is provided to avoid damage to sensors or magnets. Transit mixer tracks typicaUy have a water tank that stores water under pressure.

The water is used to add water to the concrete mixture and also to wash off the track when a pour has been completed. In order to determine when wash is occurring, the water flowing through the hose is measured using a flow switch. The flow switcfrtriggers at a preset flow volume threshold. A number of technologies for the flow switch can be used to detect flow, viz.: water tank ah pressure, eddy current, differential pressure through an orifice, and spring deflection shders or flappers. A flow switch is a preferred sensor 281 (FIG. 23) for this apphcation because the volume of flow is not important, just the time being spent washing the track. A key design consideration for a flow switch or sensor is that it must work with water that is contaminated with dirt and debris such as rocks and large fragments of rust.

For rear discharge mixers, the driver must exit the track to set up the chutes before pouring. A door switch is used to determine when the driver's door is opened. Driver door opening is used to confirm arrival at the job site, but is not critical for proper operation ofthe system. A state transition diagram which defines the logic used by the tracker to combine sensor and navigation data to automatically derive mixer status is shown in FIG. 37. The logic is necessarily complex to account for all ofthe anomahes from the normal concrete deUvery flow that may be encountered. Thresholds and timeouts are set to prevent false triggers of logic states at the expense of a smaU delay in indicating the event. The primary states Usted above are shown in bold in the Figure.

The deUvery process starts with the track ignition being turned on (310) at the plant (311). Once the navigation system is initiaUzed, the tracker installed in the truck determines that it is at the plant. Mixers are loaded by parking under the batch plant and ranning the drum in the charge dhection very fast. This is detected by the tracker if the track has a speed of less than two miles per hour, the track is at the plant, and the drum speed and dhection is about the fast charge threshold, all for 60 seconds. When this is detected (312), the tracker transmits the loading status (313).

After loading, the truck typicaUy proceeds to the wash rack where water is added to the mix, dust is washed from the truck, and the water tank on the truck is topped off. A state that is detectable but not usuaUy requhed by a ready mix company is identifying if a track is at the wash rack (314). This can be determined by a shght change in position of the track and parking after loading without leaving the plant. Next the track wttl leave the plant. This is determined by having a location outside the predetermined rectangular zone (e.g., see FIG, 34) that defines the plant and a speed above 15 miles per hour. When this is detected (315), the tracker transmits the leave plant status (316). Hysteresis is placed on the zone boundary crossing so that a track driving along the edge ofthe zone does not cause multiple arrive-leave plant sequences.

Optimal use ofthe system requhes the dispatcher to send a dispatch message to the track that indicates to the tracker the rectangular zone defining the boundaries of the job site, but it is not required for the tracker to provide automated status. Job site location information enables the tracker to determine job arrival separately from the beginning of the pour, enables the tracker to determine exception information about pours taking place away from job sites, and allows route optimization software to have reUable information about trip times.

Job arrival is determined by the track entering the defined job zone and then having a speed below five miles per hour for at least one minute, or the driver's door opening, whichever occurs first (317). If a job zone is not defined, then job arrival is determined by the drum operating in the discharge direction for more than 10 seconds (318). Alternatively, a fraction of a revolution ofthe drum in the discharge dhection can be used . When these conditions are detected, the tracker transmits the arrive job status (319). The start of pour condition is determined when the drum is run in the discharge direction for 20 seconds, or alternatively, one or two revolutions. Once this is detected (320), start pour is transmitted by the tracker (321). This places the tracker software in the pouring state (322), and it is then looking for an end of pour condition.

End of pour may be detected in a number of ways. Some pours are conducted in slow discharge. When the dram is near empty, the dram is sped up to extract the last remaining concrete. If the dram is ran in fast discharge for 10 seconds after rarining in slow discharge (323), this wttl trigger end of pour (324). If wash water is used for two minutes (325), end of pour is also triggered (326) because use of that much water almost certainly indicates the truck is being washed. End pour (327) can also be triggered is the speed ofthe track is over 30 miles per hour (328). Tracks can rarely move that fast on a job site, particularly if they are stttl pouring because the chutes are typically left attached to the truck unttt pour is complete. An alternative method can be enabled ff information about the amount of concrete loaded on the track is provided to the vehicle tracker from the dispatcher (from a CCS at the subscriber site via the DMCS, NDC server, NTCC, SCC, subcarrier modulator and FM broadcast). In this case, end of pour can be better estimated by the number of revolutions requhed to empty the dram for a given volume originaUy loaded. A second alternative is to use an on-board weight measurement system such as the AW4600 or AW5600 from Air-Weigh. The tare weight ofthe track can be compared to the weight during pour, and an end of pour can be detected when the weight approaches the tare weight. The beginning of wash is determined by use of water to wash the truck for a predetermined amount of time. If end pour (324) was detected by a fast discharge event (323), then water must be used for one minute (329) to indicate wash status (330). If end pour (326) was determined from the use of water for two minutes (325), then wash status (331) is transmitted along with the end pour status (326). A leave job event is transmitted when the vehicle leaves the defined job site. A back up is provided, as shown h FIG. 37, to enable sending ofthe leave job status in case a job zone was not defined. Leave job (332, 333) is determined in any case if the vehicle speed is greater than 30 miles per hour (334). It should be noted that the system state can return to pouring (322) in some cases after wash (331) or leave job (333) are detected, if the drum is run in discharge again before the truck returns to a plant site (335). This enables the system to support operational anomalies like pouring concrete from one truck in two different locations at one overaU job site.

If job sites are defined for the tracker, they can be used to monitor behavior ofthe vehicle or driver that is contrary to the fleet operator's (subscriber's) pohcy. For example, if a pour is detected outside the defined job site rectangle, the vehicle computer can generate an exception and transmit it. This wttl alert the dispatcher that the driver may be pouring concrete at an unauthorized location and reduce loss of material and improve efficiencies. FinaUy, arrive plant (311) is detected when the truck enters a rectangle that defines a plant location and the speed is less than 15 miles per hour (337).

In addition to the normal ready mix deUvery sequence, the business owner is interested in determining the amount of water added to the mixing drum at the job site.

Again, drivers are an unrehable source of this information because they rarely record the actual amount added. It is critical that the correct amount be added and known because an incorrect mixture may not cure properly.

Determining the amount of water added can be accompUshed by placing a water flow meter in line with the pipe that fills the dram. An example of one of these units is

EMCO Fluidyne part no. 1200-1-1. These types of meters typicaUy provide a pulse or analog output. Either type is easily integrated into the standard inputs ofthe tracking computer. Water added is counted between the time the truck arrives at the job site and finishes pouring. The amount added is transmitted out as an event along with the end of pour event.

B. Bulk Powder Transport

Bulk transport trucks haul powdered material such as lime, cement, and fly ash. The bulk hoppers are loaded from the top by gravity. They are unloaded by forcing air through a network of pipes under the hoppers which, along with gravity, pulls the material out ofthe hoppers and pumps it up into storage silos. Bulk hauling companies need to know when the truck arrives at a customer's site, when it begins unloading, when it ends unloading, and when it leaves the site. The basic requirements are very simttar to those described above for the ready mix concrete industry.

Unloading is performed by pumping air through the pipes under the bulk hoppers. Air pressure is usuaUy generated by the truck itself. It is either done by a PTO driven pump or with an exhaust gas driven turbo pump. In most companies, the exhaust driven pump is more popular because it weighs much less than the PTO pump. With either pump the track engine is ran at high RPM to generate the required ah pressure.

Deteπruning when the PTO pump is on is quite straightforward. One ofthe discrete inputs is connected to the input for the Ught on the pump that indicates it has been turned on. The input wiring is designed to ensure that the input is triggered even if the light is burned out. Any time the PTO is turned or off, a corresponding status message is transmitted by the tracker to indicate the status change event.

On tracks with exhaust driven turbo pumps, directly measuring if the pump has been engaged is very difficult. Since the pump is driven by the engine exhaust, the housing is very hot. Integrated circuit electronics cannot be used reliably in this kind of environment, so electronic flow switches and pressure switches would be difficult to use. The engagement lever on the pump is mechanicaUy sloppy and difficult to instrument. In addition, any sensors outside the truck near the pump are subject to tampering. With these difficulties in mind, a tachometer sensor is used to determine if the track is pumping material. The sensor circuit is designed to detect a low-level analog signal, convert it to a digital signal level and divide the frequency to a lower value. The lower frequency signal is connected to the tracker through the TPU interface for a discrete input. Software in the tracker CPU counts the received pulses and converts them to an RPM.

Engine speed is used in conjunction with the track being stationary to determine the unload status. If the track is stationary and the engine speed is above the appropriate RPM threshold for enough time for the driver to set up the track and connect the dehvery hoses, then the unload status is transmitted. Lf the dispatcher has provided the tracker with site information, that is used to ensure the unloading is taking place at the site. If it is outside the site, the tracker transmits an exception to warn the dispatcher.

C. Aggregate Bulk Transport

Aggregate bulk transport tracks are dump tracks that haul gravel, rock, and sand generaUy for use by ready mix companies, construction, or landscaping. This industry has similar requirements for truck status reporting as the bulk powdered material haulers. The vehicle owners need to know when and how often a dump track empties its load. Vehicles in this industry are often rented by ready mix or other companies that do not own aggregate hauling tracks of theh own. The vehicle owner needs reports on ran time hours, odometer mileage, and number of loads hauled for bttling purposes; and the renter needs to know the same things to ensure that it is getting the deshed efficiency from the track.

In order to determine if the truck dump bed is up, a reUable sensor must be used that is immune to vibration, shock, and the extreme environment of loading. A proximity sensor that can sense the presence of metal at distances of over one half inch is preferred, and such a sensor is avattable in a range of sensor models from Turck sensor company.

The sensor is connected to one ofthe discrete inputs on the tracker. When the tracker determines that the dump bed has left the proximity ofthe sensor for a guard time interval to eliminate noise, it transmits the dump status.

Dump truck owners are also interested in preventing loss of cargo. As with ready mix, if apphcable geographical zone or boundary definitions are provided in mapping data or otherwise to the tracker, then it can determine if the dump was raised outside ofthe areas where product should be dehvered.

D. Ambulance

Ambulance operators must demonstrate to the government that they meet the requhed response times for emergency and non-emergency caUs. They do this by providing reports on each trip, with respect to the pick up location, the hospital delivered to, the times ofthe caUs, and other factors. The reports are often coUected manuaUy based on recorded caU logs. Ambulance companies also must comply with special local rales, regulations and ordinances that apply to operating emergency vehicles such as to refrain from using emergency lights and sirens on freeways or in non-emergency situations.

These functions can be automated to a significant degree by sensing when the Ughts and shens are turned on and off and by using dispatch zones. When caU scene locations and hospital or clinic locations are encompassed by zones and provided to the vehicle tracker, and sensors are installed on the emergency hghts, the tracker can determine the response times and dehvery locations automaticaUy.

When the tracker detects that the emergency lights are turned on, it transmits the event and the time at which the Ughts are turned on. It then also begins counting time and distance unttt the vehicle arrives at the call scene. CaU scene arrival can be determined automaticaUy if a zone is provided to the tracker or can be determined manuaUy by the driver pressing a status button on the display terminal. Once on-scene arrival is determined, the tracker transmits the arrival time and the distance traveled. The sequence of leaving the scene and arriving at the hospital is similarly ascertained through zone detection and sensors.

For report generation, att data reported by the tracker is stored for later processing at the ambulance owner's site. The report then contains each catt location, distance traveled and response time along with the emergency condition for each leg ofthe trip.

XIV. Tracker FM Diversity Processing

ReUable reception of data in a mobile radio environment is difficult to accomphsh. Signal quality is rapidly time varying as a vehicle moves through the clutter of obstructions, reflections, and interfering radio sources. The FM subcarrier data signal received by the vehicle tracker can rapidly fade in an out due to signal obscuration and multipath reflections. In order to recover data in the most reUable fashion possible, the network design uses a combination of FEC coding, bit interleaving, CRCs on message packets, and space diversity in the vehicle antenna system. Although the first three of these have been discussed earlier herein, they will be re-visited briefly for convenience of the reader.

The forward error correction is a Golay (23,12) code. This algorithm encodes each 12 bits of message information into 23 code bits. When received, the decoding algorithm is able to correct errors in up to 3 ofthe 23 code bits. The FM transmitter sends 300 message bytes (2400 bits) of data encoded this way into 4600 code bits each second.

To improve the immunity ofthe link to bursts of errors caused by multipath or blockage effects, the transmitted bits are interleaved. The 200 code words transmitted on the FM subcarrier each second are split into five 40 word blocks. Within each 40 word block, the bit order ofthe transmitted data is rearranged so that the 40 first bits of each word are sent first followed by the 40 second bits and so on. This interleaving enables the

Golay algorithm to correct up to 120 consecutive bit errors.

Some error conditions are severe enough that they cannot be rehably corrected by the FEC code. To guard against this, each message packet in the FM data contains a standard 16 bit CRC used for error detection. If the CRC is not correct for a packet, then the packet is thrown out. The CRC can detect any odd bit eπors, all double bit errors, and many other error combinations. For short message packet lengths typicaUy transmitted in the system, the 16 bit CRC algorithm is sufficient when coupled with the forward error correction and interleaving.

Space diversity in the receiving system ofthe vehicle is used to reduce errors caused by longer duration multipath fading or obscurations that cannot be corrected with interleaving alone. Two independent receivers (207, 208, FIG. 24) and antennas (191, 192, see, also, FIG. 23) are used to receive the FM subcarrier signal for the tracker 135. The receive antennas are separated on the roof of the vehicle as much as is reasonably possible. At 100 MHz FM frequencies, the distance between the antennas on the vehicle should be about 4ft for optimum diversity processing. This distance is usually achievable for most vehicles. Signals from the two antennas are independently demodulated to baseband data using two receiver chains. The tracker CPU 203 then uses a diversity processing algorithm to recover the data.

Tracker CPU 203 decodes the received data using a sequence of algorithms: (1) bit de-interleaving, (2) Golay FEC decoding, (3) message packet parsing and diversity processing. The de-interleaving and Golay decoding are relatively straightforward algorithms. The parsing and diversity algorithm are described below.

A flow chart ofthe diversity algorithm is shown in FIG. 38. Each second, the tracker begins processing data received over the FM subcarrier. The two received data streams are denoted by stream A and stream B. Diversity decoding starts at the beginning ofthe message block, with either stream A or B. Message synchronization is set at the beginning because the first byte to be processed in each second's data is the start of a message packet. A flag is also set to aUow switching to the alternate stream (350) if a message cannot be properly decoded. If the next byte to be processed is a vattd message ED (351), then the current stream is parsed for the message packet (352). If the CRC passes for the packet (353), message synchronization is held (354) and the pointer is incremented by the message length (355). Then the next byte is checked for a vaUd message ED (351). This is the normal flow of processing until the end of buffer mark is detected (358) or there is no more room in the buffer for messages (359).

If a valid message ED is not detected and the other stream has not been checked, then the corresponding byte in the other stream (360) is checked for a vattd message ED (351). If it is valid, then the message is parsed as described above. Alternatively, in either ofthe above cases, if the CRC is not vaUd (362), then the message packet is corrupted. If there was message synchronization (363), then an error count is incremented (364); otherwise, this indicates that the message ED was not the start of an actual message. If the other stream had not been parsed for the message, it is tested.

If at any point both streams fail to produce a vattd message ED or properly parsed message packet, the algorithm reverts to checking both streams on a byte by byte basis to locate the next vaUd message packet. It wttl be appreciated from the foregoing detailed description that certain objectives, features and aspects ofthe present invention are particularly noteworthy. For one, a vehicle fleet management information system for fleet asset management is provided which enables identification of location and dhection of movement of each vehicle in the fleet in real-time and automatic communication directly with management offices to report vehicle location and dhection, and as weU, status of predetermined events in which the vehicle may become engaged, in which apparatus at a network control or distribution center assigns each vehicle in the fleet a unique thne slot to transmit its reporting information over a communications network without substantially interfering with transmissions from other vehicles in theh own respective time slots. For another, precise time synchronization is provided for att elements ofthe network, which is at least in part a

TDMA wireless network, by means of a timing control PLL for distributing a single, remote global positioning satellite GPS based time reference throughout the network. The network includes a dual band full-duplex interface with TDMA on one-half of the interface and broadcast on the other half. Also, microprocessors in components throughout the network each have a time processing unit for performing precise clock synchronization within 10 microseconds for the TDMA portion of said network.

Stttl another resides in the provision of apparatus for establishing a protocol for entry by vehicle transmitters into the network in assigned time slots for periodic transmission of messages, and apparatus for providing space diversity ofthe messages received from the vehicle transmitters to avoid data corruption. Also, different periodic transmission intervals are provided for different vehicles in the network by dynamically aUocating the slots for various update rates. AdditionaUy, auxiUary reporting slots are provided to aUow prompt reporting of important data by the respective vehicle transmitters independent of slower periodic transmission intervals. And apparatus in the system supports both guaranteed and non-guaranteed dehvery of message data. Further, assigned slots are unique to respective vehicles, so as to minimize bandwidth usage by aUowing identity ofthe transmitting vehicle to be infeπed from the time slot in which the transmission is received. Each vehicle transmitter has a filter for baseband data to reduce the occupied bandwidth ofthe channel on which data is transmitted, including removal of synchronization data to minimize overhead of non-information bearing data. The baseband filter is implemented by a digital microcontroUer that replaces an original square wave data stream ofthe baseband data with detemiinistic transitions that reduce harmonic content and maintain bit widths, regardless of data input frequency. Each receiver in the network has the capabihty to recover the transmitted data without transmitted synchronization information by locating the start of each data message within a predetermined scant time window without aid from bit synchronization patterns. To that end, an iterative search is performed that sequentiaUy clocks in the data at greater and greater delays from the nominal message start time unttt a valid data packet is located.

Net another provides for sensing, detectmg or measuring certain repeated events in which the vehicle wttl be engaged according to the very basic nature of its use, and according to the industry in which it is being used, and for automatic reporting ofthe detected events to the fleet management office. These are especiaUy important aspects for vehicles which must follow a routine prescribed for efficiency's sake by the fleet management office, such as ready mix concrete trucks, powdered and aggregate materials transport haulers, ambulances, etc. Although certain presently preferred and exemplary embodiments and methods have been described herein to illustrate the best mode presently contemplated of practicing the invention, it wttl be apparent to those skilled in the relevant art that variations and modifications may be made without departing from the trae spirit and scope ofthe invention. Accordingly, it is intended that the invention shall be deemed umited only to the extent required by the appended claims and the rules and principles of pertinent law. APPENDEX A: GLOSSARY OF ABBREVIATED TERMS ACCUMINT (accumulator interrupt) BSFK (binary frequency shift keying) CCS (Customer Command Station) CDU (control and display Unit) CPU (central processmg unit) CRC (cychc redundancy check) DGPS (differential global positioning system) DMCS (Database Management and CCS Server) DR (dead reckoning navigation) DSP (digital signal processor) FEC (forward error correction) FM (frequency modulation) FSK (frequency shift keying)

GP 2010 (RF front end component of Plessey GPS chip set) GP2021 (correlator component of Plessey GPS chip set) GPS (global positioning system) IF (intermediate frequency) IOD (issue of data) ISP (Internet service provider) ISR (interrupt service routine) ITC (input transition capture/count) LFS (linear file store) LNA (low noise amplifier) LOT (login only tracking) MDT (Mobtte Data/Display Terminal) NDC (Network Distribution Center) NTCC (Network Timing Control Computer) OC (output compare) PCS (personal communications services) PDC (PROTRAK™ Data Center) PIT (periodic interrupt timer)

PPM (parts per million)

PPP (point-to-point protocol)

PPWA (periodic pulse width accumulation)

PSTN (pubhc switched telephone network)

PWM (pulse-width modulation)

QSPI (queued serial peripheral interface, a Motorola 68332 processor peripheral)

RF (radio frequency)

RI (repeating interval)

RSS (root sum square)

RXD (receive data)

SCA (subsidiary communications authorization)

SCC (Subcarrier Control Computer)

SCI (serial communications interface)

SMR (specialized mobtte radio)

SQL (structured query language)

SRAM (static random access memory)

TCR (timing control register)

TCXO (temperature compensated crystal oscttlator)

TIC (time mark (timer ticks) from GPS chip set)

TDMA (tune division multiple access)

TPU (time processmg unit)

TXD (transmit data)

UART (universal asynchronous receiver/transmitter)

UHF (ultra high frequency) APPENDEX B

TABLES 



Figure imgf000129_0001  

btJt Z (Mt Aucd 

Figure imgf000130_0001  

Table 3 ■ Text Message Packet - Sin le Tracker or Entire Fleet 

Figure imgf000130_0002  
The table belown cates t e predefined response sets. 
2 Indic--tes the time the message was originally sent NOTE: Since only the GPS second is

'provided, tracker modules may assume at the message is less than one GPS week old. Table .4- Pre-defined Message Res onse Sets 

Figure imgf000131_0001  
esponse et n cates t at no pre-defined response is required. However, a custom response set may still be defined within the message. Custom response sets may be defined by appending response set values to the message. Response set values are delimited by a T* (vertical bar) character. 
Table 5"- Teat Messa e Packet -Tracker Grou 

Figure imgf000131_0002  
See Pre-defined Message Response Sets for more information about response sets. 
NOTE: Text messages sent to a group of trackers will be sent two packets. One packet contains the text message, Customer ID, and Message Sequence ID while the other packet contains the tracker ID's, Customer ID, and Message Sequence ID.

2 Indicates the time the message was originally sent NOTE: Since only the GPS second is provided, tracker modules may assume that the message is less than one GPS week old.

Table 6 : Tracker Group Message Interface ID List Packet 

Figure imgf000131_0003  

1 mdicates the total length of this message excluding the packet ID and the Message Length value. . 

Figure imgf000132_0001  
75.-. -. 7 cen- ΛUΛf) 
Figure imgf000133_0001  
J.--U1C C. • 1 -UCIUICU JLUr lTlM-α - --- 
Figure imgf000134_0001  
See Pre-defined Message Response Sets for more information about response sets. Indicates the time the message was originally sent NOTE: Since only the GPS second is provided, tracker modules may assume that the message is less than one GPS week old. 
3 If the Pre-defined response set is 0, this pre-defined message packet may contain a custom set of pre-defined response sets.. Custom response set values are delimited by a "|" (vertical bar) character.

Table /g. Pre-defined ID Message Packet -Tracker Grou 

Figure imgf000134_0002  
value. 
2 See Pre-defined Message Response Sets for more information about response sets.

3 Indicates the time the message was originally sent NOTE: Since only the GPS second is provided, tracker modules may assume that the message is less than one GPS week old. If the Pre-defined response set is 0, this pre-defined message packet may contain a custom set of pre-defined response sets. Custom response set values are delimited by a "|" (vertical bar) Table //;. DGPS Packet



Figure imgf000135_0001  

Table ii.- User Data Message Packet - Single Tracker or Entire Fleet

# of bytes Description

Packet ID: 0x07

Bits 0-2: Spare2 

Bits 3-4: Address Mode 0= Tracker ID, 1= Network/Interface ED, 2 = Customer JD

Bit 5-7: Spare2 

Message Sequence J

Variable Tracker ED (4 bytes), Networi-flhterface I (2 bytes), Customer ID (3 bytes)

Send Time (GPS Second)1 

Message Length (L,)

L, Message

TIndicates±e time the message was originally sent NOTE: Since only the GPS second is provided, tracker modules may assume that the message is less than one GPS week old. 2 Spare values were split to allow Address Mode to be in same position for all messages.

Table .3 ■ User Data Message Packet - Tracker Group 

Figure imgf000135_0002  

NOTE: User ata sent to' a group of trackers will be sent two packets. One packet contains the user data, Customer JD, and Message Sequence JD while the other packet contains the tracker ID's, Customer ID, and Message Sequence ED. See Tracker Group Message Interface JD List Packet to identify the trackers receiving is user data packet

1 Indicates the time the message was originally sent NOTE: Since only the GPS second is provided, tracker modules may assume that the message is less than one GPS week old. 



Figure imgf000136_0001  

Figure imgf000136_0003  

Table /->•' FM Identification Packet



Figure imgf000136_0004  



Figure imgf000136_0002  

Figure imgf000136_0005  

Table '7: GPS Time Packet



Figure imgf000136_0006  

Table 18 ; Set Main Repeating Interval Slot Definition Packet 

Figure imgf000137_0001  
rac er mo u es may enter t e network by requesting network entry or by requesting a low power slot with their state and status tracking update. If a tracker requested net entry using a net entry request packet, this flag is 0. If a tracker requested a low power RI slot, this flag is 1. 
Table \t- Add Auxiliary Repeating Interval Slot Definition - Single Interval by Tracker JD Packet 

Figure imgf000137_0002  

Table 2 : Add Auxiliary Repeating Interval Slot Definition - Single Interval by Network/Interface ED Packet 

Figure imgf000137_0003  

Table Zh Add Auxiliary Repeating Interval Slot Definition • - Limited Number of Intervals b Tracker ID Packet 

Figure imgf000137_0004  
Table £V- d Auxiliary κepeaιmg --u.t»-v-u oiu. vam-u • b Network/Interface ID Packet 


Figure imgf000138_0001  

Table l& • Available Network Entry Slots Packet



Figure imgf000138_0002  

Table 24 • Repeating Interv-d Slot Config Info Packet

Byte Number Description

Packet JD: 0x13

Frame cycle length

Self-purge update count

Tracker JD Request Mode 0 = Tracker JD Not Required,

1 = Tracker ID required for next update only,

2 = Tracker JD required for all updates

5 - 6 BIT Packet Rate (in seconds) ,



Figure imgf000138_0003  
Indicates that the tracker has not been registered with the NDC Server. Unregistere trac ers mn nnnttπtie to reαuβst network entrv each hour. Table .-?&•• Network Entr Re uest Permission ac-na 
Figure imgf000139_0001  
If address type ind cates "by tracker ID" or "by customer ID", the JD follows immediately afterwards. If "by Network terface JD" or "by Tracker 3D List" is indicated, the 3D starts in the next byte. 
Table -.".•' Purge Assigned Repeating Intervals -By Tracker JD, Customer ID, or Tracker a ket



Figure imgf000139_0002  
If address type n cates y trac er JD or by customer , t e o ows ---...--e a e y afterwards. If "by Network/Interface 3D" or "by Tracker 3D List" is indicated, the ED starts in the next byte. 
2 Trackers should purge their Network mterface ID when their main repeating interval is purged.

30x0000 = Broadcast tracker ID. If a purge assigned repeating interval is sent to 0x0000, all tracker modules should purge the indicated repeating intervals).

4 Optional portion ofthe message that only exists if "Purge specified repeating interval" is indicated.

Table 2& • Message Response Acknowledge .

# of bytes Description

Packet 3D: 0x18

Bits 0-2: Response Key ID

1 - Softkey #1, 2 = Soflkey #2, 3 - Softkey #3,4 = Softkey #4 Bits 3-4: Address Mode 0=Tracker D, 1= Network/Interface JD Bit 5-7: Spare

Message Sequence ED1 (unique for each customer)

Variable Tracker 3D (4 bytes), Ne±woit/faterface 3D (2 bytes)

1 The Message Sequence 3D is the same ID associated with the original text/site dispatch mf-ccao*. that r∞iiired the response. 



Figure imgf000140_0001  

1 See the Pre-defined Message Response Sets table for more informat on.

TaUc 30- Srhe purqe. Message. 

Figure imgf000140_0002  
See t e Pre- e ne essage Response Sets table for more information. 
2 Site 3D values are unique per customer per site-type, except for the mass purge Site 3D of OxlF-ETF-FF. The Site 3D 0xlJ?FFFF tells the tracker to purge all messages ofthe type indicated in the Site Type field.

3 The tracker module may use the site type to determine the length of time a site should be retained and the algorithm that should be used to determine amval/departure status. Job sites should be retained by the tracker until the tracker enters and leaves the site. Home base sites should be retained until deleted. And, types 2 & 3 should be retained based on customer denned rules. 



Figure imgf000141_0001  

Table SZ: Grid -DD Packet-. 

Figure imgf000141_0002  

Table 33- Site Status Acknowledge

# of bytes Description

1 Packet ID: Oxld

Bits 0: Address Mode 0=Tracker JD, 1= Networi-tlhter-ace ID Bits 1-2: Site Type3 (0=3θb site, l=home base, 2= customer defined, 3 - customer defined) Bit 3-7: spare

Variable Tracker ED (4 bytes), Network Inter-ace ED (2 bytes)

Site 3D

Site Sequence JD1 

1 Sequence JD assigned by tracker when rehable site status packet was transmitted. See Site Status for more information.



Figure imgf000141_0003  
abled- Tracker State Data Block BteBit Definitions 
Figure imgf000142_0001  

Table 3 -»! Reduced State Data Block Byte/Bit Definitions 

Figure imgf000142_0002  

Table 37: Network Status Code Definitions 

Figure imgf000142_0003  

Table 38 ; Message AcknowledgementRes onse Block 

Figure imgf000142_0004  
Indcates t e S Secon wen the message was received for acknowledgment or the Second when the Softkey was pressed for a response. 
2 Indicates that message was read by driver. "Table s'.- Tracker Packet Summary



Figure imgf000143_0001  

Table 40 '• Net Entry Request Packet Bit Definitions 

Figure imgf000143_0002  

Table 41 • State and Status Packet Bit Definitions 

Figure imgf000143_0003  

Figure imgf000144_0001  

Table 43- Short State and Status Packet Bit Definitions 

Figure imgf000144_0002  

Table 44-' Reliable Short User Data Packet Bit Definitions 

Figure imgf000144_0003  

Table45 ; Reduced State User Data and Status Packet Bit Definitions 

Figure imgf000144_0004  

Table 46 '• Messa e Res onse and User Data Packet Bit Definitions 

Figure imgf000144_0005  
Table 41'- Short Message Response and User Data Packet Bit Definitions 


Figure imgf000145_0001  

1 J-adicates the GPS Secon value upon amval/depar-ure.

2 Set for "event-driven" initiated event

3 Set for user initiated event

Table 4°l- Built-in Test (BIT) Packet Bit Definitions

Byte/Bi bit length Bit Number Description 0/0, 4 0-3 Packet ED Block (0x09)

0/4,4 4-7 BIT Packet Type

1/0, 80 BIT Packet Data Block1 

11/0, 8 88-95 CRC 8

See following tables for the BU Packet Data Blocks.

Table 50; Built-in Test i ii racket uata BIOCK ( Necwori. ana JKJP aystem, l pe = u;



Figure imgf000145_0002  



Figure imgf000146_0002  

Table 52.: Built-in Test (BIT) Packet Data Block Navi ation, T e = 2 

Figure imgf000146_0003  

Table 53 ■ Built-in Test (BIT) Packet Data Block (Version, Ty e - 3) 

Figure imgf000146_0004  

Figure imgf000146_0001  

Figure imgf000146_0005  



Figure imgf000147_0002  

Table.5l-.TPU Channels and Functions 

Figure imgf000147_0003  

Figure imgf000147_0001  

6 Status

7-8 Latitude Long 2"31 semicircles ±0.5

9-10 Longitude Long 2'31 semicircles ±1.0

11 Altitude Short 0.125m

12 North Velocity Short 2"8m sec

13 East Velocity Short 2*va/sec

14 Down Velocity Short -Z^m/sec

15 Year Ushort

16(lsb) Month TJchar 1-12

16(msb) Day TJchar 1-31

17(lsb) Hour TJchar 0-23

17(msb) Minute TJchar 0-59

18 Second Ushort 2*7sec 0-7679

19 Data Checksum T*lo)i -Tg: t&cttval Mes age <P«A (lioj)

Word Number Description Type Units/ Range USB

1-5 Header

6Qsb) Message Type l=canned, 2=iull text uchar

6(msb) Canned IDText 3-ength(L) uchar

7(lsb) IOD uchar 0-255

7(msb) User Response uchar 04

8 Year ushort

9(Isb) Month uchar 1-12

9(msb) Day uchar 1-31

10(lsb) Hour uchar 0-23

10(msb) Minute uchar" 0-59 ll(lsb) Number of valid responses uchar 0-4 ll(msb) Spare uchar

12-16 Response 1 Text char

17-21 Response 2 Text char

22-26 Response 3 Text char

27-31 Response 4 Text char nextIJ2 Text if type=2, padded with 0 in last char byte ifL is odd •

TaUt S*} : cei itf User Mi (7/ 03

Word Description Type Units/ Range Number LSB

1-5 Header

6 Data Type Identifier ushort 0-255

7-16 20 Data bytes uchar

Table ^Available Message Data (7104)

Word Description Type Units/ Range Number I-SB

1-5 Header

6 Number of unread messages (X) - ushort 0-255 7 33d of most recent unread message ushort 0-255

7+X-l Id of oldest unread message ushort 0-255

7+X Number of saved messages (Y) ushort 0-255

7+X+l Id of most recent saved message ushort 0-255

7+X+Y-l Id of oldest saved message ushort QX255 7+X+Y Data Checksum , Table <L1 :User Data Message List (7106)

Word Description Type Units/ Range Number I-SB

1-5 Header

6 Number of messages in the list (N) ushort 0-255

7-21 Message 1 char 0-255

(7+N*15> Message N char 0-255

(21+N*15)

7+N* 15 Data Checksum

Tables-Data Request (7201)

Word Description Type Units/ Range Number LSB

1-5 Header

6 Message ID ushort

7 On/Off ushort

8 Data Checksum

Tabled Text Message Response (7202)

Word Description Type Units/ Range Number LSB

1-5 Header 6(Isb) IOD uchar 0-255 6(msb) Response ushort 0-7 7 Data Checksum

Data Output (7203)

Word Description Type Units Range Number LSB

1-5 Header

6(lsb) Number of Bytes uchar l or9

6(msb) Data Type Identifier uchar 0-255

7-11 10 Data bytes (1 or 9 will be used) uchar

12 Data Checksum

TabIet.5:Request Available Message Data (7204) 

Figure imgf000149_0001  
7a hie. t>0> ■ /?-■■; «,, fr j* (7t os) 
Word Description Type Units/ Range Number LSB

1-5 Header

6 Message Identifier ushort 0-255

7 Data Checksum

Tabled Request User Data Message List (7206)

Word Description Type Units Range Number LSB

1-5 Header

Tabled?: NTCC/SCC Message Summary

Message ID . Source Description Rate

1101 NTCC Timing Control lHz 1102 NTCC Transmit Data Frame (1 of N) iV flames at 1Hz 1201 SCC SCC Status 1Hz

Table 10: Timing Control (1101)

Word Description Type Units Range Number

1-5 Header

6(lsb) Timing Control Mode uchar 0-2

6(msb) Control Type ' uchar 0-2

7-8 Timer Control long 0.1 microsec ±0.5 sec

9 Data Checksum

Table 7/:Transmit Data Frame (1102)

Word Description Type Units Range Number

1-5 Header

6 Broadcast Frame 3D short 0-188

7(lsb) Frame Number (n) uchar 0-?

7(msb) Total Number of Frames (N) uchar 0-?

8 Number of Bytes per Frame (I) short

9-8+(/+l)/2 Frame Data Bytes uchar

Q 9+(.+l)/2 Data Checksum

Table 72: SCC status (1201)

Word Description Type Units Range Number

1-5 Header

6-7 Current Nominal Timer long 0.1 microsec 0-1.0+ ,sec

8 SCC Status coded ;

9 Data Checksum Table 75-NTCC/Server Message Summary

Message ID Source Description Rate

2104 Server Login -nib Request At Imtialization

2304 NTCC Login Info Response At Initialization

2105 Server NTCC -Profile Request At -.--Iizat.on

2305 NTCC NTCC Profile Response At Initialization

2103 NTCC Status 2 1Hz

2201 Server FMData At Connection

2202 Server Vehicle Packet High Rate

2203 Server -Local Time Zone Offset At Initialization and once per hour



Figure imgf000151_0001  

10x00 will be used for padding if necessary to make entire body word aligned. 

Figure imgf000151_0002  

Table "77' NTCC Profile Response Message (4305) 

Figure imgf000151_0003  

10x00 will be used for padding if necessaty to make entire body word aligned. 



Figure imgf000152_0001  

Figure imgf000153_0001  

TableT FM Data (2201)

Word Description Type Units Range

Number

1-5 Header

6 Frequency short 0.1 MHz 875-1079

7 Subcarrier short kHz 67 or 92

8-9 Latitude long 2T31 semicircles -l to l

10-11 -Longitude long 2"31 semicircles -0.5 to 0.5

12 Altitude short meters

13-27 Telephone Number String char

28 Data Checksum

TableSO'Vehicle Packet (2202)

Word Description T pe Units Range

Number

1-5 Header

6 Vehicle Data Length (I) short bytes

7-6- /+1V2 Packet Contents

7+(/+l)/2 Data Checksum Table 81- Local Time Zone OSset (2203)

Word Description Type Units Range Number

1-5 Header

6 Time Zone Offset short LSB = 15 min -48 to 48

7 Data Checksum

Table 81- NTCC/Roof Module Message Summary

Message 3-D Source Description Rate

3101 NTCC Frequency Control At Initialization

3102 NTCC Time/Status lHz -

3201 RoofModule Status 1Hz

3202 RoofModule Received FM Data 1Hz

3203 RoofModule Timing 1Hz

Table S3: Frequency Control (3101)

Word Description Type Units Range Number

1-5 Header 6 Frequency short 0.1 MHz 875-1079 7 Subcarrier short KHz 67 or 92 8 Data Checksum

\

Tabled Time/Status (3102)

Word Description Type Units Range Number

1-5 Header

6 T-πung Status coded

7 GPS Week short 0-1023

8-9 GPS Second long 0-604799

10 Current Network Frame Number short 0-188

11 Mode coded

12 System Status coded

13 Data Checksum .

Table S5- Status (3201)

Word Description Type Units Range

Number

1-5 Header

6 Frequency short 0.1 MHz 875-1079

7 Subcarrier short kHz 67 or 92

8 Timing Status coded

9 System Status coded

10 FM Status coded

11 Data Checksum Table 5-3' Received FM Data (3202)

Word Description Type Units Range Number

1-5 Header

6 Frame Number short 0-188

7 Number of Bytes (/) short

8-7+(/+l)/2 Data Bytes uchar

8- /+l)/2 Data Checksum

Table 8T- Timing (3203)

Word Description Type Units Range

Number

1-5 Header

6 GPS Week short 0-1023

7-8 GPS Second long 0-604799

9-10 Delay to Sync long 0.1 microsec 0-1 sec

11 Data Checksum 

Figure imgf000155_0001  

Figure imgf000155_0002  
Table 3.0 • Message Type ID Range - NDC Server 
Software Component with an Direction/purpose Reserved Message ID Range Interface to NDC Server

NTCC From NDC Server 2100-2199

To NDC Server 2200-2299

Response to NDC Server initiated message 2300-2399

Response to NTCC initiated message 2400-2499

Network Hub From NDC Server 4100-4199

To NDC Server 4200-4299

Response to NDC Server initiated message 4300-4399

Response Network Hub initiated message 4400-4499

NDC Command Station Fro NDC Server 5100-5199

To NDC Server 5200-5299

Response to NDC Server initiated message 5300-5399

Response to NDC (- -n-nand Station initiated 540D-5499 message ■__

DMCS From NDC Server 7100-7199

To NDC Server 7200-7299

Response to NDC Server initiated message 7300-7399

Response to DMCS initiated message 7400-7499 

Figure imgf000156_0001  

Figure imgf000156_0002  

Table 73 : Login Info Reqnest Message (7101) # of bytes Description Value or Range

10 Header 

Figure imgf000156_0003  

0x00 will e use or pa ng necessary to ma e en re ody word aligned. Table fS-' Lo n Mo Response Resnlt Message (7501).

# of bytes Dcscπpaon Value or Range

10 Header

0x0000 = SUCCESS, 0x0001 = Invalid User Name/Password,

Result 0x0002 = Add Connection Failure, 0x0003 = Database Access Error

Data Checksum



Figure imgf000157_0001  

' The number of tracker modules that failed to acknowledge the message be ore t e timeout If the message was sent to all trackers associated with the customer, this number will indicate the trackers that have not yet responding to the message.



Figure imgf000157_0002  
Response should use this ID value. 
20x00 will be used for padding if necessary to make entire body word aligned.



Figure imgf000157_0003  
Response shou use the same ID sent with the request message, 


Figure imgf000158_0001  

1 See Real-time Tracking Data Message Format table.

2 Date/Time values indicate when the NDC Server received the message and are specified using Greenwich Mean Time(C-MT).

3 The NDC Server maintains a tracking sequence counter for each vehicle. This counter is used to assign tracking sequence values to messages sent from a vehicle to the NDC Server. Message sequence values may be used by CCS applications to determine if any messages are missing from a set of vehicle tracking messages.

NOTE: Tracking sequence values for each tracker rollover every 65536 updates. * 0x00 will be used for padding if necessary to make entire body word aligned. This flag indicates if the tracker is currently in low power mode. When trackers enter low power mode, they request a low power update slot in the RF networL The low power update rate is less frequent (1 hour) than most tracker update rates. As a result, trackers may power down between updates to conserve their vehicle's battery. Trackers in low power mode will not be able to provide immediate acknowledgement to messages. Messages sent to trackers in this mode will be queued by the NDC Server until the message is acknowledged or the message reaches its timeout 



Figure imgf000159_0001  
ep se an ser Data 
Figure imgf000160_0001  

2 ± 8 meters of resolution

3 Tune of receipt for acknowledgements and time, when Softkey was pressed for a response.

4 This Site ID is the same ID associated with the Site Dispatch message. See Send Site Dispatch for more infoπnation.

5 Message sequence ID associated with a text or pre-defined message. Or, site ID associated with a site dispatch message. See "Send Message Response Message", "Send Pre-defined Message ID Response Message ", or "Send Site Dispatch" for more information.

6 If ack response flag is 0, 0 indicates ack only. If ack/iesponse flag is 1, 0 indicates thai user read the message. 

Figure imgf000160_0002  
This lag in cates t e tracker is currently in low power mode. When -rackets enter low power mode, they request a low power update slot in the RF network. The low power update rate is less frequent (1 hour) than most tracker update rates. As a result, trackers may power down between updates to conserve their vehicle's battery. Trackers in low power mode will not be able to provide immediate acknowledgement to messages. Messages sent to trackers in this mode will be queued by the NDC Server until the message is acknowledged or the message reaches its timeout. 
Figure imgf000160_0003  

Figure imgf000161_0001  

Figure imgf000161_0002  
Response should use this ID value. 
2 Date range used to indicate desired tracker install date/time. If start and/or end year is set to 0x0000, the corresponding start and/or end dale is NOT used to limit the result 

Figure imgf000161_0003  
2 For each tracker in the request date range, a separate response message is sent to the NDC Server. The Total Response Count indicates the total number of response messages while the Response Number indicates the zero- based response number. 
Figure imgf000162_0001  

I uninsta l date as not een set and/or tracker is still ---stalled in vehicle, all lininstaπ date values should be set to NULL. 

Figure imgf000162_0002  
If VIN Count is 0x0000, all customer profiles are returned. 
2 Response should use this ID value. 

Figure imgf000162_0003  
Response shou use t e same D sent with the request message. 
2 Profile number N out ofthe total number of profiles in the profile list being returned.

3 See Vehicle Profile Format below. 



Figure imgf000163_0001  

Figure imgf000163_0002  

Figure imgf000163_0003  

1 Success indicates that no further attempt will be made to send the message. However, it's still conceivable that the message was sent 

Figure imgf000163_0004  

1 0x00 will be used for padding if necessary ,to make entire body word aligned.

1 The Client Request ID is assigned by the DMCS and is returned by the NDC Server in the response message. 

Figure imgf000164_0001  

1 The ID associated with the request sent by the DMCS. 

Figure imgf000164_0002  

1 The Client Request ID is assigned by the DMCS and is returned by the NDC Server in the response message. 

Figure imgf000164_0003  

1 The ability to modify the tracking service is an optional service that is mamtained on a per tracker basis. Trackers without this service will receive this error message.

2 The ID associated with the request sent by the DMCS. Table . /-. •■ Ping Request Message (7203)

# of bytes Description Value or Range

10 Header

Table I H : Ping Response Message (7403)

# of bytes Description Value or Range

10 Header 

Figure imgf000165_0001  
Indicates the maximum retry timeout value. A Message Timeout message will be sent to the CCS/DMCS if the message is not acknowledged by the timeout value. If 0x00 is specified for the timeout, the message is sent until the PROTRAK system max timeout is reached. 
Figure imgf000165_0002  

1 Success indicates that no further attempt will be made to send the message. However, it's still conceivable thai the message was sent 

Figure imgf000165_0003  

1 Specifying 0x0000 for the number of Tracker ID's will return all of the tracker profiles associated with the customer's login account profile.

20x00 will be used for padding if necessary to make entire body worf aligned.

3 The Client Request ID is assigned by the DMCS and is returned by the NDC Server in the response message. 



Figure imgf000166_0001  

1 Profile number N out ofthe total number of profiles in the profile list being returned.

2 Invalid only applies to ID's that are not in the valid range and/or format. ID's missing from the database (or associated with other customer ID's) wfll result in the profile not being returned without an error code.

3 See Tracker Profile Format table.

40x00 will be used for padding if necessary to make entire body word aligned.

5 The ID associated with the request sent by the DMCS. 

Figure imgf000166_0002  

1 If the number of trackers is 0x0000, the Customer ID associated with the customer' s login account profile is used.

2 A pre-defined response set (see Pre-defined Message Response Sets) may be selected. Trackers will respond using a response ID that indicates the response selected from the pre-defined set This response ID is returned to the DMCS in a "Message Response and State" or a "Message Response and Reduced State" packet within a "Real-time Tracking Data Message" that contains the same Message Sequence ID.

3 0x00 will be used for padding if necessary to make entire body word aligned.

4 The Client Request ID is assi ned by the DMCS and is returned by the NDC Server in the response message.

5 Due to FM sub-carrier bandwidth l-tnita-urns, messages sent to a large number of trackers may take several seconds (or minutes) to be delivered. Groups are expected to be small (around 20 - 60 trackers). However, the NDC Server uses an ID allocation scheme that allows it to con-municate with a large number of trackers in its RF network if tracker group associations are known ahead of time. The DMCS is responsible to provide these tracker group associations.

* Indicates the maximum retry timeout value. A Message Timeout message will be sent to the CCS/DMCS if the message is not acknowledged by the timeout value. If 0x00 is specified for the timeout the message is sent until the PROTRAK system max timeout is reached. 

Figure imgf000167_0001  
Response Set ID indicates that no pre-defined response is required, However, a custom response set may still e defined within the message. Custom response sets may be defined by appending response set values to the message Response set values are delimited by a "I" (vertical bar) character. 
Figure imgf000167_0002  

1 Success indicates that the message has been successfully queued so that it may be sent to the specified tracke ).

2 ID associated with the message being sent When the tracker successfully acknowledges and/or responds to this message, the DMCS will receive a "Message Response and State" or a "Message Response and Reduced State" packet within a "Real-time Tracking Data Message" thai contains the same Message Sequence ID.

The ID associated with the request sent by the DMCS. * If message was sent to a list of trackers, all trackers in the list must have message service available or this error _ code will be returned. 

Figure imgf000167_0003  

1 If the number of trackers is 0x0000, the Customer ID associated with the customer's login account profile is used.

2 A pre-defined response set (see Pre-defined Message Response Sets) may be selected. Trackers will respond using a response ID that indicates the response selected from the pre-defined set This response ID is returned to the DMCS in a "Message Response and State" or a "Message Response and Reduced Stale" packet within a "Real-time Tracking Data Message" that contains the same Message Sequence ID.

3 The Client Request ID is assigned by the DMCS and is returned by the NDC Server in the response message. Due to FM sub-carrier bandwidth limitations, messages sent to a large number of trackers may take several seconds (or minutes) to be delivered. Groups are expected to be small (around 20-60 trackers). However, the NDC Server uses an ID allocation scheme that allows it to communicate with a large number of trackers in its RF network if tracker group associations are known ahead of time. The DMCS is responsible to provide these tracker group associations.

5 Indicates the maximum retry timeout value. A Message Timeout message will be sent to the CCS/DMCS if the message is not acknowledged by the timeout value. If 0x00 is specified for the timeout the message is sent until the PROTRAK system max timeout is reached. 

Figure imgf000168_0001  

1 Success indicates that the message ID has been successfully queued so that it may be sent to the specified tracker(s).

2 ID associated with the message being sent When the tracker successfully acknowledges and/or responds to this message, the DMCS will receive a "Message Responscand State" or a "Message Response and Reduced State" packet within a "Real-time Tracking Data Message" -hat-contains the same Message Sequence ID.

The ID associated with the request sent by the DMCS. If pre-defined was sent to a list of trackers, all trackers in the list must have message service available or this error code will be returned. 



Figure imgf000169_0001  

1 If the number of trackers is 0x0000, the Customer JD associated with the customer's login account profile is used.

2 A pie-defined response set (see Pre-defined Message Response Sets) may be selected. Trackers will respond using a response ID that indicates the response selected from the pre-defined set This response TD is returned to the DMCS in a "Message Response and Stale" or a "Message Response and Reduced Stale" packet within a "Real-time Tracking Data Message" that contains the same Message Sequence ID.

3 The Client Request ED is assigned by the DMCS and is returned by the NDC Server in the response message.

40x00 will be used for padding if necessary to make entire body word aligned.

5 Indicates the maximum retry timeout value. A Message Timeout message will be sent to the CCS DMCS if the message is not acknowledged by the timeout value. If 0x00 is specified for the timeout the message is sent until the PROTRAK system max timeout is reached.

6 Site duration indicates how long a specified site should be used. Sin le trip indicates that the tracker should ret-in the site ir-formation until the tracker enters and leaves the specified site. Every trip indicates that the tracker should indicate every time the tracker enters or leaves the specified site.

7 Indicates the number of hours that the site is valid. able 128. Send Site Dis atch Res onse Mes e 7407 

Figure imgf000169_0002  

1 Success indicates that the message ID has been successfully queued so that it may be sent to the specified tracker(s).

2 ID associated with the message being sent When the tracker successfully acknowledges and or responds to this message, the DMCS will receive a "Message Response and State" or a "Message Response and Reduced State" packet within a "Real-time Tracking Data Message" that contains the same Site D.

* The ID associated with the request sent by the DMCS. 



Figure imgf000170_0001  

1 If the number of trackers is 0x0000, the Customer ID associated with the customer's login account profile is used.

20x00 will be used for padding if necessary to make entire body word aligned.

3 The Client Request ID is assigned by the DMCS and is returned by the NDC Server in the response message.

4 Due to FM sub-carrier bandwidth limitations, messages sent to a large number of trackers may take several seconds (or minutes) to be delivered. Groups are expected to be small (around 20-60 trackers). However, the NDC Server uses an ID allocation scheme that allows it to communicate with a large number of trackers in its RF network if tracker group associations are known ahead of time. The DMCS is responsible to provide these tracker group associations.

5 Indicates the ----xi-num retry timeout value. A Message Timeout message will be sent to the CCS/DMCS if the message is not acknowledged by the timeout value. If 0x00 is specified for the timeout the message is sent until the PROTRAK system max timeout is reached. 

Figure imgf000170_0002  

1 Success indicates that the message has been successfully queued so that it may be sent to the specified tracker(s)^

2 ID associa-ed with the message being sent When the tracker successfully acknowledges and/or responds to this message, the DMCS will receive a 'Message Response and State" or a "Message Response.and Reduced State" packet within a "Real-time Tracking Data Message" that contains the same Message Sequence ID.

3 The ID associated with the request sent by the DMCS. If user data was sent to a list of trackers, all trackers in the list must have message service available or this error code will be returned. 

Figure imgf000171_0001  

1 The Client Request ID is assigned by the DMCS and is returned by the NDC Server in the response message.



Figure imgf000171_0002  

1 Success indicates that the message has been successfully queued so that it may be sent to the specified tracker.

2 The ID associated with the request sent by the DMCS.



Figure imgf000171_0003  



Figure imgf000171_0004  

1 See Vehicle Profile Format 


Citazioni di brevetti


Brevetto citato

Data di registrazione

Data di pubblicazione

Candidato

Titolo


US5068654 * 3 lug 1989 26 nov 1991 Hazard Detection Systems Collision avoidance system 
US5826195 * 5 ago 1996 20 ott 1998 Highwaymaster Communications, Inc. Data messaging in a communications network 
US5983161 * 24 set 1996 9 nov 1999 Lemelson; Jerome H. GPS vehicle collision avoidance warning and control system and method 

* Citato da un esaminatore


Citazioni diverse da brevetti


Riferimento


1  * See also references of WO0146710A2 

* Citato da un esaminatore


Classificazioni







Classificazione internazionale G08G1/123, H04L12/56, H04L12/28, G07C5/00, H04W72/04, H04W84/00, H04W16/14, H04W28/22, H04W56/00, H04W8/24, H04W74/04, H04W64/00, B60P3/03 
Classificazione cooperativa B28C7/028, B28C9/00, B28C5/422, H04W64/00, H04W72/10, H04W74/04, B60P3/03, G08G1/20, H04W28/22, H04W56/0085, B28C7/02, H04W16/14, H04W84/00, H04W8/245, G07C5/008, G01M17/00 
Classificazione Europea G08G1/20, G01M17/00, B60P3/03, G07C5/00T, B28C7/02D, B28C7/02, B28C9/00, B28C5/42A1C, H04W56/00M4B2D 



Eventi legali


Data

Codice

Evento

Descrizione


27 feb 2015 PGFP Postgrant: annual fees paid to national office 
Ref country code: FR

Payment date: 20141208

Year of fee payment: 15 

30 gen 2015 PGFP Postgrant: annual fees paid to national office 
Ref country code: DE

Payment date: 20141209

Year of fee payment: 15

Ref country code: GB

Payment date: 20141217

Year of fee payment: 15 

29 mar 2013 PGFP Postgrant: annual fees paid to national office 
Ref country code: FR

Payment date: 20130107

Year of fee payment: 13 

28 feb 2013 PGFP Postgrant: annual fees paid to national office 
Ref country code: GB

Payment date: 20121212

Year of fee payment: 13 

31 gen 2013 PGFP Postgrant: annual fees paid to national office 
Ref country code: DE

Payment date: 20121213

Year of fee payment: 13 

31 gen 2012 PGFP Postgrant: annual fees paid to national office 
Ref country code: FR

Payment date: 20111219

Year of fee payment: 12 

31 mag 2011 PGFP Postgrant: annual fees paid to national office 
Ref country code: DE

Payment date: 20101215

Year of fee payment: 11 

31 mar 2011 PGFP Postgrant: annual fees paid to national office 
Ref country code: GB

Payment date: 20101215

Year of fee payment: 11 

28 feb 2011 PG25 Lapsed in a contracting state announced via postgrant inform. from nat. office to epo 
Ref country code: IT

Free format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEES

Effective date: 20071231 

31 gen 2011 PGFP Postgrant: annual fees paid to national office 
Ref country code: FR

Payment date: 20101224

Year of fee payment: 11 

30 giu 2010 PGFP Postgrant: annual fees paid to national office 
Ref country code: DE

Payment date: 20091222

Year of fee payment: 10 

30 apr 2010 PGFP Postgrant: annual fees paid to national office 
Ref country code: FR

Payment date: 20091221

Year of fee payment: 10

Ref country code: GB

Payment date: 20091216

Year of fee payment: 10 

30 ott 2009 PGFP Postgrant: annual fees paid to national office 
Ref country code: FR

Payment date: 20081217

Year of fee payment: 09 

30 set 2009 PG25 Lapsed in a contracting state announced via postgrant inform. from nat. office to epo 
Ref country code: TR

Free format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMIT

Effective date: 20071003 

31 ago 2009 PG25 Lapsed in a contracting state announced via postgrant inform. from nat. office to epo 
Ref country code: LU

Free format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEES

Effective date: 20071218 

31 lug 2009 PG25 Lapsed in a contracting state announced via postgrant inform. from nat. office to epo 
Ref country code: CY

Free format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMIT

Effective date: 20071003 

30 giu 2009 PGFP Postgrant: annual fees paid to national office 
Ref country code: GB

Payment date: 20081229

Year of fee payment: 09 

29 mag 2009 PGFP Postgrant: annual fees paid to national office 
Ref country code: DE

Payment date: 20090202

Year of fee payment: 09 

31 mar 2009 PG25 Lapsed in a contracting state announced via postgrant inform. from nat. office to epo 
Ref country code: FI

Free format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMIT

Effective date: 20071003 

27 feb 2009 PG25 Lapsed in a contracting state announced via postgrant inform. from nat. office to epo 
Ref country code: FI

Free format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMIT

Effective date: 20071003

Ref country code: GR

Free format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMIT

Effective date: 20080104 

30 gen 2009 PG25 Lapsed in a contracting state announced via postgrant inform. from nat. office to epo 
Ref country code: GR

Free format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMIT

Effective date: 20080104 

31 ott 2008 PG25 Lapsed in a contracting state announced via postgrant inform. from nat. office to epo 
Ref country code: IE

Free format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEES

Effective date: 20071218 

30 set 2008 PG25 Lapsed in a contracting state announced via postgrant inform. from nat. office to epo 
Ref country code: BE

Free format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMIT

Effective date: 20071003 

10 set 2008 26N No opposition filed 
Effective date: 20080704 

29 ago 2008 PG25 Lapsed in a contracting state announced via postgrant inform. from nat. office to epo 
Ref country code: BE

Free format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMIT

Effective date: 20071003 

31 lug 2008 PGFP Postgrant: annual fees paid to national office 
Ref country code: FR

Payment date: 20071217

Year of fee payment: 08 

31 lug 2008 PG25 Lapsed in a contracting state announced via postgrant inform. from nat. office to epo 
Ref country code: DK

Free format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMIT

Effective date: 20071003

Ref country code: MC

Free format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEES

Effective date: 20071231 

4 lug 2008 ET Fr: translation filed  
30 giu 2008 PG25 Lapsed in a contracting state announced via postgrant inform. from nat. office to epo 
Ref country code: AT

Free format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMIT

Effective date: 20071003 

30 mag 2008 PG25 Lapsed in a contracting state announced via postgrant inform. from nat. office to epo 
Ref country code: CH

Free format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMIT

Effective date: 20071003

Ref country code: ES

Free format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMIT

Effective date: 20080114

Ref country code: LI

Free format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMIT

Effective date: 20071003

Ref country code: NL

Free format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMIT

Effective date: 20071003

Ref country code: PT

Free format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMIT

Effective date: 20080303

Ref country code: SE

Free format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMIT

Effective date: 20080103 

30 mag 2008 PGFP Postgrant: annual fees paid to national office 
Ref country code: DE

Payment date: 20080131

Year of fee payment: 08 

30 apr 2008 PG25 Lapsed in a contracting state announced via postgrant inform. from nat. office to epo 
Ref country code: CH

Free format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMIT

Effective date: 20071003

Ref country code: ES

Free format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMIT

Effective date: 20080114

Ref country code: LI

Free format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMIT

Effective date: 20071003

Ref country code: NL

Free format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMIT

Effective date: 20071003

Ref country code: SE

Free format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMIT

Effective date: 20080103 

30 apr 2008 PGFP Postgrant: annual fees paid to national office 
Ref country code: GB

Payment date: 20071227

Year of fee payment: 08 

15 apr 2008 REG Reference to a national code 
Ref country code: CH

Ref legal event code: PL 

1 apr 2008 NLV1 Nl: lapsed or annulled due to failure to fulfill the requirements of art. 29p and 29m of the patents act; no legal effect from  
15 nov 2007 REF Corresponds to: 
Ref document number: 60036650

Country of ref document: DE

Date of ref document: 20071115

Kind code of ref document: P 

14 nov 2007 REG Reference to a national code 
Ref country code: IE

Ref legal event code: FG4D 

30 ott 2007 REG Reference to a national code 
Ref country code: CH

Ref legal event code: EP 

3 ott 2007 AK Designated contracting states: 
Kind code of ref document: B1

Designated state(s): AT BE CH CY DE DK ES FI FR GB GR IE IT LI LU MC NL PT SE TR 

3 ott 2007 REG Reference to a national code 
Ref country code: GB

Ref legal event code: FG4D 

2 nov 2006 17Q First examination report 
Effective date: 20060720 

23 ago 2006 17Q First examination report 
Effective date: 20060720 

21 apr 2004 AK Designated contracting states: 
Kind code of ref document: A2

Designated state(s): AT BE CH CY DE DK ES FI FR GB GR IE IT LI LU MC NL PT SE TR 

21 apr 2004 A4 Supplementary search report 
Effective date: 20040303 

21 apr 2004 17P Request for examination filed 
Effective date: 20030317 








 
     
