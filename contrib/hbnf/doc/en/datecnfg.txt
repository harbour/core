/* $DOC$
   $NAME$
      ft_DateCnfg()
   $CATEGORY$
      Date/Time
   $ONELINER$
      Set beginning of year/week for ft_*() date functions
   $SYNTAX$
      ft_DateCnfg( [ <cFYStart> ], [ <nDow> ] ) -> aDateInfo
   $ARGUMENTS$
      <cFYStart> is a character date string in the user's system date
      format, i.e., the same as the user would enter for CToD().  If
      this argument is NIL, the current value is unchanged.

      Note: The year portion of the date string must be present and
      be a valid year; however, it has no real meaning.

      <nDow> is a number from 1 to 7 (1 = Sunday) indicating the
      desired start of a work week.  If this argument is NIL,
      the current value is unchanged.

   $RETURNS$
      A 2-element array containing the following information:

         aDateInfo[1] - an ANSI date string indicating the beginning
                        date of the year.  Only the month and day are
                        meaningful.

         aDateInfo[2] - the number of the first day of the week
                        (1 = Sunday)

   $DESCRIPTION$
      ft_DateCnfg() is called internally by many of the date functions
      in the library to determine the beginning of year date and
      beginning of week day.

      The default beginning of the year is January 1st and the default
      beginning of the week is Sunday (day 1).  Either or both of these
      settings may be changed by calling ft_DateCnfg() with the proper
      arguments.  They will retain their values for the duration of the
      program or until they are changed again by a subsequent call to
      ft_DateCnfg().

      It is not necessary to call ft_DateCnfg() unless you need to
      change the defaults.

      ft_DateCnfg() affects the following library functions:

        ft_Week()       ft_AcctWeek()       ft_DayToBoW()
        ft_Month()      ft_AcctMonth()      ft_DayOfYr()
        ft_Qtr()        ft_AcctQtr()        ft_AcctAdj()
        ft_Year()       ft_AcctYear()
   $EXAMPLES$
      // Configure library date functions to begin year on
      //  July 1st.

      Set( _SET_DATEFORMAT, "yyyy-mm-dd" )
      ft_DateCnfg( "1980-07-01" )    // year is insignificant

      // Examples of return values:

      //                                          aArray[1]    aArray[2]
      //  System date format: American

      SET DATE TO AMERICAN
      aArray := ft_DateCnfg()                //  "1980.01.01"     1 (Sun.)
      aArray := ft_DateCnfg( "07/01/80" )    //  "1980.07.01"     1 (Sun.)
      aArray := ft_DateCnfg( "07/01/80", 2 ) //  "1980.07.01"     2 (Mon.)
      aArray := ft_DateCnfg( , 2 )           //  "1980.01.01"     2 (Mon.)

      //  System date format: British

      SET DATE TO BRITISH
      aArray := ft_DateCnfg( "01/07/80", 2 ) //  "1980.07.01"     2 (Mon.)
   $SEEALSO$
      ft_AcctAdj()
   $END$
 */
