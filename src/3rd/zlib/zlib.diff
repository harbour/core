diff --strip-trailing-cr -urN zlib.orig/crc32.c zlib/crc32.c
--- zlib.orig/crc32.c	2023-08-03 20:53:24.000000000 +0000
+++ zlib/crc32.c	2023-11-06 13:25:00.000000000 +0000
@@ -20,6 +20,8 @@
   produced, so that this one source file can be compiled to an executable.
  */
 
+#define NOBYFOUR
+
 #ifdef MAKECRCH
 #  include <stdio.h>
 #  ifndef DYNAMIC_CRC_TABLE
diff --strip-trailing-cr -urN zlib.orig/deflate.c zlib/deflate.c
--- zlib.orig/deflate.c	2023-08-18 08:45:36.000000000 +0000
+++ zlib/deflate.c	2023-11-06 13:25:00.000000000 +0000
@@ -51,6 +51,10 @@
 
 #include "deflate.h"
 
+#ifdef STDC           /* need ANSI C limits.h to determine sizes */
+#  include <limits.h>
+#endif
+
 const char deflate_copyright[] =
    " deflate 1.3 Copyright 1995-2023 Jean-loup Gailly and Mark Adler ";
 /*
@@ -259,6 +263,7 @@
         more = (unsigned)(s->window_size -(ulg)s->lookahead -(ulg)s->strstart);
 
         /* Deal with !@#$% 64K limit: */
+#if defined( UINT_MAX ) && UINT_MAX <= 0xFFFF
         if (sizeof(int) <= 2) {
             if (more == 0 && s->strstart == 0 && s->lookahead == 0) {
                 more = wsize;
@@ -270,6 +275,7 @@
                 more--;
             }
         }
+#endif
 
         /* If the window is almost full and there is insufficient lookahead,
          * move the upper half to the lower one to make room in the upper half.
@@ -2012,7 +2018,7 @@
  */
 local block_state deflate_rle(deflate_state *s, int flush) {
     int bflush;             /* set if current block must be flushed */
-    uInt prev;              /* byte at distance one to match */
+    Byte prev;              /* byte at distance one to match */
     Bytef *scan, *strend;   /* scan goes up to strend for length of run */
 
     for (;;) {
diff --strip-trailing-cr -urN zlib.orig/gzguts.h zlib/gzguts.h
--- zlib.orig/gzguts.h	2023-07-30 05:13:09.000000000 +0000
+++ zlib/gzguts.h	2023-11-06 13:47:36.000000000 +0000
@@ -34,7 +34,8 @@
 #  include <stddef.h>
 #endif
 
-#if defined(__TURBOC__) || defined(_MSC_VER) || defined(_WIN32)
+#if defined(__TURBOC__) || defined(_MSC_VER) || defined(_WIN32) || \
+    defined(__XCC__) || defined(__POCC__)
 #  include <io.h>
 #endif
 
@@ -53,7 +54,8 @@
 #  define NO_GZCOMPRESS
 #endif
 
-#if defined(STDC99) || (defined(__TURBOC__) && __TURBOC__ >= 0x550)
+#if defined(STDC99) || (defined(__TURBOC__) && __TURBOC__ >= 0x550) || \
+    defined(__WATCOMC__)
 #  ifndef HAVE_VSNPRINTF
 #    define HAVE_VSNPRINTF
 #  endif
diff --strip-trailing-cr -urN zlib.orig/gzlib.c zlib/gzlib.c
--- zlib.orig/gzlib.c	2023-08-15 00:01:54.000000000 +0000
+++ zlib/gzlib.c	2023-11-06 13:28:17.000000000 +0000
@@ -5,7 +5,11 @@
 
 #include "gzguts.h"
 
-#if defined(_WIN32) && !defined(__BORLANDC__)
+#if defined(__XCC__) || defined(__DMC__) || defined(__MINGW32CE__)
+#  define LSEEK lseek
+#elif defined(__POCC__)
+#  define LSEEK _lseek64
+#elif defined(_WIN32) && !defined(__BORLANDC__)
 #  define LSEEK _lseeki64
 #else
 #if defined(_LARGEFILE64_SOURCE) && _LFS64_LARGEFILE-0
diff --strip-trailing-cr -urN zlib.orig/inflate.c zlib/inflate.c
--- zlib.orig/inflate.c	2023-04-16 04:17:31.000000000 +0000
+++ zlib/inflate.c	2023-11-06 13:25:00.000000000 +0000
@@ -414,6 +414,7 @@
 /* Macros for inflate(): */
 
 /* check function to use adler32() for zlib or crc32() for gzip */
+#undef UPDATE /* VxWorks defines it */
 #ifdef GUNZIP
 #  define UPDATE_CHECK(check, buf, len) \
     (state->flags ? crc32(check, buf, len) : adler32(check, buf, len))
diff --strip-trailing-cr -urN zlib.orig/zconf.h zlib/zconf.h
--- zlib.orig/zconf.h	2023-04-17 21:35:17.000000000 +0000
+++ zlib/zconf.h	2023-11-06 13:25:00.000000000 +0000
@@ -177,7 +177,18 @@
 #if defined(_WINDOWS) && !defined(WINDOWS)
 #  define WINDOWS
 #endif
-#if defined(_WIN32) || defined(_WIN32_WCE) || defined(__WIN32__)
+#if defined(__CEGCC__) || defined(__MINGW32CE__) || \
+    defined(UNDER_CE) || defined(_WIN32_WCE)
+#  ifndef _WINCE
+#    define _WINCE
+#  endif
+#endif
+#if defined(_WINCE)
+#  ifndef NO_ERRNO_H
+#    define NO_ERRNO_H
+#  endif
+#endif
+#if defined(_WIN32) || defined(_WINCE) || defined(__WIN32__)
 #  ifndef WIN32
 #    define WIN32
 #  endif
@@ -383,6 +394,16 @@
 #  endif
 #endif
 
+#if ( defined(__OS2__) || defined(__DOS__) ) && defined(__WATCOMC__)
+#  ifdef ZLIB_DLL
+#    ifdef ZLIB_INTERNAL
+#      define ZEXTERN   extern __declspec(dllexport)
+#    else
+#      define ZEXPORT   extern __declspec(dllimport)
+#    endif
+#  endif
+#endif
+
 #ifndef ZEXTERN
 #  define ZEXTERN extern
 #endif
diff --strip-trailing-cr -urN zlib.orig/zlib.h zlib/zlib.h
--- zlib.orig/zlib.h	2023-08-18 08:45:36.000000000 +0000
+++ zlib/zlib.h	2023-11-06 13:31:34.000000000 +0000
@@ -1900,6 +1900,8 @@
    ZEXTERN uLong ZEXPORT adler32_combine(uLong, uLong, z_off_t);
    ZEXTERN uLong ZEXPORT crc32_combine(uLong, uLong, z_off_t);
    ZEXTERN uLong ZEXPORT crc32_combine_gen(z_off_t);
+   ZEXTERN uLong ZEXPORT adler32_combine64 OF((uLong, uLong, z_off64_t));
+   ZEXTERN uLong ZEXPORT crc32_combine64 OF((uLong, uLong, z_off64_t));
 #endif
 
 #else /* Z_SOLO */
diff --strip-trailing-cr -urN zlib.orig/zutil.c zlib/zutil.c
--- zlib.orig/zutil.c	2023-04-16 04:17:31.000000000 +0000
+++ zlib/zutil.c	2023-11-06 13:34:00.000000000 +0000
@@ -132,7 +132,7 @@
     return ERR_MSG(err);
 }
 
-#if defined(_WIN32_WCE) && _WIN32_WCE < 0x800
+#if defined(_WINCE) && 0
     /* The older Microsoft C Run-Time Library for Windows CE doesn't have
      * errno.  We define it as a global variable to simplify porting.
      * Its value is always 0 and should not be used.
diff --strip-trailing-cr -urN zlib.orig/zutil.h zlib/zutil.h
--- zlib.orig/zutil.h	2023-04-16 04:17:31.000000000 +0000
+++ zlib/zutil.h	2023-11-06 13:35:47.000000000 +0000
@@ -22,7 +22,7 @@
 #include "zlib.h"
 
 #if defined(STDC) && !defined(Z_SOLO)
-#  if !(defined(_WIN32_WCE) && defined(_MSC_VER))
+#  if !(defined(_WINCE) && defined(_MSC_VER))
 #    include <stddef.h>
 #  endif
 #  include <string.h>
@@ -175,8 +175,7 @@
 #endif
 
 #if (defined(_MSC_VER) && (_MSC_VER > 600)) && !defined __INTERIX
-#  if defined(_WIN32_WCE)
-#    define fdopen(fd,mode) NULL /* No fdopen() */
+#  if defined(_WINCE)
 #  else
 #    define fdopen(fd,type)  _fdopen(fd,type)
 #  endif
